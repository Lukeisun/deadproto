// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: uifontfile_format.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_uifontfile_5fformat_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_uifontfile_5fformat_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_uifontfile_5fformat_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_uifontfile_5fformat_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_uifontfile_5fformat_2eproto;
class CUIFontFilePB;
struct CUIFontFilePBDefaultTypeInternal;
extern CUIFontFilePBDefaultTypeInternal _CUIFontFilePB_default_instance_;
class CUIFontFilePackagePB;
struct CUIFontFilePackagePBDefaultTypeInternal;
extern CUIFontFilePackagePBDefaultTypeInternal _CUIFontFilePackagePB_default_instance_;
class CUIFontFilePackagePB_CUIEncryptedFontFilePB;
struct CUIFontFilePackagePB_CUIEncryptedFontFilePBDefaultTypeInternal;
extern CUIFontFilePackagePB_CUIEncryptedFontFilePBDefaultTypeInternal _CUIFontFilePackagePB_CUIEncryptedFontFilePB_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class CUIFontFilePackagePB_CUIEncryptedFontFilePB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CUIFontFilePackagePB.CUIEncryptedFontFilePB) */ {
 public:
  inline CUIFontFilePackagePB_CUIEncryptedFontFilePB() : CUIFontFilePackagePB_CUIEncryptedFontFilePB(nullptr) {}
  ~CUIFontFilePackagePB_CUIEncryptedFontFilePB() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CUIFontFilePackagePB_CUIEncryptedFontFilePB(
      ::google::protobuf::internal::ConstantInitialized);

  inline CUIFontFilePackagePB_CUIEncryptedFontFilePB(const CUIFontFilePackagePB_CUIEncryptedFontFilePB& from) : CUIFontFilePackagePB_CUIEncryptedFontFilePB(nullptr, from) {}
  inline CUIFontFilePackagePB_CUIEncryptedFontFilePB(CUIFontFilePackagePB_CUIEncryptedFontFilePB&& from) noexcept
      : CUIFontFilePackagePB_CUIEncryptedFontFilePB(nullptr, std::move(from)) {}
  inline CUIFontFilePackagePB_CUIEncryptedFontFilePB& operator=(const CUIFontFilePackagePB_CUIEncryptedFontFilePB& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUIFontFilePackagePB_CUIEncryptedFontFilePB& operator=(CUIFontFilePackagePB_CUIEncryptedFontFilePB&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CUIFontFilePackagePB_CUIEncryptedFontFilePB& default_instance() {
    return *internal_default_instance();
  }
  static inline const CUIFontFilePackagePB_CUIEncryptedFontFilePB* internal_default_instance() {
    return reinterpret_cast<const CUIFontFilePackagePB_CUIEncryptedFontFilePB*>(
        &_CUIFontFilePackagePB_CUIEncryptedFontFilePB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CUIFontFilePackagePB_CUIEncryptedFontFilePB& a, CUIFontFilePackagePB_CUIEncryptedFontFilePB& b) { a.Swap(&b); }
  inline void Swap(CUIFontFilePackagePB_CUIEncryptedFontFilePB* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CUIFontFilePackagePB_CUIEncryptedFontFilePB* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CUIFontFilePackagePB_CUIEncryptedFontFilePB* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CUIFontFilePackagePB_CUIEncryptedFontFilePB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CUIFontFilePackagePB_CUIEncryptedFontFilePB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CUIFontFilePackagePB_CUIEncryptedFontFilePB& from) { CUIFontFilePackagePB_CUIEncryptedFontFilePB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CUIFontFilePackagePB_CUIEncryptedFontFilePB* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CUIFontFilePackagePB.CUIEncryptedFontFilePB"; }

 protected:
  explicit CUIFontFilePackagePB_CUIEncryptedFontFilePB(::google::protobuf::Arena* arena);
  CUIFontFilePackagePB_CUIEncryptedFontFilePB(::google::protobuf::Arena* arena, const CUIFontFilePackagePB_CUIEncryptedFontFilePB& from);
  CUIFontFilePackagePB_CUIEncryptedFontFilePB(::google::protobuf::Arena* arena, CUIFontFilePackagePB_CUIEncryptedFontFilePB&& from) noexcept
      : CUIFontFilePackagePB_CUIEncryptedFontFilePB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEncryptedContentsFieldNumber = 1,
  };
  // optional bytes encrypted_contents = 1;
  bool has_encrypted_contents() const;
  void clear_encrypted_contents() ;
  const std::string& encrypted_contents() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encrypted_contents(Arg_&& arg, Args_... args);
  std::string* mutable_encrypted_contents();
  PROTOBUF_NODISCARD std::string* release_encrypted_contents();
  void set_allocated_encrypted_contents(std::string* value);

  private:
  const std::string& _internal_encrypted_contents() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encrypted_contents(
      const std::string& value);
  std::string* _internal_mutable_encrypted_contents();

  public:
  // @@protoc_insertion_point(class_scope:CUIFontFilePackagePB.CUIEncryptedFontFilePB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CUIFontFilePackagePB_CUIEncryptedFontFilePB_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CUIFontFilePackagePB_CUIEncryptedFontFilePB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr encrypted_contents_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_uifontfile_5fformat_2eproto;
};
// -------------------------------------------------------------------

class CUIFontFilePB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CUIFontFilePB) */ {
 public:
  inline CUIFontFilePB() : CUIFontFilePB(nullptr) {}
  ~CUIFontFilePB() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CUIFontFilePB(
      ::google::protobuf::internal::ConstantInitialized);

  inline CUIFontFilePB(const CUIFontFilePB& from) : CUIFontFilePB(nullptr, from) {}
  inline CUIFontFilePB(CUIFontFilePB&& from) noexcept
      : CUIFontFilePB(nullptr, std::move(from)) {}
  inline CUIFontFilePB& operator=(const CUIFontFilePB& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUIFontFilePB& operator=(CUIFontFilePB&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CUIFontFilePB& default_instance() {
    return *internal_default_instance();
  }
  static inline const CUIFontFilePB* internal_default_instance() {
    return reinterpret_cast<const CUIFontFilePB*>(
        &_CUIFontFilePB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CUIFontFilePB& a, CUIFontFilePB& b) { a.Swap(&b); }
  inline void Swap(CUIFontFilePB* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CUIFontFilePB* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CUIFontFilePB* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CUIFontFilePB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CUIFontFilePB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CUIFontFilePB& from) { CUIFontFilePB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CUIFontFilePB* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CUIFontFilePB"; }

 protected:
  explicit CUIFontFilePB(::google::protobuf::Arena* arena);
  CUIFontFilePB(::google::protobuf::Arena* arena, const CUIFontFilePB& from);
  CUIFontFilePB(::google::protobuf::Arena* arena, CUIFontFilePB&& from) noexcept
      : CUIFontFilePB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFontFileNameFieldNumber = 1,
    kOpentypeFontDataFieldNumber = 2,
  };
  // optional string font_file_name = 1;
  bool has_font_file_name() const;
  void clear_font_file_name() ;
  const std::string& font_file_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_font_file_name(Arg_&& arg, Args_... args);
  std::string* mutable_font_file_name();
  PROTOBUF_NODISCARD std::string* release_font_file_name();
  void set_allocated_font_file_name(std::string* value);

  private:
  const std::string& _internal_font_file_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_font_file_name(
      const std::string& value);
  std::string* _internal_mutable_font_file_name();

  public:
  // optional bytes opentype_font_data = 2;
  bool has_opentype_font_data() const;
  void clear_opentype_font_data() ;
  const std::string& opentype_font_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_opentype_font_data(Arg_&& arg, Args_... args);
  std::string* mutable_opentype_font_data();
  PROTOBUF_NODISCARD std::string* release_opentype_font_data();
  void set_allocated_opentype_font_data(std::string* value);

  private:
  const std::string& _internal_opentype_font_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_opentype_font_data(
      const std::string& value);
  std::string* _internal_mutable_opentype_font_data();

  public:
  // @@protoc_insertion_point(class_scope:CUIFontFilePB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CUIFontFilePB_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CUIFontFilePB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr font_file_name_;
    ::google::protobuf::internal::ArenaStringPtr opentype_font_data_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_uifontfile_5fformat_2eproto;
};
// -------------------------------------------------------------------

class CUIFontFilePackagePB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CUIFontFilePackagePB) */ {
 public:
  inline CUIFontFilePackagePB() : CUIFontFilePackagePB(nullptr) {}
  ~CUIFontFilePackagePB() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CUIFontFilePackagePB(
      ::google::protobuf::internal::ConstantInitialized);

  inline CUIFontFilePackagePB(const CUIFontFilePackagePB& from) : CUIFontFilePackagePB(nullptr, from) {}
  inline CUIFontFilePackagePB(CUIFontFilePackagePB&& from) noexcept
      : CUIFontFilePackagePB(nullptr, std::move(from)) {}
  inline CUIFontFilePackagePB& operator=(const CUIFontFilePackagePB& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUIFontFilePackagePB& operator=(CUIFontFilePackagePB&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CUIFontFilePackagePB& default_instance() {
    return *internal_default_instance();
  }
  static inline const CUIFontFilePackagePB* internal_default_instance() {
    return reinterpret_cast<const CUIFontFilePackagePB*>(
        &_CUIFontFilePackagePB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CUIFontFilePackagePB& a, CUIFontFilePackagePB& b) { a.Swap(&b); }
  inline void Swap(CUIFontFilePackagePB* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CUIFontFilePackagePB* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CUIFontFilePackagePB* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CUIFontFilePackagePB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CUIFontFilePackagePB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CUIFontFilePackagePB& from) { CUIFontFilePackagePB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CUIFontFilePackagePB* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CUIFontFilePackagePB"; }

 protected:
  explicit CUIFontFilePackagePB(::google::protobuf::Arena* arena);
  CUIFontFilePackagePB(::google::protobuf::Arena* arena, const CUIFontFilePackagePB& from);
  CUIFontFilePackagePB(::google::protobuf::Arena* arena, CUIFontFilePackagePB&& from) noexcept
      : CUIFontFilePackagePB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CUIEncryptedFontFilePB = CUIFontFilePackagePB_CUIEncryptedFontFilePB;

  // accessors -------------------------------------------------------
  enum : int {
    kEncryptedFontFilesFieldNumber = 2,
    kPackageVersionFieldNumber = 1,
  };
  // repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;
  int encrypted_font_files_size() const;
  private:
  int _internal_encrypted_font_files_size() const;

  public:
  void clear_encrypted_font_files() ;
  ::CUIFontFilePackagePB_CUIEncryptedFontFilePB* mutable_encrypted_font_files(int index);
  ::google::protobuf::RepeatedPtrField<::CUIFontFilePackagePB_CUIEncryptedFontFilePB>* mutable_encrypted_font_files();

  private:
  const ::google::protobuf::RepeatedPtrField<::CUIFontFilePackagePB_CUIEncryptedFontFilePB>& _internal_encrypted_font_files() const;
  ::google::protobuf::RepeatedPtrField<::CUIFontFilePackagePB_CUIEncryptedFontFilePB>* _internal_mutable_encrypted_font_files();
  public:
  const ::CUIFontFilePackagePB_CUIEncryptedFontFilePB& encrypted_font_files(int index) const;
  ::CUIFontFilePackagePB_CUIEncryptedFontFilePB* add_encrypted_font_files();
  const ::google::protobuf::RepeatedPtrField<::CUIFontFilePackagePB_CUIEncryptedFontFilePB>& encrypted_font_files() const;
  // required uint32 package_version = 1;
  bool has_package_version() const;
  void clear_package_version() ;
  ::uint32_t package_version() const;
  void set_package_version(::uint32_t value);

  private:
  ::uint32_t _internal_package_version() const;
  void _internal_set_package_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CUIFontFilePackagePB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CUIFontFilePackagePB_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CUIFontFilePackagePB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CUIFontFilePackagePB_CUIEncryptedFontFilePB > encrypted_font_files_;
    ::uint32_t package_version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_uifontfile_5fformat_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CUIFontFilePB

// optional string font_file_name = 1;
inline bool CUIFontFilePB::has_font_file_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CUIFontFilePB::clear_font_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.font_file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CUIFontFilePB::font_file_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CUIFontFilePB.font_file_name)
  return _internal_font_file_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CUIFontFilePB::set_font_file_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.font_file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CUIFontFilePB.font_file_name)
}
inline std::string* CUIFontFilePB::mutable_font_file_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_font_file_name();
  // @@protoc_insertion_point(field_mutable:CUIFontFilePB.font_file_name)
  return _s;
}
inline const std::string& CUIFontFilePB::_internal_font_file_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.font_file_name_.Get();
}
inline void CUIFontFilePB::_internal_set_font_file_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.font_file_name_.Set(value, GetArena());
}
inline std::string* CUIFontFilePB::_internal_mutable_font_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.font_file_name_.Mutable( GetArena());
}
inline std::string* CUIFontFilePB::release_font_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CUIFontFilePB.font_file_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.font_file_name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.font_file_name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CUIFontFilePB::set_allocated_font_file_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.font_file_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.font_file_name_.IsDefault()) {
          _impl_.font_file_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CUIFontFilePB.font_file_name)
}

// optional bytes opentype_font_data = 2;
inline bool CUIFontFilePB::has_opentype_font_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CUIFontFilePB::clear_opentype_font_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.opentype_font_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CUIFontFilePB::opentype_font_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CUIFontFilePB.opentype_font_data)
  return _internal_opentype_font_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CUIFontFilePB::set_opentype_font_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.opentype_font_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CUIFontFilePB.opentype_font_data)
}
inline std::string* CUIFontFilePB::mutable_opentype_font_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_opentype_font_data();
  // @@protoc_insertion_point(field_mutable:CUIFontFilePB.opentype_font_data)
  return _s;
}
inline const std::string& CUIFontFilePB::_internal_opentype_font_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.opentype_font_data_.Get();
}
inline void CUIFontFilePB::_internal_set_opentype_font_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.opentype_font_data_.Set(value, GetArena());
}
inline std::string* CUIFontFilePB::_internal_mutable_opentype_font_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.opentype_font_data_.Mutable( GetArena());
}
inline std::string* CUIFontFilePB::release_opentype_font_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CUIFontFilePB.opentype_font_data)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.opentype_font_data_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.opentype_font_data_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CUIFontFilePB::set_allocated_opentype_font_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.opentype_font_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.opentype_font_data_.IsDefault()) {
          _impl_.opentype_font_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CUIFontFilePB.opentype_font_data)
}

// -------------------------------------------------------------------

// CUIFontFilePackagePB_CUIEncryptedFontFilePB

// optional bytes encrypted_contents = 1;
inline bool CUIFontFilePackagePB_CUIEncryptedFontFilePB::has_encrypted_contents() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CUIFontFilePackagePB_CUIEncryptedFontFilePB::clear_encrypted_contents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_contents_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CUIFontFilePackagePB_CUIEncryptedFontFilePB::encrypted_contents() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CUIFontFilePackagePB.CUIEncryptedFontFilePB.encrypted_contents)
  return _internal_encrypted_contents();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CUIFontFilePackagePB_CUIEncryptedFontFilePB::set_encrypted_contents(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.encrypted_contents_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CUIFontFilePackagePB.CUIEncryptedFontFilePB.encrypted_contents)
}
inline std::string* CUIFontFilePackagePB_CUIEncryptedFontFilePB::mutable_encrypted_contents() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encrypted_contents();
  // @@protoc_insertion_point(field_mutable:CUIFontFilePackagePB.CUIEncryptedFontFilePB.encrypted_contents)
  return _s;
}
inline const std::string& CUIFontFilePackagePB_CUIEncryptedFontFilePB::_internal_encrypted_contents() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encrypted_contents_.Get();
}
inline void CUIFontFilePackagePB_CUIEncryptedFontFilePB::_internal_set_encrypted_contents(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.encrypted_contents_.Set(value, GetArena());
}
inline std::string* CUIFontFilePackagePB_CUIEncryptedFontFilePB::_internal_mutable_encrypted_contents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.encrypted_contents_.Mutable( GetArena());
}
inline std::string* CUIFontFilePackagePB_CUIEncryptedFontFilePB::release_encrypted_contents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CUIFontFilePackagePB.CUIEncryptedFontFilePB.encrypted_contents)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.encrypted_contents_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.encrypted_contents_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CUIFontFilePackagePB_CUIEncryptedFontFilePB::set_allocated_encrypted_contents(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.encrypted_contents_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.encrypted_contents_.IsDefault()) {
          _impl_.encrypted_contents_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CUIFontFilePackagePB.CUIEncryptedFontFilePB.encrypted_contents)
}

// -------------------------------------------------------------------

// CUIFontFilePackagePB

// required uint32 package_version = 1;
inline bool CUIFontFilePackagePB::has_package_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CUIFontFilePackagePB::clear_package_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_version_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CUIFontFilePackagePB::package_version() const {
  // @@protoc_insertion_point(field_get:CUIFontFilePackagePB.package_version)
  return _internal_package_version();
}
inline void CUIFontFilePackagePB::set_package_version(::uint32_t value) {
  _internal_set_package_version(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CUIFontFilePackagePB.package_version)
}
inline ::uint32_t CUIFontFilePackagePB::_internal_package_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.package_version_;
}
inline void CUIFontFilePackagePB::_internal_set_package_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_version_ = value;
}

// repeated .CUIFontFilePackagePB.CUIEncryptedFontFilePB encrypted_font_files = 2;
inline int CUIFontFilePackagePB::_internal_encrypted_font_files_size() const {
  return _internal_encrypted_font_files().size();
}
inline int CUIFontFilePackagePB::encrypted_font_files_size() const {
  return _internal_encrypted_font_files_size();
}
inline void CUIFontFilePackagePB::clear_encrypted_font_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_font_files_.Clear();
}
inline ::CUIFontFilePackagePB_CUIEncryptedFontFilePB* CUIFontFilePackagePB::mutable_encrypted_font_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CUIFontFilePackagePB.encrypted_font_files)
  return _internal_mutable_encrypted_font_files()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CUIFontFilePackagePB_CUIEncryptedFontFilePB>* CUIFontFilePackagePB::mutable_encrypted_font_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CUIFontFilePackagePB.encrypted_font_files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_encrypted_font_files();
}
inline const ::CUIFontFilePackagePB_CUIEncryptedFontFilePB& CUIFontFilePackagePB::encrypted_font_files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CUIFontFilePackagePB.encrypted_font_files)
  return _internal_encrypted_font_files().Get(index);
}
inline ::CUIFontFilePackagePB_CUIEncryptedFontFilePB* CUIFontFilePackagePB::add_encrypted_font_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CUIFontFilePackagePB_CUIEncryptedFontFilePB* _add = _internal_mutable_encrypted_font_files()->Add();
  // @@protoc_insertion_point(field_add:CUIFontFilePackagePB.encrypted_font_files)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CUIFontFilePackagePB_CUIEncryptedFontFilePB>& CUIFontFilePackagePB::encrypted_font_files() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CUIFontFilePackagePB.encrypted_font_files)
  return _internal_encrypted_font_files();
}
inline const ::google::protobuf::RepeatedPtrField<::CUIFontFilePackagePB_CUIEncryptedFontFilePB>&
CUIFontFilePackagePB::_internal_encrypted_font_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encrypted_font_files_;
}
inline ::google::protobuf::RepeatedPtrField<::CUIFontFilePackagePB_CUIEncryptedFontFilePB>*
CUIFontFilePackagePB::_internal_mutable_encrypted_font_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.encrypted_font_files_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_uifontfile_5fformat_2eproto_2epb_2eh
