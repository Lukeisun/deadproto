// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: gcsystemmsgs.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_gcsystemmsgs_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_gcsystemmsgs_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_gcsystemmsgs_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_gcsystemmsgs_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_gcsystemmsgs_2eproto;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum ESOMsg : int {
  k_ESOMsg_Create = 21,
  k_ESOMsg_Update = 22,
  k_ESOMsg_Destroy = 23,
  k_ESOMsg_CacheSubscribed = 24,
  k_ESOMsg_CacheUnsubscribed = 25,
  k_ESOMsg_UpdateMultiple = 26,
  k_ESOMsg_CacheSubscriptionRefresh = 28,
  k_ESOMsg_CacheSubscribedUpToDate = 29,
};

bool ESOMsg_IsValid(int value);
extern const uint32_t ESOMsg_internal_data_[];
constexpr ESOMsg ESOMsg_MIN = static_cast<ESOMsg>(21);
constexpr ESOMsg ESOMsg_MAX = static_cast<ESOMsg>(29);
constexpr int ESOMsg_ARRAYSIZE = 29 + 1;
const ::google::protobuf::EnumDescriptor*
ESOMsg_descriptor();
template <typename T>
const std::string& ESOMsg_Name(T value) {
  static_assert(std::is_same<T, ESOMsg>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ESOMsg_Name().");
  return ESOMsg_Name(static_cast<ESOMsg>(value));
}
template <>
inline const std::string& ESOMsg_Name(ESOMsg value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ESOMsg_descriptor,
                                                 21, 29>(
      static_cast<int>(value));
}
inline bool ESOMsg_Parse(absl::string_view name, ESOMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESOMsg>(
      ESOMsg_descriptor(), name, value);
}
enum EGCBaseClientMsg : int {
  k_EMsgGCPingRequest = 3001,
  k_EMsgGCPingResponse = 3002,
  k_EMsgGCToClientPollConvarRequest = 3003,
  k_EMsgGCToClientPollConvarResponse = 3004,
  k_EMsgGCCompressedMsgToClient = 3005,
  k_EMsgGCCompressedMsgToClient_Legacy = 523,
  k_EMsgGCToClientRequestDropped = 3006,
  k_EMsgGCClientWelcome = 4004,
  k_EMsgGCServerWelcome = 4005,
  k_EMsgGCClientHello = 4006,
  k_EMsgGCServerHello = 4007,
  k_EMsgGCClientConnectionStatus = 4009,
  k_EMsgGCServerConnectionStatus = 4010,
};

bool EGCBaseClientMsg_IsValid(int value);
extern const uint32_t EGCBaseClientMsg_internal_data_[];
constexpr EGCBaseClientMsg EGCBaseClientMsg_MIN = static_cast<EGCBaseClientMsg>(523);
constexpr EGCBaseClientMsg EGCBaseClientMsg_MAX = static_cast<EGCBaseClientMsg>(4010);
constexpr int EGCBaseClientMsg_ARRAYSIZE = 4010 + 1;
const ::google::protobuf::EnumDescriptor*
EGCBaseClientMsg_descriptor();
template <typename T>
const std::string& EGCBaseClientMsg_Name(T value) {
  static_assert(std::is_same<T, EGCBaseClientMsg>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EGCBaseClientMsg_Name().");
  return ::google::protobuf::internal::NameOfEnum(EGCBaseClientMsg_descriptor(), value);
}
inline bool EGCBaseClientMsg_Parse(absl::string_view name, EGCBaseClientMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCBaseClientMsg>(
      EGCBaseClientMsg_descriptor(), name, value);
}

// ===================================================================



// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ESOMsg> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ESOMsg>() {
  return ::ESOMsg_descriptor();
}
template <>
struct is_proto_enum<::EGCBaseClientMsg> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::EGCBaseClientMsg>() {
  return ::EGCBaseClientMsg_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_gcsystemmsgs_2eproto_2epb_2eh
