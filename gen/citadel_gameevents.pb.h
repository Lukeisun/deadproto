// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: citadel_gameevents.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_citadel_5fgameevents_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_citadel_5fgameevents_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/descriptor.pb.h"
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_citadel_5fgameevents_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_citadel_5fgameevents_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_citadel_5fgameevents_2eproto;
class CMsgBulletImpact;
struct CMsgBulletImpactDefaultTypeInternal;
extern CMsgBulletImpactDefaultTypeInternal _CMsgBulletImpact_default_instance_;
class CMsgDisableSatVolumesEvent;
struct CMsgDisableSatVolumesEventDefaultTypeInternal;
extern CMsgDisableSatVolumesEventDefaultTypeInternal _CMsgDisableSatVolumesEvent_default_instance_;
class CMsgEnableSatVolumesEvent;
struct CMsgEnableSatVolumesEventDefaultTypeInternal;
extern CMsgEnableSatVolumesEventDefaultTypeInternal _CMsgEnableSatVolumesEvent_default_instance_;
class CMsgFireBullets;
struct CMsgFireBulletsDefaultTypeInternal;
extern CMsgFireBulletsDefaultTypeInternal _CMsgFireBullets_default_instance_;
class CMsgFireBullets_TracerAssignment;
struct CMsgFireBullets_TracerAssignmentDefaultTypeInternal;
extern CMsgFireBullets_TracerAssignmentDefaultTypeInternal _CMsgFireBullets_TracerAssignment_default_instance_;
class CMsgParticleSystemManager;
struct CMsgParticleSystemManagerDefaultTypeInternal;
extern CMsgParticleSystemManagerDefaultTypeInternal _CMsgParticleSystemManager_default_instance_;
class CMsgParticleSystemManager_CreateParticle;
struct CMsgParticleSystemManager_CreateParticleDefaultTypeInternal;
extern CMsgParticleSystemManager_CreateParticleDefaultTypeInternal _CMsgParticleSystemManager_CreateParticle_default_instance_;
class CMsgParticleSystemManager_DestroyParticle;
struct CMsgParticleSystemManager_DestroyParticleDefaultTypeInternal;
extern CMsgParticleSystemManager_DestroyParticleDefaultTypeInternal _CMsgParticleSystemManager_DestroyParticle_default_instance_;
class CMsgParticleSystemManager_DestroyParticleInvolving;
struct CMsgParticleSystemManager_DestroyParticleInvolvingDefaultTypeInternal;
extern CMsgParticleSystemManager_DestroyParticleInvolvingDefaultTypeInternal _CMsgParticleSystemManager_DestroyParticleInvolving_default_instance_;
class CMsgParticleSystemManager_ReleaseParticleIndex;
struct CMsgParticleSystemManager_ReleaseParticleIndexDefaultTypeInternal;
extern CMsgParticleSystemManager_ReleaseParticleIndexDefaultTypeInternal _CMsgParticleSystemManager_ReleaseParticleIndex_default_instance_;
class CMsgParticleSystemManager_UpdateParticle;
struct CMsgParticleSystemManager_UpdateParticleDefaultTypeInternal;
extern CMsgParticleSystemManager_UpdateParticleDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticle_default_instance_;
class CMsgParticleSystemManager_UpdateParticleEnt;
struct CMsgParticleSystemManager_UpdateParticleEntDefaultTypeInternal;
extern CMsgParticleSystemManager_UpdateParticleEntDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleEnt_default_instance_;
class CMsgParticleSystemManager_UpdateParticleFallback;
struct CMsgParticleSystemManager_UpdateParticleFallbackDefaultTypeInternal;
extern CMsgParticleSystemManager_UpdateParticleFallbackDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleFallback_default_instance_;
class CMsgParticleSystemManager_UpdateParticleFrozen;
struct CMsgParticleSystemManager_UpdateParticleFrozenDefaultTypeInternal;
extern CMsgParticleSystemManager_UpdateParticleFrozenDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleFrozen_default_instance_;
class CMsgParticleSystemManager_UpdateParticleFwd;
struct CMsgParticleSystemManager_UpdateParticleFwdDefaultTypeInternal;
extern CMsgParticleSystemManager_UpdateParticleFwdDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleFwd_default_instance_;
class CMsgParticleSystemManager_UpdateParticleOffset;
struct CMsgParticleSystemManager_UpdateParticleOffsetDefaultTypeInternal;
extern CMsgParticleSystemManager_UpdateParticleOffsetDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleOffset_default_instance_;
class CMsgParticleSystemManager_UpdateParticleOrient;
struct CMsgParticleSystemManager_UpdateParticleOrientDefaultTypeInternal;
extern CMsgParticleSystemManager_UpdateParticleOrientDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleOrient_default_instance_;
class CMsgParticleSystemManager_UpdateParticleShouldDraw;
struct CMsgParticleSystemManager_UpdateParticleShouldDrawDefaultTypeInternal;
extern CMsgParticleSystemManager_UpdateParticleShouldDrawDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleShouldDraw_default_instance_;
class CMsgPlaceSatVolumeEvent;
struct CMsgPlaceSatVolumeEventDefaultTypeInternal;
extern CMsgPlaceSatVolumeEventDefaultTypeInternal _CMsgPlaceSatVolumeEvent_default_instance_;
class CMsgPlayerAnimEvent;
struct CMsgPlayerAnimEventDefaultTypeInternal;
extern CMsgPlayerAnimEventDefaultTypeInternal _CMsgPlayerAnimEvent_default_instance_;
class CMsgRemoveSatVolumeEvent;
struct CMsgRemoveSatVolumeEventDefaultTypeInternal;
extern CMsgRemoveSatVolumeEventDefaultTypeInternal _CMsgRemoveSatVolumeEvent_default_instance_;
class CMsgScreenTextPretty;
struct CMsgScreenTextPrettyDefaultTypeInternal;
extern CMsgScreenTextPrettyDefaultTypeInternal _CMsgScreenTextPretty_default_instance_;
class CMsgServerRequestedTracer;
struct CMsgServerRequestedTracerDefaultTypeInternal;
extern CMsgServerRequestedTracerDefaultTypeInternal _CMsgServerRequestedTracer_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum ECitadelGameEvents : int {
  GE_FireBullets = 450,
  GE_PlayerAnimEvent = 451,
  GE_ParticleSystemManager = 458,
  GE_ScreenTextPretty = 459,
  GE_ServerRequestedTracer = 460,
  GE_BulletImpact = 461,
  GE_EnableSatVolumesEvent = 462,
  GE_PlaceSatVolumeEvent = 463,
  GE_DisableSatVolumesEvent = 464,
  GE_RemoveSatVolumeEvent = 465,
};

bool ECitadelGameEvents_IsValid(int value);
extern const uint32_t ECitadelGameEvents_internal_data_[];
constexpr ECitadelGameEvents ECitadelGameEvents_MIN = static_cast<ECitadelGameEvents>(450);
constexpr ECitadelGameEvents ECitadelGameEvents_MAX = static_cast<ECitadelGameEvents>(465);
constexpr int ECitadelGameEvents_ARRAYSIZE = 465 + 1;
const ::google::protobuf::EnumDescriptor*
ECitadelGameEvents_descriptor();
template <typename T>
const std::string& ECitadelGameEvents_Name(T value) {
  static_assert(std::is_same<T, ECitadelGameEvents>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ECitadelGameEvents_Name().");
  return ECitadelGameEvents_Name(static_cast<ECitadelGameEvents>(value));
}
template <>
inline const std::string& ECitadelGameEvents_Name(ECitadelGameEvents value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ECitadelGameEvents_descriptor,
                                                 450, 465>(
      static_cast<int>(value));
}
inline bool ECitadelGameEvents_Parse(absl::string_view name, ECitadelGameEvents* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECitadelGameEvents>(
      ECitadelGameEvents_descriptor(), name, value);
}
enum PARTICLE_SYSTEM_MANAGER_MESSAGE : int {
  PARTICLE_SYSTEM_MANAGER_EVENT_CREATE = 0,
  PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY = 1,
  PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY_INVOLVING = 2,
  PARTICLE_SYSTEM_MANAGER_EVENT_RELEASE = 3,
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE = 4,
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FORWARD = 5,
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ORIENTATION = 6,
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FALLBACK = 7,
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ENT = 8,
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_OFFSET = 9,
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FROZEN = 10,
  PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_SHOULD_DRAW = 11,
};

bool PARTICLE_SYSTEM_MANAGER_MESSAGE_IsValid(int value);
extern const uint32_t PARTICLE_SYSTEM_MANAGER_MESSAGE_internal_data_[];
constexpr PARTICLE_SYSTEM_MANAGER_MESSAGE PARTICLE_SYSTEM_MANAGER_MESSAGE_MIN = static_cast<PARTICLE_SYSTEM_MANAGER_MESSAGE>(0);
constexpr PARTICLE_SYSTEM_MANAGER_MESSAGE PARTICLE_SYSTEM_MANAGER_MESSAGE_MAX = static_cast<PARTICLE_SYSTEM_MANAGER_MESSAGE>(11);
constexpr int PARTICLE_SYSTEM_MANAGER_MESSAGE_ARRAYSIZE = 11 + 1;
const ::google::protobuf::EnumDescriptor*
PARTICLE_SYSTEM_MANAGER_MESSAGE_descriptor();
template <typename T>
const std::string& PARTICLE_SYSTEM_MANAGER_MESSAGE_Name(T value) {
  static_assert(std::is_same<T, PARTICLE_SYSTEM_MANAGER_MESSAGE>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PARTICLE_SYSTEM_MANAGER_MESSAGE_Name().");
  return PARTICLE_SYSTEM_MANAGER_MESSAGE_Name(static_cast<PARTICLE_SYSTEM_MANAGER_MESSAGE>(value));
}
template <>
inline const std::string& PARTICLE_SYSTEM_MANAGER_MESSAGE_Name(PARTICLE_SYSTEM_MANAGER_MESSAGE value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PARTICLE_SYSTEM_MANAGER_MESSAGE_descriptor,
                                                 0, 11>(
      static_cast<int>(value));
}
inline bool PARTICLE_SYSTEM_MANAGER_MESSAGE_Parse(absl::string_view name, PARTICLE_SYSTEM_MANAGER_MESSAGE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PARTICLE_SYSTEM_MANAGER_MESSAGE>(
      PARTICLE_SYSTEM_MANAGER_MESSAGE_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class CMsgScreenTextPretty final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgScreenTextPretty) */ {
 public:
  inline CMsgScreenTextPretty() : CMsgScreenTextPretty(nullptr) {}
  ~CMsgScreenTextPretty() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgScreenTextPretty(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgScreenTextPretty(const CMsgScreenTextPretty& from) : CMsgScreenTextPretty(nullptr, from) {}
  inline CMsgScreenTextPretty(CMsgScreenTextPretty&& from) noexcept
      : CMsgScreenTextPretty(nullptr, std::move(from)) {}
  inline CMsgScreenTextPretty& operator=(const CMsgScreenTextPretty& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgScreenTextPretty& operator=(CMsgScreenTextPretty&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgScreenTextPretty& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgScreenTextPretty* internal_default_instance() {
    return reinterpret_cast<const CMsgScreenTextPretty*>(
        &_CMsgScreenTextPretty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(CMsgScreenTextPretty& a, CMsgScreenTextPretty& b) { a.Swap(&b); }
  inline void Swap(CMsgScreenTextPretty* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgScreenTextPretty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgScreenTextPretty* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgScreenTextPretty>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgScreenTextPretty& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgScreenTextPretty& from) { CMsgScreenTextPretty::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgScreenTextPretty* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgScreenTextPretty"; }

 protected:
  explicit CMsgScreenTextPretty(::google::protobuf::Arena* arena);
  CMsgScreenTextPretty(::google::protobuf::Arena* arena, const CMsgScreenTextPretty& from);
  CMsgScreenTextPretty(::google::protobuf::Arena* arena, CMsgScreenTextPretty&& from) noexcept
      : CMsgScreenTextPretty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTextFieldNumber = 4,
    kFontNameFieldNumber = 10,
    kXPosFieldNumber = 1,
    kYPosFieldNumber = 2,
    kLineFieldNumber = 3,
    kRFieldNumber = 5,
    kGFieldNumber = 6,
    kBFieldNumber = 7,
    kAFieldNumber = 8,
    kDurationFieldNumber = 9,
    kFontSizeFieldNumber = 11,
    kBoldFontFieldNumber = 12,
  };
  // optional string text = 4;
  bool has_text() const;
  void clear_text() ;
  const std::string& text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* value);

  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(
      const std::string& value);
  std::string* _internal_mutable_text();

  public:
  // optional string font_name = 10;
  bool has_font_name() const;
  void clear_font_name() ;
  const std::string& font_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_font_name(Arg_&& arg, Args_... args);
  std::string* mutable_font_name();
  PROTOBUF_NODISCARD std::string* release_font_name();
  void set_allocated_font_name(std::string* value);

  private:
  const std::string& _internal_font_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_font_name(
      const std::string& value);
  std::string* _internal_mutable_font_name();

  public:
  // optional float x_pos = 1;
  bool has_x_pos() const;
  void clear_x_pos() ;
  float x_pos() const;
  void set_x_pos(float value);

  private:
  float _internal_x_pos() const;
  void _internal_set_x_pos(float value);

  public:
  // optional float y_pos = 2;
  bool has_y_pos() const;
  void clear_y_pos() ;
  float y_pos() const;
  void set_y_pos(float value);

  private:
  float _internal_y_pos() const;
  void _internal_set_y_pos(float value);

  public:
  // optional int32 line = 3;
  bool has_line() const;
  void clear_line() ;
  ::int32_t line() const;
  void set_line(::int32_t value);

  private:
  ::int32_t _internal_line() const;
  void _internal_set_line(::int32_t value);

  public:
  // optional int32 r = 5;
  bool has_r() const;
  void clear_r() ;
  ::int32_t r() const;
  void set_r(::int32_t value);

  private:
  ::int32_t _internal_r() const;
  void _internal_set_r(::int32_t value);

  public:
  // optional int32 g = 6;
  bool has_g() const;
  void clear_g() ;
  ::int32_t g() const;
  void set_g(::int32_t value);

  private:
  ::int32_t _internal_g() const;
  void _internal_set_g(::int32_t value);

  public:
  // optional int32 b = 7;
  bool has_b() const;
  void clear_b() ;
  ::int32_t b() const;
  void set_b(::int32_t value);

  private:
  ::int32_t _internal_b() const;
  void _internal_set_b(::int32_t value);

  public:
  // optional int32 a = 8;
  bool has_a() const;
  void clear_a() ;
  ::int32_t a() const;
  void set_a(::int32_t value);

  private:
  ::int32_t _internal_a() const;
  void _internal_set_a(::int32_t value);

  public:
  // optional float duration = 9;
  bool has_duration() const;
  void clear_duration() ;
  float duration() const;
  void set_duration(float value);

  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);

  public:
  // optional int32 font_size = 11;
  bool has_font_size() const;
  void clear_font_size() ;
  ::int32_t font_size() const;
  void set_font_size(::int32_t value);

  private:
  ::int32_t _internal_font_size() const;
  void _internal_set_font_size(::int32_t value);

  public:
  // optional bool bold_font = 12;
  bool has_bold_font() const;
  void clear_bold_font() ;
  bool bold_font() const;
  void set_bold_font(bool value);

  private:
  bool _internal_bold_font() const;
  void _internal_set_bold_font(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgScreenTextPretty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 0,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgScreenTextPretty_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgScreenTextPretty& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr text_;
    ::google::protobuf::internal::ArenaStringPtr font_name_;
    float x_pos_;
    float y_pos_;
    ::int32_t line_;
    ::int32_t r_;
    ::int32_t g_;
    ::int32_t b_;
    ::int32_t a_;
    float duration_;
    ::int32_t font_size_;
    bool bold_font_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgRemoveSatVolumeEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgRemoveSatVolumeEvent) */ {
 public:
  inline CMsgRemoveSatVolumeEvent() : CMsgRemoveSatVolumeEvent(nullptr) {}
  ~CMsgRemoveSatVolumeEvent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgRemoveSatVolumeEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgRemoveSatVolumeEvent(const CMsgRemoveSatVolumeEvent& from) : CMsgRemoveSatVolumeEvent(nullptr, from) {}
  inline CMsgRemoveSatVolumeEvent(CMsgRemoveSatVolumeEvent&& from) noexcept
      : CMsgRemoveSatVolumeEvent(nullptr, std::move(from)) {}
  inline CMsgRemoveSatVolumeEvent& operator=(const CMsgRemoveSatVolumeEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgRemoveSatVolumeEvent& operator=(CMsgRemoveSatVolumeEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgRemoveSatVolumeEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgRemoveSatVolumeEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgRemoveSatVolumeEvent*>(
        &_CMsgRemoveSatVolumeEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(CMsgRemoveSatVolumeEvent& a, CMsgRemoveSatVolumeEvent& b) { a.Swap(&b); }
  inline void Swap(CMsgRemoveSatVolumeEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgRemoveSatVolumeEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgRemoveSatVolumeEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgRemoveSatVolumeEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgRemoveSatVolumeEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgRemoveSatVolumeEvent& from) { CMsgRemoveSatVolumeEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgRemoveSatVolumeEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgRemoveSatVolumeEvent"; }

 protected:
  explicit CMsgRemoveSatVolumeEvent(::google::protobuf::Arena* arena);
  CMsgRemoveSatVolumeEvent(::google::protobuf::Arena* arena, const CMsgRemoveSatVolumeEvent& from);
  CMsgRemoveSatVolumeEvent(::google::protobuf::Arena* arena, CMsgRemoveSatVolumeEvent&& from) noexcept
      : CMsgRemoveSatVolumeEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVolumeIdFieldNumber = 1,
  };
  // optional int32 volume_id = 1;
  bool has_volume_id() const;
  void clear_volume_id() ;
  ::int32_t volume_id() const;
  void set_volume_id(::int32_t value);

  private:
  ::int32_t _internal_volume_id() const;
  void _internal_set_volume_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgRemoveSatVolumeEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgRemoveSatVolumeEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgRemoveSatVolumeEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t volume_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgPlayerAnimEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgPlayerAnimEvent) */ {
 public:
  inline CMsgPlayerAnimEvent() : CMsgPlayerAnimEvent(nullptr) {}
  ~CMsgPlayerAnimEvent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgPlayerAnimEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgPlayerAnimEvent(const CMsgPlayerAnimEvent& from) : CMsgPlayerAnimEvent(nullptr, from) {}
  inline CMsgPlayerAnimEvent(CMsgPlayerAnimEvent&& from) noexcept
      : CMsgPlayerAnimEvent(nullptr, std::move(from)) {}
  inline CMsgPlayerAnimEvent& operator=(const CMsgPlayerAnimEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgPlayerAnimEvent& operator=(CMsgPlayerAnimEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgPlayerAnimEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgPlayerAnimEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerAnimEvent*>(
        &_CMsgPlayerAnimEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CMsgPlayerAnimEvent& a, CMsgPlayerAnimEvent& b) { a.Swap(&b); }
  inline void Swap(CMsgPlayerAnimEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgPlayerAnimEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgPlayerAnimEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgPlayerAnimEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgPlayerAnimEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgPlayerAnimEvent& from) { CMsgPlayerAnimEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgPlayerAnimEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgPlayerAnimEvent"; }

 protected:
  explicit CMsgPlayerAnimEvent(::google::protobuf::Arena* arena);
  CMsgPlayerAnimEvent(::google::protobuf::Arena* arena, const CMsgPlayerAnimEvent& from);
  CMsgPlayerAnimEvent(::google::protobuf::Arena* arena, CMsgPlayerAnimEvent&& from) noexcept
      : CMsgPlayerAnimEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventFieldNumber = 2,
    kDataFieldNumber = 3,
    kPlayerFieldNumber = 1,
  };
  // optional uint32 event = 2;
  bool has_event() const;
  void clear_event() ;
  ::uint32_t event() const;
  void set_event(::uint32_t value);

  private:
  ::uint32_t _internal_event() const;
  void _internal_set_event(::uint32_t value);

  public:
  // optional int32 data = 3;
  bool has_data() const;
  void clear_data() ;
  ::int32_t data() const;
  void set_data(::int32_t value);

  private:
  ::int32_t _internal_data() const;
  void _internal_set_data(::int32_t value);

  public:
  // optional fixed32 player = 1 [default = 16777215];
  bool has_player() const;
  void clear_player() ;
  ::uint32_t player() const;
  void set_player(::uint32_t value);

  private:
  ::uint32_t _internal_player() const;
  void _internal_set_player(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgPlayerAnimEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgPlayerAnimEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgPlayerAnimEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t event_;
    ::int32_t data_;
    ::uint32_t player_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_UpdateParticleShouldDraw final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.UpdateParticleShouldDraw) */ {
 public:
  inline CMsgParticleSystemManager_UpdateParticleShouldDraw() : CMsgParticleSystemManager_UpdateParticleShouldDraw(nullptr) {}
  ~CMsgParticleSystemManager_UpdateParticleShouldDraw() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleShouldDraw(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_UpdateParticleShouldDraw(const CMsgParticleSystemManager_UpdateParticleShouldDraw& from) : CMsgParticleSystemManager_UpdateParticleShouldDraw(nullptr, from) {}
  inline CMsgParticleSystemManager_UpdateParticleShouldDraw(CMsgParticleSystemManager_UpdateParticleShouldDraw&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleShouldDraw(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_UpdateParticleShouldDraw& operator=(const CMsgParticleSystemManager_UpdateParticleShouldDraw& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_UpdateParticleShouldDraw& operator=(CMsgParticleSystemManager_UpdateParticleShouldDraw&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_UpdateParticleShouldDraw& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_UpdateParticleShouldDraw* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_UpdateParticleShouldDraw*>(
        &_CMsgParticleSystemManager_UpdateParticleShouldDraw_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(CMsgParticleSystemManager_UpdateParticleShouldDraw& a, CMsgParticleSystemManager_UpdateParticleShouldDraw& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_UpdateParticleShouldDraw* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_UpdateParticleShouldDraw* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_UpdateParticleShouldDraw* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_UpdateParticleShouldDraw>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_UpdateParticleShouldDraw& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_UpdateParticleShouldDraw& from) { CMsgParticleSystemManager_UpdateParticleShouldDraw::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_UpdateParticleShouldDraw* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.UpdateParticleShouldDraw"; }

 protected:
  explicit CMsgParticleSystemManager_UpdateParticleShouldDraw(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_UpdateParticleShouldDraw(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticleShouldDraw& from);
  CMsgParticleSystemManager_UpdateParticleShouldDraw(::google::protobuf::Arena* arena, CMsgParticleSystemManager_UpdateParticleShouldDraw&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleShouldDraw(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShouldDrawFieldNumber = 1,
  };
  // optional bool should_draw = 1;
  bool has_should_draw() const;
  void clear_should_draw() ;
  bool should_draw() const;
  void set_should_draw(bool value);

  private:
  bool _internal_should_draw() const;
  void _internal_set_should_draw(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.UpdateParticleShouldDraw)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_UpdateParticleShouldDraw_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_UpdateParticleShouldDraw& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool should_draw_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_UpdateParticleFrozen final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.UpdateParticleFrozen) */ {
 public:
  inline CMsgParticleSystemManager_UpdateParticleFrozen() : CMsgParticleSystemManager_UpdateParticleFrozen(nullptr) {}
  ~CMsgParticleSystemManager_UpdateParticleFrozen() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleFrozen(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_UpdateParticleFrozen(const CMsgParticleSystemManager_UpdateParticleFrozen& from) : CMsgParticleSystemManager_UpdateParticleFrozen(nullptr, from) {}
  inline CMsgParticleSystemManager_UpdateParticleFrozen(CMsgParticleSystemManager_UpdateParticleFrozen&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleFrozen(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_UpdateParticleFrozen& operator=(const CMsgParticleSystemManager_UpdateParticleFrozen& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_UpdateParticleFrozen& operator=(CMsgParticleSystemManager_UpdateParticleFrozen&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_UpdateParticleFrozen& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_UpdateParticleFrozen* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_UpdateParticleFrozen*>(
        &_CMsgParticleSystemManager_UpdateParticleFrozen_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(CMsgParticleSystemManager_UpdateParticleFrozen& a, CMsgParticleSystemManager_UpdateParticleFrozen& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_UpdateParticleFrozen* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_UpdateParticleFrozen* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_UpdateParticleFrozen* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_UpdateParticleFrozen>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_UpdateParticleFrozen& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_UpdateParticleFrozen& from) { CMsgParticleSystemManager_UpdateParticleFrozen::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_UpdateParticleFrozen* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.UpdateParticleFrozen"; }

 protected:
  explicit CMsgParticleSystemManager_UpdateParticleFrozen(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_UpdateParticleFrozen(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticleFrozen& from);
  CMsgParticleSystemManager_UpdateParticleFrozen(::google::protobuf::Arena* arena, CMsgParticleSystemManager_UpdateParticleFrozen&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleFrozen(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSetFrozenFieldNumber = 1,
  };
  // optional bool set_frozen = 1;
  bool has_set_frozen() const;
  void clear_set_frozen() ;
  bool set_frozen() const;
  void set_set_frozen(bool value);

  private:
  bool _internal_set_frozen() const;
  void _internal_set_set_frozen(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.UpdateParticleFrozen)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_UpdateParticleFrozen_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_UpdateParticleFrozen& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool set_frozen_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_ReleaseParticleIndex final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.ReleaseParticleIndex) */ {
 public:
  inline CMsgParticleSystemManager_ReleaseParticleIndex() : CMsgParticleSystemManager_ReleaseParticleIndex(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_ReleaseParticleIndex(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_ReleaseParticleIndex(const CMsgParticleSystemManager_ReleaseParticleIndex& from) : CMsgParticleSystemManager_ReleaseParticleIndex(nullptr, from) {}
  inline CMsgParticleSystemManager_ReleaseParticleIndex(CMsgParticleSystemManager_ReleaseParticleIndex&& from) noexcept
      : CMsgParticleSystemManager_ReleaseParticleIndex(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_ReleaseParticleIndex& operator=(const CMsgParticleSystemManager_ReleaseParticleIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_ReleaseParticleIndex& operator=(CMsgParticleSystemManager_ReleaseParticleIndex&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_ReleaseParticleIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_ReleaseParticleIndex* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_ReleaseParticleIndex*>(
        &_CMsgParticleSystemManager_ReleaseParticleIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(CMsgParticleSystemManager_ReleaseParticleIndex& a, CMsgParticleSystemManager_ReleaseParticleIndex& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_ReleaseParticleIndex* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_ReleaseParticleIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_ReleaseParticleIndex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CMsgParticleSystemManager_ReleaseParticleIndex>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgParticleSystemManager_ReleaseParticleIndex& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_ReleaseParticleIndex& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.ReleaseParticleIndex"; }

 protected:
  explicit CMsgParticleSystemManager_ReleaseParticleIndex(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_ReleaseParticleIndex(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_ReleaseParticleIndex& from);
  CMsgParticleSystemManager_ReleaseParticleIndex(::google::protobuf::Arena* arena, CMsgParticleSystemManager_ReleaseParticleIndex&& from) noexcept
      : CMsgParticleSystemManager_ReleaseParticleIndex(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.ReleaseParticleIndex)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_ReleaseParticleIndex_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_ReleaseParticleIndex& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_DestroyParticleInvolving final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.DestroyParticleInvolving) */ {
 public:
  inline CMsgParticleSystemManager_DestroyParticleInvolving() : CMsgParticleSystemManager_DestroyParticleInvolving(nullptr) {}
  ~CMsgParticleSystemManager_DestroyParticleInvolving() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_DestroyParticleInvolving(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_DestroyParticleInvolving(const CMsgParticleSystemManager_DestroyParticleInvolving& from) : CMsgParticleSystemManager_DestroyParticleInvolving(nullptr, from) {}
  inline CMsgParticleSystemManager_DestroyParticleInvolving(CMsgParticleSystemManager_DestroyParticleInvolving&& from) noexcept
      : CMsgParticleSystemManager_DestroyParticleInvolving(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_DestroyParticleInvolving& operator=(const CMsgParticleSystemManager_DestroyParticleInvolving& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_DestroyParticleInvolving& operator=(CMsgParticleSystemManager_DestroyParticleInvolving&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_DestroyParticleInvolving& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_DestroyParticleInvolving* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_DestroyParticleInvolving*>(
        &_CMsgParticleSystemManager_DestroyParticleInvolving_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(CMsgParticleSystemManager_DestroyParticleInvolving& a, CMsgParticleSystemManager_DestroyParticleInvolving& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_DestroyParticleInvolving* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_DestroyParticleInvolving* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_DestroyParticleInvolving* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_DestroyParticleInvolving>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_DestroyParticleInvolving& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_DestroyParticleInvolving& from) { CMsgParticleSystemManager_DestroyParticleInvolving::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_DestroyParticleInvolving* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.DestroyParticleInvolving"; }

 protected:
  explicit CMsgParticleSystemManager_DestroyParticleInvolving(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_DestroyParticleInvolving(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_DestroyParticleInvolving& from);
  CMsgParticleSystemManager_DestroyParticleInvolving(::google::protobuf::Arena* arena, CMsgParticleSystemManager_DestroyParticleInvolving&& from) noexcept
      : CMsgParticleSystemManager_DestroyParticleInvolving(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDestroyImmediatelyFieldNumber = 1,
    kEntityHandleFieldNumber = 3,
  };
  // optional bool destroy_immediately = 1;
  bool has_destroy_immediately() const;
  void clear_destroy_immediately() ;
  bool destroy_immediately() const;
  void set_destroy_immediately(bool value);

  private:
  bool _internal_destroy_immediately() const;
  void _internal_set_destroy_immediately(bool value);

  public:
  // optional uint32 entity_handle = 3 [default = 16777215];
  bool has_entity_handle() const;
  void clear_entity_handle() ;
  ::uint32_t entity_handle() const;
  void set_entity_handle(::uint32_t value);

  private:
  ::uint32_t _internal_entity_handle() const;
  void _internal_set_entity_handle(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.DestroyParticleInvolving)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_DestroyParticleInvolving_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_DestroyParticleInvolving& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool destroy_immediately_;
    ::uint32_t entity_handle_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_DestroyParticle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.DestroyParticle) */ {
 public:
  inline CMsgParticleSystemManager_DestroyParticle() : CMsgParticleSystemManager_DestroyParticle(nullptr) {}
  ~CMsgParticleSystemManager_DestroyParticle() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_DestroyParticle(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_DestroyParticle(const CMsgParticleSystemManager_DestroyParticle& from) : CMsgParticleSystemManager_DestroyParticle(nullptr, from) {}
  inline CMsgParticleSystemManager_DestroyParticle(CMsgParticleSystemManager_DestroyParticle&& from) noexcept
      : CMsgParticleSystemManager_DestroyParticle(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_DestroyParticle& operator=(const CMsgParticleSystemManager_DestroyParticle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_DestroyParticle& operator=(CMsgParticleSystemManager_DestroyParticle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_DestroyParticle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_DestroyParticle* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_DestroyParticle*>(
        &_CMsgParticleSystemManager_DestroyParticle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CMsgParticleSystemManager_DestroyParticle& a, CMsgParticleSystemManager_DestroyParticle& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_DestroyParticle* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_DestroyParticle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_DestroyParticle* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_DestroyParticle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_DestroyParticle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_DestroyParticle& from) { CMsgParticleSystemManager_DestroyParticle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_DestroyParticle* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.DestroyParticle"; }

 protected:
  explicit CMsgParticleSystemManager_DestroyParticle(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_DestroyParticle(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_DestroyParticle& from);
  CMsgParticleSystemManager_DestroyParticle(::google::protobuf::Arena* arena, CMsgParticleSystemManager_DestroyParticle&& from) noexcept
      : CMsgParticleSystemManager_DestroyParticle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDestroyImmediatelyFieldNumber = 1,
  };
  // optional bool destroy_immediately = 1;
  bool has_destroy_immediately() const;
  void clear_destroy_immediately() ;
  bool destroy_immediately() const;
  void set_destroy_immediately(bool value);

  private:
  bool _internal_destroy_immediately() const;
  void _internal_set_destroy_immediately(bool value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.DestroyParticle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_DestroyParticle_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_DestroyParticle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    bool destroy_immediately_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgFireBullets_TracerAssignment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgFireBullets.TracerAssignment) */ {
 public:
  inline CMsgFireBullets_TracerAssignment() : CMsgFireBullets_TracerAssignment(nullptr) {}
  ~CMsgFireBullets_TracerAssignment() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgFireBullets_TracerAssignment(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgFireBullets_TracerAssignment(const CMsgFireBullets_TracerAssignment& from) : CMsgFireBullets_TracerAssignment(nullptr, from) {}
  inline CMsgFireBullets_TracerAssignment(CMsgFireBullets_TracerAssignment&& from) noexcept
      : CMsgFireBullets_TracerAssignment(nullptr, std::move(from)) {}
  inline CMsgFireBullets_TracerAssignment& operator=(const CMsgFireBullets_TracerAssignment& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFireBullets_TracerAssignment& operator=(CMsgFireBullets_TracerAssignment&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgFireBullets_TracerAssignment& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFireBullets_TracerAssignment* internal_default_instance() {
    return reinterpret_cast<const CMsgFireBullets_TracerAssignment*>(
        &_CMsgFireBullets_TracerAssignment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CMsgFireBullets_TracerAssignment& a, CMsgFireBullets_TracerAssignment& b) { a.Swap(&b); }
  inline void Swap(CMsgFireBullets_TracerAssignment* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFireBullets_TracerAssignment* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgFireBullets_TracerAssignment* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgFireBullets_TracerAssignment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgFireBullets_TracerAssignment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgFireBullets_TracerAssignment& from) { CMsgFireBullets_TracerAssignment::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgFireBullets_TracerAssignment* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgFireBullets.TracerAssignment"; }

 protected:
  explicit CMsgFireBullets_TracerAssignment(::google::protobuf::Arena* arena);
  CMsgFireBullets_TracerAssignment(::google::protobuf::Arena* arena, const CMsgFireBullets_TracerAssignment& from);
  CMsgFireBullets_TracerAssignment(::google::protobuf::Arena* arena, CMsgFireBullets_TracerAssignment&& from) noexcept
      : CMsgFireBullets_TracerAssignment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTracerResourceIdFieldNumber = 1,
    kBulletIndiciesFieldNumber = 2,
  };
  // optional uint64 tracer_resource_id = 1;
  bool has_tracer_resource_id() const;
  void clear_tracer_resource_id() ;
  ::uint64_t tracer_resource_id() const;
  void set_tracer_resource_id(::uint64_t value);

  private:
  ::uint64_t _internal_tracer_resource_id() const;
  void _internal_set_tracer_resource_id(::uint64_t value);

  public:
  // optional uint32 bullet_indicies = 2;
  bool has_bullet_indicies() const;
  void clear_bullet_indicies() ;
  ::uint32_t bullet_indicies() const;
  void set_bullet_indicies(::uint32_t value);

  private:
  ::uint32_t _internal_bullet_indicies() const;
  void _internal_set_bullet_indicies(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgFireBullets.TracerAssignment)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgFireBullets_TracerAssignment_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgFireBullets_TracerAssignment& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t tracer_resource_id_;
    ::uint32_t bullet_indicies_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgEnableSatVolumesEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgEnableSatVolumesEvent) */ {
 public:
  inline CMsgEnableSatVolumesEvent() : CMsgEnableSatVolumesEvent(nullptr) {}
  ~CMsgEnableSatVolumesEvent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgEnableSatVolumesEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgEnableSatVolumesEvent(const CMsgEnableSatVolumesEvent& from) : CMsgEnableSatVolumesEvent(nullptr, from) {}
  inline CMsgEnableSatVolumesEvent(CMsgEnableSatVolumesEvent&& from) noexcept
      : CMsgEnableSatVolumesEvent(nullptr, std::move(from)) {}
  inline CMsgEnableSatVolumesEvent& operator=(const CMsgEnableSatVolumesEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgEnableSatVolumesEvent& operator=(CMsgEnableSatVolumesEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgEnableSatVolumesEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgEnableSatVolumesEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgEnableSatVolumesEvent*>(
        &_CMsgEnableSatVolumesEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(CMsgEnableSatVolumesEvent& a, CMsgEnableSatVolumesEvent& b) { a.Swap(&b); }
  inline void Swap(CMsgEnableSatVolumesEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgEnableSatVolumesEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgEnableSatVolumesEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgEnableSatVolumesEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgEnableSatVolumesEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgEnableSatVolumesEvent& from) { CMsgEnableSatVolumesEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgEnableSatVolumesEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgEnableSatVolumesEvent"; }

 protected:
  explicit CMsgEnableSatVolumesEvent(::google::protobuf::Arena* arena);
  CMsgEnableSatVolumesEvent(::google::protobuf::Arena* arena, const CMsgEnableSatVolumesEvent& from);
  CMsgEnableSatVolumesEvent(::google::protobuf::Arena* arena, CMsgEnableSatVolumesEvent&& from) noexcept
      : CMsgEnableSatVolumesEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModeFieldNumber = 1,
    kDesatAmountFieldNumber = 2,
    kSatTintFieldNumber = 3,
    kDesatTintFieldNumber = 4,
    kOutlineColorFieldNumber = 5,
  };
  // optional uint32 mode = 1;
  bool has_mode() const;
  void clear_mode() ;
  ::uint32_t mode() const;
  void set_mode(::uint32_t value);

  private:
  ::uint32_t _internal_mode() const;
  void _internal_set_mode(::uint32_t value);

  public:
  // optional float desat_amount = 2;
  bool has_desat_amount() const;
  void clear_desat_amount() ;
  float desat_amount() const;
  void set_desat_amount(float value);

  private:
  float _internal_desat_amount() const;
  void _internal_set_desat_amount(float value);

  public:
  // optional fixed32 sat_tint = 3;
  bool has_sat_tint() const;
  void clear_sat_tint() ;
  ::uint32_t sat_tint() const;
  void set_sat_tint(::uint32_t value);

  private:
  ::uint32_t _internal_sat_tint() const;
  void _internal_set_sat_tint(::uint32_t value);

  public:
  // optional fixed32 desat_tint = 4;
  bool has_desat_tint() const;
  void clear_desat_tint() ;
  ::uint32_t desat_tint() const;
  void set_desat_tint(::uint32_t value);

  private:
  ::uint32_t _internal_desat_tint() const;
  void _internal_set_desat_tint(::uint32_t value);

  public:
  // optional fixed32 outline_color = 5;
  bool has_outline_color() const;
  void clear_outline_color() ;
  ::uint32_t outline_color() const;
  void set_outline_color(::uint32_t value);

  private:
  ::uint32_t _internal_outline_color() const;
  void _internal_set_outline_color(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgEnableSatVolumesEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgEnableSatVolumesEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgEnableSatVolumesEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t mode_;
    float desat_amount_;
    ::uint32_t sat_tint_;
    ::uint32_t desat_tint_;
    ::uint32_t outline_color_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgDisableSatVolumesEvent final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:CMsgDisableSatVolumesEvent) */ {
 public:
  inline CMsgDisableSatVolumesEvent() : CMsgDisableSatVolumesEvent(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgDisableSatVolumesEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgDisableSatVolumesEvent(const CMsgDisableSatVolumesEvent& from) : CMsgDisableSatVolumesEvent(nullptr, from) {}
  inline CMsgDisableSatVolumesEvent(CMsgDisableSatVolumesEvent&& from) noexcept
      : CMsgDisableSatVolumesEvent(nullptr, std::move(from)) {}
  inline CMsgDisableSatVolumesEvent& operator=(const CMsgDisableSatVolumesEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDisableSatVolumesEvent& operator=(CMsgDisableSatVolumesEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgDisableSatVolumesEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDisableSatVolumesEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgDisableSatVolumesEvent*>(
        &_CMsgDisableSatVolumesEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(CMsgDisableSatVolumesEvent& a, CMsgDisableSatVolumesEvent& b) { a.Swap(&b); }
  inline void Swap(CMsgDisableSatVolumesEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDisableSatVolumesEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgDisableSatVolumesEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<CMsgDisableSatVolumesEvent>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CMsgDisableSatVolumesEvent& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CMsgDisableSatVolumesEvent& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgDisableSatVolumesEvent"; }

 protected:
  explicit CMsgDisableSatVolumesEvent(::google::protobuf::Arena* arena);
  CMsgDisableSatVolumesEvent(::google::protobuf::Arena* arena, const CMsgDisableSatVolumesEvent& from);
  CMsgDisableSatVolumesEvent(::google::protobuf::Arena* arena, CMsgDisableSatVolumesEvent&& from) noexcept
      : CMsgDisableSatVolumesEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:CMsgDisableSatVolumesEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgDisableSatVolumesEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgDisableSatVolumesEvent& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgServerRequestedTracer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgServerRequestedTracer) */ {
 public:
  inline CMsgServerRequestedTracer() : CMsgServerRequestedTracer(nullptr) {}
  ~CMsgServerRequestedTracer() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgServerRequestedTracer(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgServerRequestedTracer(const CMsgServerRequestedTracer& from) : CMsgServerRequestedTracer(nullptr, from) {}
  inline CMsgServerRequestedTracer(CMsgServerRequestedTracer&& from) noexcept
      : CMsgServerRequestedTracer(nullptr, std::move(from)) {}
  inline CMsgServerRequestedTracer& operator=(const CMsgServerRequestedTracer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgServerRequestedTracer& operator=(CMsgServerRequestedTracer&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgServerRequestedTracer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgServerRequestedTracer* internal_default_instance() {
    return reinterpret_cast<const CMsgServerRequestedTracer*>(
        &_CMsgServerRequestedTracer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(CMsgServerRequestedTracer& a, CMsgServerRequestedTracer& b) { a.Swap(&b); }
  inline void Swap(CMsgServerRequestedTracer* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgServerRequestedTracer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgServerRequestedTracer* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgServerRequestedTracer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgServerRequestedTracer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgServerRequestedTracer& from) { CMsgServerRequestedTracer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgServerRequestedTracer* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgServerRequestedTracer"; }

 protected:
  explicit CMsgServerRequestedTracer(::google::protobuf::Arena* arena);
  CMsgServerRequestedTracer(::google::protobuf::Arena* arena, const CMsgServerRequestedTracer& from);
  CMsgServerRequestedTracer(::google::protobuf::Arena* arena, CMsgServerRequestedTracer&& from) noexcept
      : CMsgServerRequestedTracer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOriginFieldNumber = 1,
    kEndFieldNumber = 2,
    kDpsFieldNumber = 5,
    kWeaponidFieldNumber = 3,
    kEntityHandleFieldNumber = 4,
  };
  // optional .CMsgVector origin = 1;
  bool has_origin() const;
  void clear_origin() ;
  const ::CMsgVector& origin() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_origin();
  ::CMsgVector* mutable_origin();
  void set_allocated_origin(::CMsgVector* value);
  void unsafe_arena_set_allocated_origin(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_origin();

  private:
  const ::CMsgVector& _internal_origin() const;
  ::CMsgVector* _internal_mutable_origin();

  public:
  // optional .CMsgVector end = 2;
  bool has_end() const;
  void clear_end() ;
  const ::CMsgVector& end() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_end();
  ::CMsgVector* mutable_end();
  void set_allocated_end(::CMsgVector* value);
  void unsafe_arena_set_allocated_end(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_end();

  private:
  const ::CMsgVector& _internal_end() const;
  ::CMsgVector* _internal_mutable_end();

  public:
  // optional float dps = 5;
  bool has_dps() const;
  void clear_dps() ;
  float dps() const;
  void set_dps(float value);

  private:
  float _internal_dps() const;
  void _internal_set_dps(float value);

  public:
  // optional int32 weaponid = 3 [default = -1];
  bool has_weaponid() const;
  void clear_weaponid() ;
  ::int32_t weaponid() const;
  void set_weaponid(::int32_t value);

  private:
  ::int32_t _internal_weaponid() const;
  void _internal_set_weaponid(::int32_t value);

  public:
  // optional uint32 entity_handle = 4 [default = 16777215];
  bool has_entity_handle() const;
  void clear_entity_handle() ;
  ::uint32_t entity_handle() const;
  void set_entity_handle(::uint32_t value);

  private:
  ::uint32_t _internal_entity_handle() const;
  void _internal_set_entity_handle(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgServerRequestedTracer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgServerRequestedTracer_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgServerRequestedTracer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* origin_;
    ::CMsgVector* end_;
    float dps_;
    ::int32_t weaponid_;
    ::uint32_t entity_handle_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgPlaceSatVolumeEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgPlaceSatVolumeEvent) */ {
 public:
  inline CMsgPlaceSatVolumeEvent() : CMsgPlaceSatVolumeEvent(nullptr) {}
  ~CMsgPlaceSatVolumeEvent() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgPlaceSatVolumeEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgPlaceSatVolumeEvent(const CMsgPlaceSatVolumeEvent& from) : CMsgPlaceSatVolumeEvent(nullptr, from) {}
  inline CMsgPlaceSatVolumeEvent(CMsgPlaceSatVolumeEvent&& from) noexcept
      : CMsgPlaceSatVolumeEvent(nullptr, std::move(from)) {}
  inline CMsgPlaceSatVolumeEvent& operator=(const CMsgPlaceSatVolumeEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgPlaceSatVolumeEvent& operator=(CMsgPlaceSatVolumeEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgPlaceSatVolumeEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgPlaceSatVolumeEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgPlaceSatVolumeEvent*>(
        &_CMsgPlaceSatVolumeEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(CMsgPlaceSatVolumeEvent& a, CMsgPlaceSatVolumeEvent& b) { a.Swap(&b); }
  inline void Swap(CMsgPlaceSatVolumeEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgPlaceSatVolumeEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgPlaceSatVolumeEvent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgPlaceSatVolumeEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgPlaceSatVolumeEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgPlaceSatVolumeEvent& from) { CMsgPlaceSatVolumeEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgPlaceSatVolumeEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgPlaceSatVolumeEvent"; }

 protected:
  explicit CMsgPlaceSatVolumeEvent(::google::protobuf::Arena* arena);
  CMsgPlaceSatVolumeEvent(::google::protobuf::Arena* arena, const CMsgPlaceSatVolumeEvent& from);
  CMsgPlaceSatVolumeEvent(::google::protobuf::Arena* arena, CMsgPlaceSatVolumeEvent&& from) noexcept
      : CMsgPlaceSatVolumeEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 1,
    kDirectionFieldNumber = 2,
    kRadiusFieldNumber = 3,
    kFalloffDistanceFieldNumber = 4,
    kThetaDotFieldNumber = 5,
    kPhiDotFieldNumber = 6,
    kAttachmentHandleFieldNumber = 8,
    kTypeFieldNumber = 9,
    kVolumeIdFieldNumber = 10,
    kEntityHandleFieldNumber = 7,
  };
  // optional .CMsgVector position = 1;
  bool has_position() const;
  void clear_position() ;
  const ::CMsgVector& position() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_position();
  ::CMsgVector* mutable_position();
  void set_allocated_position(::CMsgVector* value);
  void unsafe_arena_set_allocated_position(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_position();

  private:
  const ::CMsgVector& _internal_position() const;
  ::CMsgVector* _internal_mutable_position();

  public:
  // optional .CMsgVector direction = 2;
  bool has_direction() const;
  void clear_direction() ;
  const ::CMsgVector& direction() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_direction();
  ::CMsgVector* mutable_direction();
  void set_allocated_direction(::CMsgVector* value);
  void unsafe_arena_set_allocated_direction(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_direction();

  private:
  const ::CMsgVector& _internal_direction() const;
  ::CMsgVector* _internal_mutable_direction();

  public:
  // optional float radius = 3;
  bool has_radius() const;
  void clear_radius() ;
  float radius() const;
  void set_radius(float value);

  private:
  float _internal_radius() const;
  void _internal_set_radius(float value);

  public:
  // optional float falloff_distance = 4;
  bool has_falloff_distance() const;
  void clear_falloff_distance() ;
  float falloff_distance() const;
  void set_falloff_distance(float value);

  private:
  float _internal_falloff_distance() const;
  void _internal_set_falloff_distance(float value);

  public:
  // optional float theta_dot = 5;
  bool has_theta_dot() const;
  void clear_theta_dot() ;
  float theta_dot() const;
  void set_theta_dot(float value);

  private:
  float _internal_theta_dot() const;
  void _internal_set_theta_dot(float value);

  public:
  // optional float phi_dot = 6;
  bool has_phi_dot() const;
  void clear_phi_dot() ;
  float phi_dot() const;
  void set_phi_dot(float value);

  private:
  float _internal_phi_dot() const;
  void _internal_set_phi_dot(float value);

  public:
  // optional uint32 attachment_handle = 8;
  bool has_attachment_handle() const;
  void clear_attachment_handle() ;
  ::uint32_t attachment_handle() const;
  void set_attachment_handle(::uint32_t value);

  private:
  ::uint32_t _internal_attachment_handle() const;
  void _internal_set_attachment_handle(::uint32_t value);

  public:
  // optional uint32 type = 9;
  bool has_type() const;
  void clear_type() ;
  ::uint32_t type() const;
  void set_type(::uint32_t value);

  private:
  ::uint32_t _internal_type() const;
  void _internal_set_type(::uint32_t value);

  public:
  // optional int32 volume_id = 10;
  bool has_volume_id() const;
  void clear_volume_id() ;
  ::int32_t volume_id() const;
  void set_volume_id(::int32_t value);

  private:
  ::int32_t _internal_volume_id() const;
  void _internal_set_volume_id(::int32_t value);

  public:
  // optional uint32 entity_handle = 7 [default = 16777215];
  bool has_entity_handle() const;
  void clear_entity_handle() ;
  ::uint32_t entity_handle() const;
  void set_entity_handle(::uint32_t value);

  private:
  ::uint32_t _internal_entity_handle() const;
  void _internal_set_entity_handle(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgPlaceSatVolumeEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgPlaceSatVolumeEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgPlaceSatVolumeEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* position_;
    ::CMsgVector* direction_;
    float radius_;
    float falloff_distance_;
    float theta_dot_;
    float phi_dot_;
    ::uint32_t attachment_handle_;
    ::uint32_t type_;
    ::int32_t volume_id_;
    ::uint32_t entity_handle_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_UpdateParticleOrient final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.UpdateParticleOrient) */ {
 public:
  inline CMsgParticleSystemManager_UpdateParticleOrient() : CMsgParticleSystemManager_UpdateParticleOrient(nullptr) {}
  ~CMsgParticleSystemManager_UpdateParticleOrient() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleOrient(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_UpdateParticleOrient(const CMsgParticleSystemManager_UpdateParticleOrient& from) : CMsgParticleSystemManager_UpdateParticleOrient(nullptr, from) {}
  inline CMsgParticleSystemManager_UpdateParticleOrient(CMsgParticleSystemManager_UpdateParticleOrient&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleOrient(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_UpdateParticleOrient& operator=(const CMsgParticleSystemManager_UpdateParticleOrient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_UpdateParticleOrient& operator=(CMsgParticleSystemManager_UpdateParticleOrient&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_UpdateParticleOrient& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_UpdateParticleOrient* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_UpdateParticleOrient*>(
        &_CMsgParticleSystemManager_UpdateParticleOrient_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CMsgParticleSystemManager_UpdateParticleOrient& a, CMsgParticleSystemManager_UpdateParticleOrient& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_UpdateParticleOrient* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_UpdateParticleOrient* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_UpdateParticleOrient* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_UpdateParticleOrient>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_UpdateParticleOrient& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_UpdateParticleOrient& from) { CMsgParticleSystemManager_UpdateParticleOrient::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_UpdateParticleOrient* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.UpdateParticleOrient"; }

 protected:
  explicit CMsgParticleSystemManager_UpdateParticleOrient(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_UpdateParticleOrient(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticleOrient& from);
  CMsgParticleSystemManager_UpdateParticleOrient(::google::protobuf::Arena* arena, CMsgParticleSystemManager_UpdateParticleOrient&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleOrient(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kForwardFieldNumber = 2,
    kLeftFieldNumber = 3,
    kUpFieldNumber = 4,
    kControlPointFieldNumber = 1,
  };
  // optional .CMsgVector forward = 2;
  bool has_forward() const;
  void clear_forward() ;
  const ::CMsgVector& forward() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_forward();
  ::CMsgVector* mutable_forward();
  void set_allocated_forward(::CMsgVector* value);
  void unsafe_arena_set_allocated_forward(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_forward();

  private:
  const ::CMsgVector& _internal_forward() const;
  ::CMsgVector* _internal_mutable_forward();

  public:
  // optional .CMsgVector left = 3;
  bool has_left() const;
  void clear_left() ;
  const ::CMsgVector& left() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_left();
  ::CMsgVector* mutable_left();
  void set_allocated_left(::CMsgVector* value);
  void unsafe_arena_set_allocated_left(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_left();

  private:
  const ::CMsgVector& _internal_left() const;
  ::CMsgVector* _internal_mutable_left();

  public:
  // optional .CMsgVector up = 4;
  bool has_up() const;
  void clear_up() ;
  const ::CMsgVector& up() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_up();
  ::CMsgVector* mutable_up();
  void set_allocated_up(::CMsgVector* value);
  void unsafe_arena_set_allocated_up(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_up();

  private:
  const ::CMsgVector& _internal_up() const;
  ::CMsgVector* _internal_mutable_up();

  public:
  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point() ;
  ::int32_t control_point() const;
  void set_control_point(::int32_t value);

  private:
  ::int32_t _internal_control_point() const;
  void _internal_set_control_point(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.UpdateParticleOrient)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_UpdateParticleOrient_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_UpdateParticleOrient& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* forward_;
    ::CMsgVector* left_;
    ::CMsgVector* up_;
    ::int32_t control_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_UpdateParticleOffset final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.UpdateParticleOffset) */ {
 public:
  inline CMsgParticleSystemManager_UpdateParticleOffset() : CMsgParticleSystemManager_UpdateParticleOffset(nullptr) {}
  ~CMsgParticleSystemManager_UpdateParticleOffset() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleOffset(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_UpdateParticleOffset(const CMsgParticleSystemManager_UpdateParticleOffset& from) : CMsgParticleSystemManager_UpdateParticleOffset(nullptr, from) {}
  inline CMsgParticleSystemManager_UpdateParticleOffset(CMsgParticleSystemManager_UpdateParticleOffset&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleOffset(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_UpdateParticleOffset& operator=(const CMsgParticleSystemManager_UpdateParticleOffset& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_UpdateParticleOffset& operator=(CMsgParticleSystemManager_UpdateParticleOffset&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_UpdateParticleOffset& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_UpdateParticleOffset* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_UpdateParticleOffset*>(
        &_CMsgParticleSystemManager_UpdateParticleOffset_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(CMsgParticleSystemManager_UpdateParticleOffset& a, CMsgParticleSystemManager_UpdateParticleOffset& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_UpdateParticleOffset* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_UpdateParticleOffset* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_UpdateParticleOffset* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_UpdateParticleOffset>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_UpdateParticleOffset& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_UpdateParticleOffset& from) { CMsgParticleSystemManager_UpdateParticleOffset::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_UpdateParticleOffset* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.UpdateParticleOffset"; }

 protected:
  explicit CMsgParticleSystemManager_UpdateParticleOffset(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_UpdateParticleOffset(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticleOffset& from);
  CMsgParticleSystemManager_UpdateParticleOffset(::google::protobuf::Arena* arena, CMsgParticleSystemManager_UpdateParticleOffset&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleOffset(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOriginOffsetFieldNumber = 2,
    kControlPointFieldNumber = 1,
  };
  // optional .CMsgVector origin_offset = 2;
  bool has_origin_offset() const;
  void clear_origin_offset() ;
  const ::CMsgVector& origin_offset() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_origin_offset();
  ::CMsgVector* mutable_origin_offset();
  void set_allocated_origin_offset(::CMsgVector* value);
  void unsafe_arena_set_allocated_origin_offset(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_origin_offset();

  private:
  const ::CMsgVector& _internal_origin_offset() const;
  ::CMsgVector* _internal_mutable_origin_offset();

  public:
  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point() ;
  ::int32_t control_point() const;
  void set_control_point(::int32_t value);

  private:
  ::int32_t _internal_control_point() const;
  void _internal_set_control_point(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.UpdateParticleOffset)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_UpdateParticleOffset_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_UpdateParticleOffset& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* origin_offset_;
    ::int32_t control_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_UpdateParticleFwd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.UpdateParticleFwd) */ {
 public:
  inline CMsgParticleSystemManager_UpdateParticleFwd() : CMsgParticleSystemManager_UpdateParticleFwd(nullptr) {}
  ~CMsgParticleSystemManager_UpdateParticleFwd() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleFwd(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_UpdateParticleFwd(const CMsgParticleSystemManager_UpdateParticleFwd& from) : CMsgParticleSystemManager_UpdateParticleFwd(nullptr, from) {}
  inline CMsgParticleSystemManager_UpdateParticleFwd(CMsgParticleSystemManager_UpdateParticleFwd&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleFwd(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_UpdateParticleFwd& operator=(const CMsgParticleSystemManager_UpdateParticleFwd& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_UpdateParticleFwd& operator=(CMsgParticleSystemManager_UpdateParticleFwd&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_UpdateParticleFwd& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_UpdateParticleFwd* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_UpdateParticleFwd*>(
        &_CMsgParticleSystemManager_UpdateParticleFwd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CMsgParticleSystemManager_UpdateParticleFwd& a, CMsgParticleSystemManager_UpdateParticleFwd& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_UpdateParticleFwd* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_UpdateParticleFwd* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_UpdateParticleFwd* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_UpdateParticleFwd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_UpdateParticleFwd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_UpdateParticleFwd& from) { CMsgParticleSystemManager_UpdateParticleFwd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_UpdateParticleFwd* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.UpdateParticleFwd"; }

 protected:
  explicit CMsgParticleSystemManager_UpdateParticleFwd(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_UpdateParticleFwd(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticleFwd& from);
  CMsgParticleSystemManager_UpdateParticleFwd(::google::protobuf::Arena* arena, CMsgParticleSystemManager_UpdateParticleFwd&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleFwd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kForwardFieldNumber = 2,
    kControlPointFieldNumber = 1,
  };
  // optional .CMsgVector forward = 2;
  bool has_forward() const;
  void clear_forward() ;
  const ::CMsgVector& forward() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_forward();
  ::CMsgVector* mutable_forward();
  void set_allocated_forward(::CMsgVector* value);
  void unsafe_arena_set_allocated_forward(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_forward();

  private:
  const ::CMsgVector& _internal_forward() const;
  ::CMsgVector* _internal_mutable_forward();

  public:
  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point() ;
  ::int32_t control_point() const;
  void set_control_point(::int32_t value);

  private:
  ::int32_t _internal_control_point() const;
  void _internal_set_control_point(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.UpdateParticleFwd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_UpdateParticleFwd_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_UpdateParticleFwd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* forward_;
    ::int32_t control_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_UpdateParticleFallback final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.UpdateParticleFallback) */ {
 public:
  inline CMsgParticleSystemManager_UpdateParticleFallback() : CMsgParticleSystemManager_UpdateParticleFallback(nullptr) {}
  ~CMsgParticleSystemManager_UpdateParticleFallback() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleFallback(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_UpdateParticleFallback(const CMsgParticleSystemManager_UpdateParticleFallback& from) : CMsgParticleSystemManager_UpdateParticleFallback(nullptr, from) {}
  inline CMsgParticleSystemManager_UpdateParticleFallback(CMsgParticleSystemManager_UpdateParticleFallback&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleFallback(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_UpdateParticleFallback& operator=(const CMsgParticleSystemManager_UpdateParticleFallback& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_UpdateParticleFallback& operator=(CMsgParticleSystemManager_UpdateParticleFallback&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_UpdateParticleFallback& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_UpdateParticleFallback* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_UpdateParticleFallback*>(
        &_CMsgParticleSystemManager_UpdateParticleFallback_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(CMsgParticleSystemManager_UpdateParticleFallback& a, CMsgParticleSystemManager_UpdateParticleFallback& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_UpdateParticleFallback* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_UpdateParticleFallback* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_UpdateParticleFallback* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_UpdateParticleFallback>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_UpdateParticleFallback& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_UpdateParticleFallback& from) { CMsgParticleSystemManager_UpdateParticleFallback::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_UpdateParticleFallback* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.UpdateParticleFallback"; }

 protected:
  explicit CMsgParticleSystemManager_UpdateParticleFallback(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_UpdateParticleFallback(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticleFallback& from);
  CMsgParticleSystemManager_UpdateParticleFallback(::google::protobuf::Arena* arena, CMsgParticleSystemManager_UpdateParticleFallback&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleFallback(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 2,
    kControlPointFieldNumber = 1,
  };
  // optional .CMsgVector position = 2;
  bool has_position() const;
  void clear_position() ;
  const ::CMsgVector& position() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_position();
  ::CMsgVector* mutable_position();
  void set_allocated_position(::CMsgVector* value);
  void unsafe_arena_set_allocated_position(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_position();

  private:
  const ::CMsgVector& _internal_position() const;
  ::CMsgVector* _internal_mutable_position();

  public:
  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point() ;
  ::int32_t control_point() const;
  void set_control_point(::int32_t value);

  private:
  ::int32_t _internal_control_point() const;
  void _internal_set_control_point(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.UpdateParticleFallback)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_UpdateParticleFallback_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_UpdateParticleFallback& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* position_;
    ::int32_t control_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_UpdateParticleEnt final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.UpdateParticleEnt) */ {
 public:
  inline CMsgParticleSystemManager_UpdateParticleEnt() : CMsgParticleSystemManager_UpdateParticleEnt(nullptr) {}
  ~CMsgParticleSystemManager_UpdateParticleEnt() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleEnt(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_UpdateParticleEnt(const CMsgParticleSystemManager_UpdateParticleEnt& from) : CMsgParticleSystemManager_UpdateParticleEnt(nullptr, from) {}
  inline CMsgParticleSystemManager_UpdateParticleEnt(CMsgParticleSystemManager_UpdateParticleEnt&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleEnt(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_UpdateParticleEnt& operator=(const CMsgParticleSystemManager_UpdateParticleEnt& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_UpdateParticleEnt& operator=(CMsgParticleSystemManager_UpdateParticleEnt&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_UpdateParticleEnt& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_UpdateParticleEnt* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_UpdateParticleEnt*>(
        &_CMsgParticleSystemManager_UpdateParticleEnt_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(CMsgParticleSystemManager_UpdateParticleEnt& a, CMsgParticleSystemManager_UpdateParticleEnt& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_UpdateParticleEnt* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_UpdateParticleEnt* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_UpdateParticleEnt* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_UpdateParticleEnt>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_UpdateParticleEnt& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_UpdateParticleEnt& from) { CMsgParticleSystemManager_UpdateParticleEnt::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_UpdateParticleEnt* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.UpdateParticleEnt"; }

 protected:
  explicit CMsgParticleSystemManager_UpdateParticleEnt(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_UpdateParticleEnt(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticleEnt& from);
  CMsgParticleSystemManager_UpdateParticleEnt(::google::protobuf::Arena* arena, CMsgParticleSystemManager_UpdateParticleEnt&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticleEnt(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFallbackPositionFieldNumber = 5,
    kControlPointFieldNumber = 1,
    kAttachTypeFieldNumber = 3,
    kAttachmentFieldNumber = 4,
    kEntityHandleFieldNumber = 2,
  };
  // optional .CMsgVector fallback_position = 5;
  bool has_fallback_position() const;
  void clear_fallback_position() ;
  const ::CMsgVector& fallback_position() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_fallback_position();
  ::CMsgVector* mutable_fallback_position();
  void set_allocated_fallback_position(::CMsgVector* value);
  void unsafe_arena_set_allocated_fallback_position(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_fallback_position();

  private:
  const ::CMsgVector& _internal_fallback_position() const;
  ::CMsgVector* _internal_mutable_fallback_position();

  public:
  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point() ;
  ::int32_t control_point() const;
  void set_control_point(::int32_t value);

  private:
  ::int32_t _internal_control_point() const;
  void _internal_set_control_point(::int32_t value);

  public:
  // optional int32 attach_type = 3;
  bool has_attach_type() const;
  void clear_attach_type() ;
  ::int32_t attach_type() const;
  void set_attach_type(::int32_t value);

  private:
  ::int32_t _internal_attach_type() const;
  void _internal_set_attach_type(::int32_t value);

  public:
  // optional int32 attachment = 4;
  bool has_attachment() const;
  void clear_attachment() ;
  ::int32_t attachment() const;
  void set_attachment(::int32_t value);

  private:
  ::int32_t _internal_attachment() const;
  void _internal_set_attachment(::int32_t value);

  public:
  // optional uint32 entity_handle = 2 [default = 16777215];
  bool has_entity_handle() const;
  void clear_entity_handle() ;
  ::uint32_t entity_handle() const;
  void set_entity_handle(::uint32_t value);

  private:
  ::uint32_t _internal_entity_handle() const;
  void _internal_set_entity_handle(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.UpdateParticleEnt)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_UpdateParticleEnt_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_UpdateParticleEnt& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* fallback_position_;
    ::int32_t control_point_;
    ::int32_t attach_type_;
    ::int32_t attachment_;
    ::uint32_t entity_handle_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_UpdateParticle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.UpdateParticle) */ {
 public:
  inline CMsgParticleSystemManager_UpdateParticle() : CMsgParticleSystemManager_UpdateParticle(nullptr) {}
  ~CMsgParticleSystemManager_UpdateParticle() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticle(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_UpdateParticle(const CMsgParticleSystemManager_UpdateParticle& from) : CMsgParticleSystemManager_UpdateParticle(nullptr, from) {}
  inline CMsgParticleSystemManager_UpdateParticle(CMsgParticleSystemManager_UpdateParticle&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticle(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_UpdateParticle& operator=(const CMsgParticleSystemManager_UpdateParticle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_UpdateParticle& operator=(CMsgParticleSystemManager_UpdateParticle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_UpdateParticle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_UpdateParticle* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_UpdateParticle*>(
        &_CMsgParticleSystemManager_UpdateParticle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(CMsgParticleSystemManager_UpdateParticle& a, CMsgParticleSystemManager_UpdateParticle& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_UpdateParticle* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_UpdateParticle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_UpdateParticle* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_UpdateParticle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_UpdateParticle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_UpdateParticle& from) { CMsgParticleSystemManager_UpdateParticle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_UpdateParticle* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.UpdateParticle"; }

 protected:
  explicit CMsgParticleSystemManager_UpdateParticle(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_UpdateParticle(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticle& from);
  CMsgParticleSystemManager_UpdateParticle(::google::protobuf::Arena* arena, CMsgParticleSystemManager_UpdateParticle&& from) noexcept
      : CMsgParticleSystemManager_UpdateParticle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 2,
    kControlPointFieldNumber = 1,
  };
  // optional .CMsgVector position = 2;
  bool has_position() const;
  void clear_position() ;
  const ::CMsgVector& position() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_position();
  ::CMsgVector* mutable_position();
  void set_allocated_position(::CMsgVector* value);
  void unsafe_arena_set_allocated_position(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_position();

  private:
  const ::CMsgVector& _internal_position() const;
  ::CMsgVector* _internal_mutable_position();

  public:
  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point() ;
  ::int32_t control_point() const;
  void set_control_point(::int32_t value);

  private:
  ::int32_t _internal_control_point() const;
  void _internal_set_control_point(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.UpdateParticle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_UpdateParticle_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_UpdateParticle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* position_;
    ::int32_t control_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager_CreateParticle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager.CreateParticle) */ {
 public:
  inline CMsgParticleSystemManager_CreateParticle() : CMsgParticleSystemManager_CreateParticle(nullptr) {}
  ~CMsgParticleSystemManager_CreateParticle() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager_CreateParticle(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager_CreateParticle(const CMsgParticleSystemManager_CreateParticle& from) : CMsgParticleSystemManager_CreateParticle(nullptr, from) {}
  inline CMsgParticleSystemManager_CreateParticle(CMsgParticleSystemManager_CreateParticle&& from) noexcept
      : CMsgParticleSystemManager_CreateParticle(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager_CreateParticle& operator=(const CMsgParticleSystemManager_CreateParticle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager_CreateParticle& operator=(CMsgParticleSystemManager_CreateParticle&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager_CreateParticle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager_CreateParticle* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager_CreateParticle*>(
        &_CMsgParticleSystemManager_CreateParticle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CMsgParticleSystemManager_CreateParticle& a, CMsgParticleSystemManager_CreateParticle& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager_CreateParticle* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager_CreateParticle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager_CreateParticle* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager_CreateParticle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager_CreateParticle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager_CreateParticle& from) { CMsgParticleSystemManager_CreateParticle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager_CreateParticle* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager.CreateParticle"; }

 protected:
  explicit CMsgParticleSystemManager_CreateParticle(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager_CreateParticle(::google::protobuf::Arena* arena, const CMsgParticleSystemManager_CreateParticle& from);
  CMsgParticleSystemManager_CreateParticle(::google::protobuf::Arena* arena, CMsgParticleSystemManager_CreateParticle&& from) noexcept
      : CMsgParticleSystemManager_CreateParticle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionFieldNumber = 4,
    kAnglesFieldNumber = 5,
    kParticleNameIndexFieldNumber = 1,
    kAttachTypeFieldNumber = 2,
    kEntityHandleFieldNumber = 3,
  };
  // optional .CMsgVector position = 4;
  bool has_position() const;
  void clear_position() ;
  const ::CMsgVector& position() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_position();
  ::CMsgVector* mutable_position();
  void set_allocated_position(::CMsgVector* value);
  void unsafe_arena_set_allocated_position(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_position();

  private:
  const ::CMsgVector& _internal_position() const;
  ::CMsgVector* _internal_mutable_position();

  public:
  // optional .CMsgQAngle angles = 5;
  bool has_angles() const;
  void clear_angles() ;
  const ::CMsgQAngle& angles() const;
  PROTOBUF_NODISCARD ::CMsgQAngle* release_angles();
  ::CMsgQAngle* mutable_angles();
  void set_allocated_angles(::CMsgQAngle* value);
  void unsafe_arena_set_allocated_angles(::CMsgQAngle* value);
  ::CMsgQAngle* unsafe_arena_release_angles();

  private:
  const ::CMsgQAngle& _internal_angles() const;
  ::CMsgQAngle* _internal_mutable_angles();

  public:
  // optional fixed64 particle_name_index = 1;
  bool has_particle_name_index() const;
  void clear_particle_name_index() ;
  ::uint64_t particle_name_index() const;
  void set_particle_name_index(::uint64_t value);

  private:
  ::uint64_t _internal_particle_name_index() const;
  void _internal_set_particle_name_index(::uint64_t value);

  public:
  // optional int32 attach_type = 2;
  bool has_attach_type() const;
  void clear_attach_type() ;
  ::int32_t attach_type() const;
  void set_attach_type(::int32_t value);

  private:
  ::int32_t _internal_attach_type() const;
  void _internal_set_attach_type(::int32_t value);

  public:
  // optional uint32 entity_handle = 3 [default = 16777215];
  bool has_entity_handle() const;
  void clear_entity_handle() ;
  ::uint32_t entity_handle() const;
  void set_entity_handle(::uint32_t value);

  private:
  ::uint32_t _internal_entity_handle() const;
  void _internal_set_entity_handle(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager.CreateParticle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_CreateParticle_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager_CreateParticle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* position_;
    ::CMsgQAngle* angles_;
    ::uint64_t particle_name_index_;
    ::int32_t attach_type_;
    ::uint32_t entity_handle_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgFireBullets final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgFireBullets) */ {
 public:
  inline CMsgFireBullets() : CMsgFireBullets(nullptr) {}
  ~CMsgFireBullets() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgFireBullets(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgFireBullets(const CMsgFireBullets& from) : CMsgFireBullets(nullptr, from) {}
  inline CMsgFireBullets(CMsgFireBullets&& from) noexcept
      : CMsgFireBullets(nullptr, std::move(from)) {}
  inline CMsgFireBullets& operator=(const CMsgFireBullets& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFireBullets& operator=(CMsgFireBullets&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgFireBullets& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFireBullets* internal_default_instance() {
    return reinterpret_cast<const CMsgFireBullets*>(
        &_CMsgFireBullets_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CMsgFireBullets& a, CMsgFireBullets& b) { a.Swap(&b); }
  inline void Swap(CMsgFireBullets* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFireBullets* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgFireBullets* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgFireBullets>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgFireBullets& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgFireBullets& from) { CMsgFireBullets::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgFireBullets* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgFireBullets"; }

 protected:
  explicit CMsgFireBullets(::google::protobuf::Arena* arena);
  CMsgFireBullets(::google::protobuf::Arena* arena, const CMsgFireBullets& from);
  CMsgFireBullets(::google::protobuf::Arena* arena, CMsgFireBullets&& from) noexcept
      : CMsgFireBullets(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TracerAssignment = CMsgFireBullets_TracerAssignment;

  // accessors -------------------------------------------------------
  enum : int {
    kTracerAdditionalFieldNumber = 13,
    kOriginFieldNumber = 1,
    kAnglesFieldNumber = 2,
    kTracerReplacementFieldNumber = 12,
    kAnglesOriginalFieldNumber = 14,
    kSeedFieldNumber = 4,
    kPenetrationPercentFieldNumber = 8,
    kSpreadFieldNumber = 9,
    kBulletsOverrideFieldNumber = 11,
    kWeaponSubclassIdFieldNumber = 15,
    kShotNumberFieldNumber = 16,
    kMaxRangeFieldNumber = 18,
    kShooterEntityFieldNumber = 5,
    kAbilityFieldNumber = 7,
    kFiredFromGunFieldNumber = 10,
    kIgnoreEntityFieldNumber = 17,
  };
  // repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;
  int tracer_additional_size() const;
  private:
  int _internal_tracer_additional_size() const;

  public:
  void clear_tracer_additional() ;
  ::CMsgFireBullets_TracerAssignment* mutable_tracer_additional(int index);
  ::google::protobuf::RepeatedPtrField<::CMsgFireBullets_TracerAssignment>* mutable_tracer_additional();

  private:
  const ::google::protobuf::RepeatedPtrField<::CMsgFireBullets_TracerAssignment>& _internal_tracer_additional() const;
  ::google::protobuf::RepeatedPtrField<::CMsgFireBullets_TracerAssignment>* _internal_mutable_tracer_additional();
  public:
  const ::CMsgFireBullets_TracerAssignment& tracer_additional(int index) const;
  ::CMsgFireBullets_TracerAssignment* add_tracer_additional();
  const ::google::protobuf::RepeatedPtrField<::CMsgFireBullets_TracerAssignment>& tracer_additional() const;
  // optional .CMsgVector origin = 1;
  bool has_origin() const;
  void clear_origin() ;
  const ::CMsgVector& origin() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_origin();
  ::CMsgVector* mutable_origin();
  void set_allocated_origin(::CMsgVector* value);
  void unsafe_arena_set_allocated_origin(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_origin();

  private:
  const ::CMsgVector& _internal_origin() const;
  ::CMsgVector* _internal_mutable_origin();

  public:
  // optional .CMsgQAngle angles = 2;
  bool has_angles() const;
  void clear_angles() ;
  const ::CMsgQAngle& angles() const;
  PROTOBUF_NODISCARD ::CMsgQAngle* release_angles();
  ::CMsgQAngle* mutable_angles();
  void set_allocated_angles(::CMsgQAngle* value);
  void unsafe_arena_set_allocated_angles(::CMsgQAngle* value);
  ::CMsgQAngle* unsafe_arena_release_angles();

  private:
  const ::CMsgQAngle& _internal_angles() const;
  ::CMsgQAngle* _internal_mutable_angles();

  public:
  // optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;
  bool has_tracer_replacement() const;
  void clear_tracer_replacement() ;
  const ::CMsgFireBullets_TracerAssignment& tracer_replacement() const;
  PROTOBUF_NODISCARD ::CMsgFireBullets_TracerAssignment* release_tracer_replacement();
  ::CMsgFireBullets_TracerAssignment* mutable_tracer_replacement();
  void set_allocated_tracer_replacement(::CMsgFireBullets_TracerAssignment* value);
  void unsafe_arena_set_allocated_tracer_replacement(::CMsgFireBullets_TracerAssignment* value);
  ::CMsgFireBullets_TracerAssignment* unsafe_arena_release_tracer_replacement();

  private:
  const ::CMsgFireBullets_TracerAssignment& _internal_tracer_replacement() const;
  ::CMsgFireBullets_TracerAssignment* _internal_mutable_tracer_replacement();

  public:
  // optional .CMsgQAngle angles_original = 14;
  bool has_angles_original() const;
  void clear_angles_original() ;
  const ::CMsgQAngle& angles_original() const;
  PROTOBUF_NODISCARD ::CMsgQAngle* release_angles_original();
  ::CMsgQAngle* mutable_angles_original();
  void set_allocated_angles_original(::CMsgQAngle* value);
  void unsafe_arena_set_allocated_angles_original(::CMsgQAngle* value);
  ::CMsgQAngle* unsafe_arena_release_angles_original();

  private:
  const ::CMsgQAngle& _internal_angles_original() const;
  ::CMsgQAngle* _internal_mutable_angles_original();

  public:
  // optional uint32 seed = 4;
  bool has_seed() const;
  void clear_seed() ;
  ::uint32_t seed() const;
  void set_seed(::uint32_t value);

  private:
  ::uint32_t _internal_seed() const;
  void _internal_set_seed(::uint32_t value);

  public:
  // optional float penetration_percent = 8;
  bool has_penetration_percent() const;
  void clear_penetration_percent() ;
  float penetration_percent() const;
  void set_penetration_percent(float value);

  private:
  float _internal_penetration_percent() const;
  void _internal_set_penetration_percent(float value);

  public:
  // optional float spread = 9;
  bool has_spread() const;
  void clear_spread() ;
  float spread() const;
  void set_spread(float value);

  private:
  float _internal_spread() const;
  void _internal_set_spread(float value);

  public:
  // optional uint32 bullets_override = 11;
  bool has_bullets_override() const;
  void clear_bullets_override() ;
  ::uint32_t bullets_override() const;
  void set_bullets_override(::uint32_t value);

  private:
  ::uint32_t _internal_bullets_override() const;
  void _internal_set_bullets_override(::uint32_t value);

  public:
  // optional uint32 weapon_subclass_id = 15;
  bool has_weapon_subclass_id() const;
  void clear_weapon_subclass_id() ;
  ::uint32_t weapon_subclass_id() const;
  void set_weapon_subclass_id(::uint32_t value);

  private:
  ::uint32_t _internal_weapon_subclass_id() const;
  void _internal_set_weapon_subclass_id(::uint32_t value);

  public:
  // optional uint32 shot_number = 16;
  bool has_shot_number() const;
  void clear_shot_number() ;
  ::uint32_t shot_number() const;
  void set_shot_number(::uint32_t value);

  private:
  ::uint32_t _internal_shot_number() const;
  void _internal_set_shot_number(::uint32_t value);

  public:
  // optional float max_range = 18;
  bool has_max_range() const;
  void clear_max_range() ;
  float max_range() const;
  void set_max_range(float value);

  private:
  float _internal_max_range() const;
  void _internal_set_max_range(float value);

  public:
  // optional int32 shooter_entity = 5 [default = -1];
  bool has_shooter_entity() const;
  void clear_shooter_entity() ;
  ::int32_t shooter_entity() const;
  void set_shooter_entity(::int32_t value);

  private:
  ::int32_t _internal_shooter_entity() const;
  void _internal_set_shooter_entity(::int32_t value);

  public:
  // optional int32 ability = 7 [default = -1];
  bool has_ability() const;
  void clear_ability() ;
  ::int32_t ability() const;
  void set_ability(::int32_t value);

  private:
  ::int32_t _internal_ability() const;
  void _internal_set_ability(::int32_t value);

  public:
  // optional bool fired_from_gun = 10 [default = true];
  bool has_fired_from_gun() const;
  void clear_fired_from_gun() ;
  bool fired_from_gun() const;
  void set_fired_from_gun(bool value);

  private:
  bool _internal_fired_from_gun() const;
  void _internal_set_fired_from_gun(bool value);

  public:
  // optional int32 ignore_entity = 17 [default = -1];
  bool has_ignore_entity() const;
  void clear_ignore_entity() ;
  ::int32_t ignore_entity() const;
  void set_ignore_entity(::int32_t value);

  private:
  ::int32_t _internal_ignore_entity() const;
  void _internal_set_ignore_entity(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgFireBullets)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 16, 5,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgFireBullets_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgFireBullets& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::CMsgFireBullets_TracerAssignment > tracer_additional_;
    ::CMsgVector* origin_;
    ::CMsgQAngle* angles_;
    ::CMsgFireBullets_TracerAssignment* tracer_replacement_;
    ::CMsgQAngle* angles_original_;
    ::uint32_t seed_;
    float penetration_percent_;
    float spread_;
    ::uint32_t bullets_override_;
    ::uint32_t weapon_subclass_id_;
    ::uint32_t shot_number_;
    float max_range_;
    ::int32_t shooter_entity_;
    ::int32_t ability_;
    bool fired_from_gun_;
    ::int32_t ignore_entity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgBulletImpact final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgBulletImpact) */ {
 public:
  inline CMsgBulletImpact() : CMsgBulletImpact(nullptr) {}
  ~CMsgBulletImpact() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgBulletImpact(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgBulletImpact(const CMsgBulletImpact& from) : CMsgBulletImpact(nullptr, from) {}
  inline CMsgBulletImpact(CMsgBulletImpact&& from) noexcept
      : CMsgBulletImpact(nullptr, std::move(from)) {}
  inline CMsgBulletImpact& operator=(const CMsgBulletImpact& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBulletImpact& operator=(CMsgBulletImpact&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgBulletImpact& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBulletImpact* internal_default_instance() {
    return reinterpret_cast<const CMsgBulletImpact*>(
        &_CMsgBulletImpact_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CMsgBulletImpact& a, CMsgBulletImpact& b) { a.Swap(&b); }
  inline void Swap(CMsgBulletImpact* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBulletImpact* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgBulletImpact* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgBulletImpact>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgBulletImpact& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgBulletImpact& from) { CMsgBulletImpact::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgBulletImpact* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgBulletImpact"; }

 protected:
  explicit CMsgBulletImpact(::google::protobuf::Arena* arena);
  CMsgBulletImpact(::google::protobuf::Arena* arena, const CMsgBulletImpact& from);
  CMsgBulletImpact(::google::protobuf::Arena* arena, CMsgBulletImpact&& from) noexcept
      : CMsgBulletImpact(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTraceStartFieldNumber = 1,
    kImpactOriginFieldNumber = 2,
    kSurfaceNormalFieldNumber = 3,
    kDamageFieldNumber = 4,
    kSurfaceTypeFieldNumber = 5,
    kImpactedHitboxFieldNumber = 9,
    kWeaponSubclassIdFieldNumber = 10,
    kShooterEntindexFieldNumber = 11,
    kAbilityEntindexFieldNumber = 7,
    kImpactedEntindexFieldNumber = 8,
  };
  // optional .CMsgVector trace_start = 1;
  bool has_trace_start() const;
  void clear_trace_start() ;
  const ::CMsgVector& trace_start() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_trace_start();
  ::CMsgVector* mutable_trace_start();
  void set_allocated_trace_start(::CMsgVector* value);
  void unsafe_arena_set_allocated_trace_start(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_trace_start();

  private:
  const ::CMsgVector& _internal_trace_start() const;
  ::CMsgVector* _internal_mutable_trace_start();

  public:
  // optional .CMsgVector impact_origin = 2;
  bool has_impact_origin() const;
  void clear_impact_origin() ;
  const ::CMsgVector& impact_origin() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_impact_origin();
  ::CMsgVector* mutable_impact_origin();
  void set_allocated_impact_origin(::CMsgVector* value);
  void unsafe_arena_set_allocated_impact_origin(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_impact_origin();

  private:
  const ::CMsgVector& _internal_impact_origin() const;
  ::CMsgVector* _internal_mutable_impact_origin();

  public:
  // optional .CMsgVector surface_normal = 3;
  bool has_surface_normal() const;
  void clear_surface_normal() ;
  const ::CMsgVector& surface_normal() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_surface_normal();
  ::CMsgVector* mutable_surface_normal();
  void set_allocated_surface_normal(::CMsgVector* value);
  void unsafe_arena_set_allocated_surface_normal(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_surface_normal();

  private:
  const ::CMsgVector& _internal_surface_normal() const;
  ::CMsgVector* _internal_mutable_surface_normal();

  public:
  // optional uint32 damage = 4;
  bool has_damage() const;
  void clear_damage() ;
  ::uint32_t damage() const;
  void set_damage(::uint32_t value);

  private:
  ::uint32_t _internal_damage() const;
  void _internal_set_damage(::uint32_t value);

  public:
  // optional uint32 surface_type = 5;
  bool has_surface_type() const;
  void clear_surface_type() ;
  ::uint32_t surface_type() const;
  void set_surface_type(::uint32_t value);

  private:
  ::uint32_t _internal_surface_type() const;
  void _internal_set_surface_type(::uint32_t value);

  public:
  // optional uint32 impacted_hitbox = 9;
  bool has_impacted_hitbox() const;
  void clear_impacted_hitbox() ;
  ::uint32_t impacted_hitbox() const;
  void set_impacted_hitbox(::uint32_t value);

  private:
  ::uint32_t _internal_impacted_hitbox() const;
  void _internal_set_impacted_hitbox(::uint32_t value);

  public:
  // optional uint32 weapon_subclass_id = 10;
  bool has_weapon_subclass_id() const;
  void clear_weapon_subclass_id() ;
  ::uint32_t weapon_subclass_id() const;
  void set_weapon_subclass_id(::uint32_t value);

  private:
  ::uint32_t _internal_weapon_subclass_id() const;
  void _internal_set_weapon_subclass_id(::uint32_t value);

  public:
  // optional int32 shooter_entindex = 11 [default = -1];
  bool has_shooter_entindex() const;
  void clear_shooter_entindex() ;
  ::int32_t shooter_entindex() const;
  void set_shooter_entindex(::int32_t value);

  private:
  ::int32_t _internal_shooter_entindex() const;
  void _internal_set_shooter_entindex(::int32_t value);

  public:
  // optional int32 ability_entindex = 7 [default = -1];
  bool has_ability_entindex() const;
  void clear_ability_entindex() ;
  ::int32_t ability_entindex() const;
  void set_ability_entindex(::int32_t value);

  private:
  ::int32_t _internal_ability_entindex() const;
  void _internal_set_ability_entindex(::int32_t value);

  public:
  // optional int32 impacted_entindex = 8 [default = -1];
  bool has_impacted_entindex() const;
  void clear_impacted_entindex() ;
  ::int32_t impacted_entindex() const;
  void set_impacted_entindex(::int32_t value);

  private:
  ::int32_t _internal_impacted_entindex() const;
  void _internal_set_impacted_entindex(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgBulletImpact)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgBulletImpact_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgBulletImpact& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgVector* trace_start_;
    ::CMsgVector* impact_origin_;
    ::CMsgVector* surface_normal_;
    ::uint32_t damage_;
    ::uint32_t surface_type_;
    ::uint32_t impacted_hitbox_;
    ::uint32_t weapon_subclass_id_;
    ::int32_t shooter_entindex_;
    ::int32_t ability_entindex_;
    ::int32_t impacted_entindex_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgParticleSystemManager final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgParticleSystemManager) */ {
 public:
  inline CMsgParticleSystemManager() : CMsgParticleSystemManager(nullptr) {}
  ~CMsgParticleSystemManager() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgParticleSystemManager(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgParticleSystemManager(const CMsgParticleSystemManager& from) : CMsgParticleSystemManager(nullptr, from) {}
  inline CMsgParticleSystemManager(CMsgParticleSystemManager&& from) noexcept
      : CMsgParticleSystemManager(nullptr, std::move(from)) {}
  inline CMsgParticleSystemManager& operator=(const CMsgParticleSystemManager& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgParticleSystemManager& operator=(CMsgParticleSystemManager&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgParticleSystemManager& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgParticleSystemManager* internal_default_instance() {
    return reinterpret_cast<const CMsgParticleSystemManager*>(
        &_CMsgParticleSystemManager_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(CMsgParticleSystemManager& a, CMsgParticleSystemManager& b) { a.Swap(&b); }
  inline void Swap(CMsgParticleSystemManager* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgParticleSystemManager* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgParticleSystemManager* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgParticleSystemManager>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgParticleSystemManager& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgParticleSystemManager& from) { CMsgParticleSystemManager::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return IsInitializedImpl(*this);
  }

  private:
  static bool IsInitializedImpl(const MessageLite& msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgParticleSystemManager* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgParticleSystemManager"; }

 protected:
  explicit CMsgParticleSystemManager(::google::protobuf::Arena* arena);
  CMsgParticleSystemManager(::google::protobuf::Arena* arena, const CMsgParticleSystemManager& from);
  CMsgParticleSystemManager(::google::protobuf::Arena* arena, CMsgParticleSystemManager&& from) noexcept
      : CMsgParticleSystemManager(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CreateParticle = CMsgParticleSystemManager_CreateParticle;
  using DestroyParticle = CMsgParticleSystemManager_DestroyParticle;
  using DestroyParticleInvolving = CMsgParticleSystemManager_DestroyParticleInvolving;
  using ReleaseParticleIndex = CMsgParticleSystemManager_ReleaseParticleIndex;
  using UpdateParticle = CMsgParticleSystemManager_UpdateParticle;
  using UpdateParticleFwd = CMsgParticleSystemManager_UpdateParticleFwd;
  using UpdateParticleOrient = CMsgParticleSystemManager_UpdateParticleOrient;
  using UpdateParticleFallback = CMsgParticleSystemManager_UpdateParticleFallback;
  using UpdateParticleEnt = CMsgParticleSystemManager_UpdateParticleEnt;
  using UpdateParticleOffset = CMsgParticleSystemManager_UpdateParticleOffset;
  using UpdateParticleFrozen = CMsgParticleSystemManager_UpdateParticleFrozen;
  using UpdateParticleShouldDraw = CMsgParticleSystemManager_UpdateParticleShouldDraw;

  // accessors -------------------------------------------------------
  enum : int {
    kCreateParticleFieldNumber = 3,
    kDestroyParticleFieldNumber = 4,
    kDestroyParticleInvolvingFieldNumber = 5,
    kReleaseParticleIndexFieldNumber = 6,
    kUpdateParticleFieldNumber = 7,
    kUpdateParticleFwdFieldNumber = 8,
    kUpdateParticleOrientFieldNumber = 9,
    kUpdateParticleFallbackFieldNumber = 10,
    kUpdateParticleOffsetFieldNumber = 11,
    kUpdateParticleEntFieldNumber = 12,
    kUpdateParticleFrozenFieldNumber = 13,
    kUpdateParticleShouldDrawFieldNumber = 14,
    kTypeFieldNumber = 1,
    kIndexFieldNumber = 2,
  };
  // optional .CMsgParticleSystemManager.CreateParticle create_particle = 3;
  bool has_create_particle() const;
  void clear_create_particle() ;
  const ::CMsgParticleSystemManager_CreateParticle& create_particle() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_CreateParticle* release_create_particle();
  ::CMsgParticleSystemManager_CreateParticle* mutable_create_particle();
  void set_allocated_create_particle(::CMsgParticleSystemManager_CreateParticle* value);
  void unsafe_arena_set_allocated_create_particle(::CMsgParticleSystemManager_CreateParticle* value);
  ::CMsgParticleSystemManager_CreateParticle* unsafe_arena_release_create_particle();

  private:
  const ::CMsgParticleSystemManager_CreateParticle& _internal_create_particle() const;
  ::CMsgParticleSystemManager_CreateParticle* _internal_mutable_create_particle();

  public:
  // optional .CMsgParticleSystemManager.DestroyParticle destroy_particle = 4;
  bool has_destroy_particle() const;
  void clear_destroy_particle() ;
  const ::CMsgParticleSystemManager_DestroyParticle& destroy_particle() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_DestroyParticle* release_destroy_particle();
  ::CMsgParticleSystemManager_DestroyParticle* mutable_destroy_particle();
  void set_allocated_destroy_particle(::CMsgParticleSystemManager_DestroyParticle* value);
  void unsafe_arena_set_allocated_destroy_particle(::CMsgParticleSystemManager_DestroyParticle* value);
  ::CMsgParticleSystemManager_DestroyParticle* unsafe_arena_release_destroy_particle();

  private:
  const ::CMsgParticleSystemManager_DestroyParticle& _internal_destroy_particle() const;
  ::CMsgParticleSystemManager_DestroyParticle* _internal_mutable_destroy_particle();

  public:
  // optional .CMsgParticleSystemManager.DestroyParticleInvolving destroy_particle_involving = 5;
  bool has_destroy_particle_involving() const;
  void clear_destroy_particle_involving() ;
  const ::CMsgParticleSystemManager_DestroyParticleInvolving& destroy_particle_involving() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_DestroyParticleInvolving* release_destroy_particle_involving();
  ::CMsgParticleSystemManager_DestroyParticleInvolving* mutable_destroy_particle_involving();
  void set_allocated_destroy_particle_involving(::CMsgParticleSystemManager_DestroyParticleInvolving* value);
  void unsafe_arena_set_allocated_destroy_particle_involving(::CMsgParticleSystemManager_DestroyParticleInvolving* value);
  ::CMsgParticleSystemManager_DestroyParticleInvolving* unsafe_arena_release_destroy_particle_involving();

  private:
  const ::CMsgParticleSystemManager_DestroyParticleInvolving& _internal_destroy_particle_involving() const;
  ::CMsgParticleSystemManager_DestroyParticleInvolving* _internal_mutable_destroy_particle_involving();

  public:
  // optional .CMsgParticleSystemManager.ReleaseParticleIndex release_particle_index = 6;
  bool has_release_particle_index() const;
  void clear_release_particle_index() ;
  const ::CMsgParticleSystemManager_ReleaseParticleIndex& release_particle_index() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_ReleaseParticleIndex* release_release_particle_index();
  ::CMsgParticleSystemManager_ReleaseParticleIndex* mutable_release_particle_index();
  void set_allocated_release_particle_index(::CMsgParticleSystemManager_ReleaseParticleIndex* value);
  void unsafe_arena_set_allocated_release_particle_index(::CMsgParticleSystemManager_ReleaseParticleIndex* value);
  ::CMsgParticleSystemManager_ReleaseParticleIndex* unsafe_arena_release_release_particle_index();

  private:
  const ::CMsgParticleSystemManager_ReleaseParticleIndex& _internal_release_particle_index() const;
  ::CMsgParticleSystemManager_ReleaseParticleIndex* _internal_mutable_release_particle_index();

  public:
  // optional .CMsgParticleSystemManager.UpdateParticle update_particle = 7;
  bool has_update_particle() const;
  void clear_update_particle() ;
  const ::CMsgParticleSystemManager_UpdateParticle& update_particle() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_UpdateParticle* release_update_particle();
  ::CMsgParticleSystemManager_UpdateParticle* mutable_update_particle();
  void set_allocated_update_particle(::CMsgParticleSystemManager_UpdateParticle* value);
  void unsafe_arena_set_allocated_update_particle(::CMsgParticleSystemManager_UpdateParticle* value);
  ::CMsgParticleSystemManager_UpdateParticle* unsafe_arena_release_update_particle();

  private:
  const ::CMsgParticleSystemManager_UpdateParticle& _internal_update_particle() const;
  ::CMsgParticleSystemManager_UpdateParticle* _internal_mutable_update_particle();

  public:
  // optional .CMsgParticleSystemManager.UpdateParticleFwd update_particle_fwd = 8;
  bool has_update_particle_fwd() const;
  void clear_update_particle_fwd() ;
  const ::CMsgParticleSystemManager_UpdateParticleFwd& update_particle_fwd() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_UpdateParticleFwd* release_update_particle_fwd();
  ::CMsgParticleSystemManager_UpdateParticleFwd* mutable_update_particle_fwd();
  void set_allocated_update_particle_fwd(::CMsgParticleSystemManager_UpdateParticleFwd* value);
  void unsafe_arena_set_allocated_update_particle_fwd(::CMsgParticleSystemManager_UpdateParticleFwd* value);
  ::CMsgParticleSystemManager_UpdateParticleFwd* unsafe_arena_release_update_particle_fwd();

  private:
  const ::CMsgParticleSystemManager_UpdateParticleFwd& _internal_update_particle_fwd() const;
  ::CMsgParticleSystemManager_UpdateParticleFwd* _internal_mutable_update_particle_fwd();

  public:
  // optional .CMsgParticleSystemManager.UpdateParticleOrient update_particle_orient = 9;
  bool has_update_particle_orient() const;
  void clear_update_particle_orient() ;
  const ::CMsgParticleSystemManager_UpdateParticleOrient& update_particle_orient() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_UpdateParticleOrient* release_update_particle_orient();
  ::CMsgParticleSystemManager_UpdateParticleOrient* mutable_update_particle_orient();
  void set_allocated_update_particle_orient(::CMsgParticleSystemManager_UpdateParticleOrient* value);
  void unsafe_arena_set_allocated_update_particle_orient(::CMsgParticleSystemManager_UpdateParticleOrient* value);
  ::CMsgParticleSystemManager_UpdateParticleOrient* unsafe_arena_release_update_particle_orient();

  private:
  const ::CMsgParticleSystemManager_UpdateParticleOrient& _internal_update_particle_orient() const;
  ::CMsgParticleSystemManager_UpdateParticleOrient* _internal_mutable_update_particle_orient();

  public:
  // optional .CMsgParticleSystemManager.UpdateParticleFallback update_particle_fallback = 10;
  bool has_update_particle_fallback() const;
  void clear_update_particle_fallback() ;
  const ::CMsgParticleSystemManager_UpdateParticleFallback& update_particle_fallback() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_UpdateParticleFallback* release_update_particle_fallback();
  ::CMsgParticleSystemManager_UpdateParticleFallback* mutable_update_particle_fallback();
  void set_allocated_update_particle_fallback(::CMsgParticleSystemManager_UpdateParticleFallback* value);
  void unsafe_arena_set_allocated_update_particle_fallback(::CMsgParticleSystemManager_UpdateParticleFallback* value);
  ::CMsgParticleSystemManager_UpdateParticleFallback* unsafe_arena_release_update_particle_fallback();

  private:
  const ::CMsgParticleSystemManager_UpdateParticleFallback& _internal_update_particle_fallback() const;
  ::CMsgParticleSystemManager_UpdateParticleFallback* _internal_mutable_update_particle_fallback();

  public:
  // optional .CMsgParticleSystemManager.UpdateParticleOffset update_particle_offset = 11;
  bool has_update_particle_offset() const;
  void clear_update_particle_offset() ;
  const ::CMsgParticleSystemManager_UpdateParticleOffset& update_particle_offset() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_UpdateParticleOffset* release_update_particle_offset();
  ::CMsgParticleSystemManager_UpdateParticleOffset* mutable_update_particle_offset();
  void set_allocated_update_particle_offset(::CMsgParticleSystemManager_UpdateParticleOffset* value);
  void unsafe_arena_set_allocated_update_particle_offset(::CMsgParticleSystemManager_UpdateParticleOffset* value);
  ::CMsgParticleSystemManager_UpdateParticleOffset* unsafe_arena_release_update_particle_offset();

  private:
  const ::CMsgParticleSystemManager_UpdateParticleOffset& _internal_update_particle_offset() const;
  ::CMsgParticleSystemManager_UpdateParticleOffset* _internal_mutable_update_particle_offset();

  public:
  // optional .CMsgParticleSystemManager.UpdateParticleEnt update_particle_ent = 12;
  bool has_update_particle_ent() const;
  void clear_update_particle_ent() ;
  const ::CMsgParticleSystemManager_UpdateParticleEnt& update_particle_ent() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_UpdateParticleEnt* release_update_particle_ent();
  ::CMsgParticleSystemManager_UpdateParticleEnt* mutable_update_particle_ent();
  void set_allocated_update_particle_ent(::CMsgParticleSystemManager_UpdateParticleEnt* value);
  void unsafe_arena_set_allocated_update_particle_ent(::CMsgParticleSystemManager_UpdateParticleEnt* value);
  ::CMsgParticleSystemManager_UpdateParticleEnt* unsafe_arena_release_update_particle_ent();

  private:
  const ::CMsgParticleSystemManager_UpdateParticleEnt& _internal_update_particle_ent() const;
  ::CMsgParticleSystemManager_UpdateParticleEnt* _internal_mutable_update_particle_ent();

  public:
  // optional .CMsgParticleSystemManager.UpdateParticleFrozen update_particle_frozen = 13;
  bool has_update_particle_frozen() const;
  void clear_update_particle_frozen() ;
  const ::CMsgParticleSystemManager_UpdateParticleFrozen& update_particle_frozen() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_UpdateParticleFrozen* release_update_particle_frozen();
  ::CMsgParticleSystemManager_UpdateParticleFrozen* mutable_update_particle_frozen();
  void set_allocated_update_particle_frozen(::CMsgParticleSystemManager_UpdateParticleFrozen* value);
  void unsafe_arena_set_allocated_update_particle_frozen(::CMsgParticleSystemManager_UpdateParticleFrozen* value);
  ::CMsgParticleSystemManager_UpdateParticleFrozen* unsafe_arena_release_update_particle_frozen();

  private:
  const ::CMsgParticleSystemManager_UpdateParticleFrozen& _internal_update_particle_frozen() const;
  ::CMsgParticleSystemManager_UpdateParticleFrozen* _internal_mutable_update_particle_frozen();

  public:
  // optional .CMsgParticleSystemManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
  bool has_update_particle_should_draw() const;
  void clear_update_particle_should_draw() ;
  const ::CMsgParticleSystemManager_UpdateParticleShouldDraw& update_particle_should_draw() const;
  PROTOBUF_NODISCARD ::CMsgParticleSystemManager_UpdateParticleShouldDraw* release_update_particle_should_draw();
  ::CMsgParticleSystemManager_UpdateParticleShouldDraw* mutable_update_particle_should_draw();
  void set_allocated_update_particle_should_draw(::CMsgParticleSystemManager_UpdateParticleShouldDraw* value);
  void unsafe_arena_set_allocated_update_particle_should_draw(::CMsgParticleSystemManager_UpdateParticleShouldDraw* value);
  ::CMsgParticleSystemManager_UpdateParticleShouldDraw* unsafe_arena_release_update_particle_should_draw();

  private:
  const ::CMsgParticleSystemManager_UpdateParticleShouldDraw& _internal_update_particle_should_draw() const;
  ::CMsgParticleSystemManager_UpdateParticleShouldDraw* _internal_mutable_update_particle_should_draw();

  public:
  // required .PARTICLE_SYSTEM_MANAGER_MESSAGE type = 1 [default = PARTICLE_SYSTEM_MANAGER_EVENT_CREATE];
  bool has_type() const;
  void clear_type() ;
  ::PARTICLE_SYSTEM_MANAGER_MESSAGE type() const;
  void set_type(::PARTICLE_SYSTEM_MANAGER_MESSAGE value);

  private:
  ::PARTICLE_SYSTEM_MANAGER_MESSAGE _internal_type() const;
  void _internal_set_type(::PARTICLE_SYSTEM_MANAGER_MESSAGE value);

  public:
  // required uint32 index = 2;
  bool has_index() const;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgParticleSystemManager)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 13,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgParticleSystemManager_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgParticleSystemManager& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CMsgParticleSystemManager_CreateParticle* create_particle_;
    ::CMsgParticleSystemManager_DestroyParticle* destroy_particle_;
    ::CMsgParticleSystemManager_DestroyParticleInvolving* destroy_particle_involving_;
    ::CMsgParticleSystemManager_ReleaseParticleIndex* release_particle_index_;
    ::CMsgParticleSystemManager_UpdateParticle* update_particle_;
    ::CMsgParticleSystemManager_UpdateParticleFwd* update_particle_fwd_;
    ::CMsgParticleSystemManager_UpdateParticleOrient* update_particle_orient_;
    ::CMsgParticleSystemManager_UpdateParticleFallback* update_particle_fallback_;
    ::CMsgParticleSystemManager_UpdateParticleOffset* update_particle_offset_;
    ::CMsgParticleSystemManager_UpdateParticleEnt* update_particle_ent_;
    ::CMsgParticleSystemManager_UpdateParticleFrozen* update_particle_frozen_;
    ::CMsgParticleSystemManager_UpdateParticleShouldDraw* update_particle_should_draw_;
    int type_;
    ::uint32_t index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fgameevents_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CMsgFireBullets_TracerAssignment

// optional uint64 tracer_resource_id = 1;
inline bool CMsgFireBullets_TracerAssignment::has_tracer_resource_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgFireBullets_TracerAssignment::clear_tracer_resource_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracer_resource_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CMsgFireBullets_TracerAssignment::tracer_resource_id() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.TracerAssignment.tracer_resource_id)
  return _internal_tracer_resource_id();
}
inline void CMsgFireBullets_TracerAssignment::set_tracer_resource_id(::uint64_t value) {
  _internal_set_tracer_resource_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.TracerAssignment.tracer_resource_id)
}
inline ::uint64_t CMsgFireBullets_TracerAssignment::_internal_tracer_resource_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tracer_resource_id_;
}
inline void CMsgFireBullets_TracerAssignment::_internal_set_tracer_resource_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracer_resource_id_ = value;
}

// optional uint32 bullet_indicies = 2;
inline bool CMsgFireBullets_TracerAssignment::has_bullet_indicies() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgFireBullets_TracerAssignment::clear_bullet_indicies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bullet_indicies_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgFireBullets_TracerAssignment::bullet_indicies() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.TracerAssignment.bullet_indicies)
  return _internal_bullet_indicies();
}
inline void CMsgFireBullets_TracerAssignment::set_bullet_indicies(::uint32_t value) {
  _internal_set_bullet_indicies(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.TracerAssignment.bullet_indicies)
}
inline ::uint32_t CMsgFireBullets_TracerAssignment::_internal_bullet_indicies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bullet_indicies_;
}
inline void CMsgFireBullets_TracerAssignment::_internal_set_bullet_indicies(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bullet_indicies_ = value;
}

// -------------------------------------------------------------------

// CMsgFireBullets

// optional .CMsgVector origin = 1;
inline bool CMsgFireBullets::has_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.origin_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgFireBullets::_internal_origin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgFireBullets::origin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.origin)
  return _internal_origin();
}
inline void CMsgFireBullets::unsafe_arena_set_allocated_origin(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.origin_);
  }
  _impl_.origin_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgFireBullets.origin)
}
inline ::CMsgVector* CMsgFireBullets::release_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.origin_;
  _impl_.origin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgFireBullets::unsafe_arena_release_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgFireBullets.origin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.origin_;
  _impl_.origin_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgFireBullets::_internal_mutable_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.origin_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.origin_;
}
inline ::CMsgVector* CMsgFireBullets::mutable_origin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_origin();
  // @@protoc_insertion_point(field_mutable:CMsgFireBullets.origin)
  return _msg;
}
inline void CMsgFireBullets::set_allocated_origin(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.origin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.origin_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgFireBullets.origin)
}

// optional .CMsgQAngle angles = 2;
inline bool CMsgFireBullets::has_angles() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.angles_ != nullptr);
  return value;
}
inline const ::CMsgQAngle& CMsgFireBullets::_internal_angles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgQAngle* p = _impl_.angles_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgQAngle&>(::_CMsgQAngle_default_instance_);
}
inline const ::CMsgQAngle& CMsgFireBullets::angles() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.angles)
  return _internal_angles();
}
inline void CMsgFireBullets::unsafe_arena_set_allocated_angles(::CMsgQAngle* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angles_);
  }
  _impl_.angles_ = reinterpret_cast<::CMsgQAngle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgFireBullets.angles)
}
inline ::CMsgQAngle* CMsgFireBullets::release_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgQAngle* released = _impl_.angles_;
  _impl_.angles_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgQAngle* CMsgFireBullets::unsafe_arena_release_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgFireBullets.angles)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgQAngle* temp = _impl_.angles_;
  _impl_.angles_ = nullptr;
  return temp;
}
inline ::CMsgQAngle* CMsgFireBullets::_internal_mutable_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgQAngle>(GetArena());
    _impl_.angles_ = reinterpret_cast<::CMsgQAngle*>(p);
  }
  return _impl_.angles_;
}
inline ::CMsgQAngle* CMsgFireBullets::mutable_angles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgQAngle* _msg = _internal_mutable_angles();
  // @@protoc_insertion_point(field_mutable:CMsgFireBullets.angles)
  return _msg;
}
inline void CMsgFireBullets::set_allocated_angles(::CMsgQAngle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angles_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.angles_ = reinterpret_cast<::CMsgQAngle*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgFireBullets.angles)
}

// optional uint32 seed = 4;
inline bool CMsgFireBullets::has_seed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_seed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgFireBullets::seed() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.seed)
  return _internal_seed();
}
inline void CMsgFireBullets::set_seed(::uint32_t value) {
  _internal_set_seed(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.seed)
}
inline ::uint32_t CMsgFireBullets::_internal_seed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_;
}
inline void CMsgFireBullets::_internal_set_seed(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_ = value;
}

// optional int32 shooter_entity = 5 [default = -1];
inline bool CMsgFireBullets::has_shooter_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_shooter_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shooter_entity_ = -1;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int32_t CMsgFireBullets::shooter_entity() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.shooter_entity)
  return _internal_shooter_entity();
}
inline void CMsgFireBullets::set_shooter_entity(::int32_t value) {
  _internal_set_shooter_entity(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.shooter_entity)
}
inline ::int32_t CMsgFireBullets::_internal_shooter_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shooter_entity_;
}
inline void CMsgFireBullets::_internal_set_shooter_entity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shooter_entity_ = value;
}

// optional int32 ability = 7 [default = -1];
inline bool CMsgFireBullets::has_ability() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_ability() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ability_ = -1;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int32_t CMsgFireBullets::ability() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.ability)
  return _internal_ability();
}
inline void CMsgFireBullets::set_ability(::int32_t value) {
  _internal_set_ability(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.ability)
}
inline ::int32_t CMsgFireBullets::_internal_ability() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ability_;
}
inline void CMsgFireBullets::_internal_set_ability(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ability_ = value;
}

// optional float penetration_percent = 8;
inline bool CMsgFireBullets::has_penetration_percent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_penetration_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penetration_percent_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float CMsgFireBullets::penetration_percent() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.penetration_percent)
  return _internal_penetration_percent();
}
inline void CMsgFireBullets::set_penetration_percent(float value) {
  _internal_set_penetration_percent(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.penetration_percent)
}
inline float CMsgFireBullets::_internal_penetration_percent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.penetration_percent_;
}
inline void CMsgFireBullets::_internal_set_penetration_percent(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.penetration_percent_ = value;
}

// optional float spread = 9;
inline bool CMsgFireBullets::has_spread() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_spread() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spread_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float CMsgFireBullets::spread() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.spread)
  return _internal_spread();
}
inline void CMsgFireBullets::set_spread(float value) {
  _internal_set_spread(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.spread)
}
inline float CMsgFireBullets::_internal_spread() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spread_;
}
inline void CMsgFireBullets::_internal_set_spread(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spread_ = value;
}

// optional bool fired_from_gun = 10 [default = true];
inline bool CMsgFireBullets::has_fired_from_gun() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_fired_from_gun() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fired_from_gun_ = true;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline bool CMsgFireBullets::fired_from_gun() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.fired_from_gun)
  return _internal_fired_from_gun();
}
inline void CMsgFireBullets::set_fired_from_gun(bool value) {
  _internal_set_fired_from_gun(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.fired_from_gun)
}
inline bool CMsgFireBullets::_internal_fired_from_gun() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fired_from_gun_;
}
inline void CMsgFireBullets::_internal_set_fired_from_gun(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fired_from_gun_ = value;
}

// optional uint32 bullets_override = 11;
inline bool CMsgFireBullets::has_bullets_override() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_bullets_override() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bullets_override_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgFireBullets::bullets_override() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.bullets_override)
  return _internal_bullets_override();
}
inline void CMsgFireBullets::set_bullets_override(::uint32_t value) {
  _internal_set_bullets_override(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.bullets_override)
}
inline ::uint32_t CMsgFireBullets::_internal_bullets_override() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bullets_override_;
}
inline void CMsgFireBullets::_internal_set_bullets_override(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bullets_override_ = value;
}

// optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;
inline bool CMsgFireBullets::has_tracer_replacement() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tracer_replacement_ != nullptr);
  return value;
}
inline void CMsgFireBullets::clear_tracer_replacement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tracer_replacement_ != nullptr) _impl_.tracer_replacement_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgFireBullets_TracerAssignment& CMsgFireBullets::_internal_tracer_replacement() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgFireBullets_TracerAssignment* p = _impl_.tracer_replacement_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgFireBullets_TracerAssignment&>(::_CMsgFireBullets_TracerAssignment_default_instance_);
}
inline const ::CMsgFireBullets_TracerAssignment& CMsgFireBullets::tracer_replacement() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.tracer_replacement)
  return _internal_tracer_replacement();
}
inline void CMsgFireBullets::unsafe_arena_set_allocated_tracer_replacement(::CMsgFireBullets_TracerAssignment* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tracer_replacement_);
  }
  _impl_.tracer_replacement_ = reinterpret_cast<::CMsgFireBullets_TracerAssignment*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgFireBullets.tracer_replacement)
}
inline ::CMsgFireBullets_TracerAssignment* CMsgFireBullets::release_tracer_replacement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgFireBullets_TracerAssignment* released = _impl_.tracer_replacement_;
  _impl_.tracer_replacement_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgFireBullets_TracerAssignment* CMsgFireBullets::unsafe_arena_release_tracer_replacement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgFireBullets.tracer_replacement)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgFireBullets_TracerAssignment* temp = _impl_.tracer_replacement_;
  _impl_.tracer_replacement_ = nullptr;
  return temp;
}
inline ::CMsgFireBullets_TracerAssignment* CMsgFireBullets::_internal_mutable_tracer_replacement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tracer_replacement_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgFireBullets_TracerAssignment>(GetArena());
    _impl_.tracer_replacement_ = reinterpret_cast<::CMsgFireBullets_TracerAssignment*>(p);
  }
  return _impl_.tracer_replacement_;
}
inline ::CMsgFireBullets_TracerAssignment* CMsgFireBullets::mutable_tracer_replacement() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgFireBullets_TracerAssignment* _msg = _internal_mutable_tracer_replacement();
  // @@protoc_insertion_point(field_mutable:CMsgFireBullets.tracer_replacement)
  return _msg;
}
inline void CMsgFireBullets::set_allocated_tracer_replacement(::CMsgFireBullets_TracerAssignment* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.tracer_replacement_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.tracer_replacement_ = reinterpret_cast<::CMsgFireBullets_TracerAssignment*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgFireBullets.tracer_replacement)
}

// repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;
inline int CMsgFireBullets::_internal_tracer_additional_size() const {
  return _internal_tracer_additional().size();
}
inline int CMsgFireBullets::tracer_additional_size() const {
  return _internal_tracer_additional_size();
}
inline void CMsgFireBullets::clear_tracer_additional() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tracer_additional_.Clear();
}
inline ::CMsgFireBullets_TracerAssignment* CMsgFireBullets::mutable_tracer_additional(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CMsgFireBullets.tracer_additional)
  return _internal_mutable_tracer_additional()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CMsgFireBullets_TracerAssignment>* CMsgFireBullets::mutable_tracer_additional()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CMsgFireBullets.tracer_additional)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tracer_additional();
}
inline const ::CMsgFireBullets_TracerAssignment& CMsgFireBullets::tracer_additional(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.tracer_additional)
  return _internal_tracer_additional().Get(index);
}
inline ::CMsgFireBullets_TracerAssignment* CMsgFireBullets::add_tracer_additional() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CMsgFireBullets_TracerAssignment* _add = _internal_mutable_tracer_additional()->Add();
  // @@protoc_insertion_point(field_add:CMsgFireBullets.tracer_additional)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgFireBullets_TracerAssignment>& CMsgFireBullets::tracer_additional() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CMsgFireBullets.tracer_additional)
  return _internal_tracer_additional();
}
inline const ::google::protobuf::RepeatedPtrField<::CMsgFireBullets_TracerAssignment>&
CMsgFireBullets::_internal_tracer_additional() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tracer_additional_;
}
inline ::google::protobuf::RepeatedPtrField<::CMsgFireBullets_TracerAssignment>*
CMsgFireBullets::_internal_mutable_tracer_additional() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tracer_additional_;
}

// optional .CMsgQAngle angles_original = 14;
inline bool CMsgFireBullets::has_angles_original() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.angles_original_ != nullptr);
  return value;
}
inline const ::CMsgQAngle& CMsgFireBullets::_internal_angles_original() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgQAngle* p = _impl_.angles_original_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgQAngle&>(::_CMsgQAngle_default_instance_);
}
inline const ::CMsgQAngle& CMsgFireBullets::angles_original() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.angles_original)
  return _internal_angles_original();
}
inline void CMsgFireBullets::unsafe_arena_set_allocated_angles_original(::CMsgQAngle* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angles_original_);
  }
  _impl_.angles_original_ = reinterpret_cast<::CMsgQAngle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgFireBullets.angles_original)
}
inline ::CMsgQAngle* CMsgFireBullets::release_angles_original() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgQAngle* released = _impl_.angles_original_;
  _impl_.angles_original_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgQAngle* CMsgFireBullets::unsafe_arena_release_angles_original() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgFireBullets.angles_original)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgQAngle* temp = _impl_.angles_original_;
  _impl_.angles_original_ = nullptr;
  return temp;
}
inline ::CMsgQAngle* CMsgFireBullets::_internal_mutable_angles_original() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_original_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgQAngle>(GetArena());
    _impl_.angles_original_ = reinterpret_cast<::CMsgQAngle*>(p);
  }
  return _impl_.angles_original_;
}
inline ::CMsgQAngle* CMsgFireBullets::mutable_angles_original() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::CMsgQAngle* _msg = _internal_mutable_angles_original();
  // @@protoc_insertion_point(field_mutable:CMsgFireBullets.angles_original)
  return _msg;
}
inline void CMsgFireBullets::set_allocated_angles_original(::CMsgQAngle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angles_original_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.angles_original_ = reinterpret_cast<::CMsgQAngle*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgFireBullets.angles_original)
}

// optional uint32 weapon_subclass_id = 15;
inline bool CMsgFireBullets::has_weapon_subclass_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_weapon_subclass_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_subclass_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t CMsgFireBullets::weapon_subclass_id() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.weapon_subclass_id)
  return _internal_weapon_subclass_id();
}
inline void CMsgFireBullets::set_weapon_subclass_id(::uint32_t value) {
  _internal_set_weapon_subclass_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.weapon_subclass_id)
}
inline ::uint32_t CMsgFireBullets::_internal_weapon_subclass_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_subclass_id_;
}
inline void CMsgFireBullets::_internal_set_weapon_subclass_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_subclass_id_ = value;
}

// optional uint32 shot_number = 16;
inline bool CMsgFireBullets::has_shot_number() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_shot_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shot_number_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgFireBullets::shot_number() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.shot_number)
  return _internal_shot_number();
}
inline void CMsgFireBullets::set_shot_number(::uint32_t value) {
  _internal_set_shot_number(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.shot_number)
}
inline ::uint32_t CMsgFireBullets::_internal_shot_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shot_number_;
}
inline void CMsgFireBullets::_internal_set_shot_number(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shot_number_ = value;
}

// optional int32 ignore_entity = 17 [default = -1];
inline bool CMsgFireBullets::has_ignore_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_ignore_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_entity_ = -1;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline ::int32_t CMsgFireBullets::ignore_entity() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.ignore_entity)
  return _internal_ignore_entity();
}
inline void CMsgFireBullets::set_ignore_entity(::int32_t value) {
  _internal_set_ignore_entity(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.ignore_entity)
}
inline ::int32_t CMsgFireBullets::_internal_ignore_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ignore_entity_;
}
inline void CMsgFireBullets::_internal_set_ignore_entity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignore_entity_ = value;
}

// optional float max_range = 18;
inline bool CMsgFireBullets::has_max_range() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgFireBullets::clear_max_range() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_range_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline float CMsgFireBullets::max_range() const {
  // @@protoc_insertion_point(field_get:CMsgFireBullets.max_range)
  return _internal_max_range();
}
inline void CMsgFireBullets::set_max_range(float value) {
  _internal_set_max_range(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgFireBullets.max_range)
}
inline float CMsgFireBullets::_internal_max_range() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_range_;
}
inline void CMsgFireBullets::_internal_set_max_range(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_range_ = value;
}

// -------------------------------------------------------------------

// CMsgBulletImpact

// optional .CMsgVector trace_start = 1;
inline bool CMsgBulletImpact::has_trace_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trace_start_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgBulletImpact::_internal_trace_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.trace_start_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgBulletImpact::trace_start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.trace_start)
  return _internal_trace_start();
}
inline void CMsgBulletImpact::unsafe_arena_set_allocated_trace_start(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trace_start_);
  }
  _impl_.trace_start_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBulletImpact.trace_start)
}
inline ::CMsgVector* CMsgBulletImpact::release_trace_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.trace_start_;
  _impl_.trace_start_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgBulletImpact::unsafe_arena_release_trace_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgBulletImpact.trace_start)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.trace_start_;
  _impl_.trace_start_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgBulletImpact::_internal_mutable_trace_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trace_start_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.trace_start_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.trace_start_;
}
inline ::CMsgVector* CMsgBulletImpact::mutable_trace_start() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_trace_start();
  // @@protoc_insertion_point(field_mutable:CMsgBulletImpact.trace_start)
  return _msg;
}
inline void CMsgBulletImpact::set_allocated_trace_start(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trace_start_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.trace_start_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgBulletImpact.trace_start)
}

// optional .CMsgVector impact_origin = 2;
inline bool CMsgBulletImpact::has_impact_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.impact_origin_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgBulletImpact::_internal_impact_origin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.impact_origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgBulletImpact::impact_origin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.impact_origin)
  return _internal_impact_origin();
}
inline void CMsgBulletImpact::unsafe_arena_set_allocated_impact_origin(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.impact_origin_);
  }
  _impl_.impact_origin_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBulletImpact.impact_origin)
}
inline ::CMsgVector* CMsgBulletImpact::release_impact_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* released = _impl_.impact_origin_;
  _impl_.impact_origin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgBulletImpact::unsafe_arena_release_impact_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgBulletImpact.impact_origin)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.impact_origin_;
  _impl_.impact_origin_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgBulletImpact::_internal_mutable_impact_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.impact_origin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.impact_origin_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.impact_origin_;
}
inline ::CMsgVector* CMsgBulletImpact::mutable_impact_origin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgVector* _msg = _internal_mutable_impact_origin();
  // @@protoc_insertion_point(field_mutable:CMsgBulletImpact.impact_origin)
  return _msg;
}
inline void CMsgBulletImpact::set_allocated_impact_origin(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.impact_origin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.impact_origin_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgBulletImpact.impact_origin)
}

// optional .CMsgVector surface_normal = 3;
inline bool CMsgBulletImpact::has_surface_normal() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.surface_normal_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgBulletImpact::_internal_surface_normal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.surface_normal_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgBulletImpact::surface_normal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.surface_normal)
  return _internal_surface_normal();
}
inline void CMsgBulletImpact::unsafe_arena_set_allocated_surface_normal(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_normal_);
  }
  _impl_.surface_normal_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBulletImpact.surface_normal)
}
inline ::CMsgVector* CMsgBulletImpact::release_surface_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgVector* released = _impl_.surface_normal_;
  _impl_.surface_normal_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgBulletImpact::unsafe_arena_release_surface_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgBulletImpact.surface_normal)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgVector* temp = _impl_.surface_normal_;
  _impl_.surface_normal_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgBulletImpact::_internal_mutable_surface_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.surface_normal_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.surface_normal_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.surface_normal_;
}
inline ::CMsgVector* CMsgBulletImpact::mutable_surface_normal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgVector* _msg = _internal_mutable_surface_normal();
  // @@protoc_insertion_point(field_mutable:CMsgBulletImpact.surface_normal)
  return _msg;
}
inline void CMsgBulletImpact::set_allocated_surface_normal(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.surface_normal_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.surface_normal_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgBulletImpact.surface_normal)
}

// optional uint32 damage = 4;
inline bool CMsgBulletImpact::has_damage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgBulletImpact::clear_damage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damage_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgBulletImpact::damage() const {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.damage)
  return _internal_damage();
}
inline void CMsgBulletImpact::set_damage(::uint32_t value) {
  _internal_set_damage(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgBulletImpact.damage)
}
inline ::uint32_t CMsgBulletImpact::_internal_damage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.damage_;
}
inline void CMsgBulletImpact::_internal_set_damage(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.damage_ = value;
}

// optional uint32 surface_type = 5;
inline bool CMsgBulletImpact::has_surface_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgBulletImpact::clear_surface_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.surface_type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgBulletImpact::surface_type() const {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.surface_type)
  return _internal_surface_type();
}
inline void CMsgBulletImpact::set_surface_type(::uint32_t value) {
  _internal_set_surface_type(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgBulletImpact.surface_type)
}
inline ::uint32_t CMsgBulletImpact::_internal_surface_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.surface_type_;
}
inline void CMsgBulletImpact::_internal_set_surface_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.surface_type_ = value;
}

// optional int32 ability_entindex = 7 [default = -1];
inline bool CMsgBulletImpact::has_ability_entindex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgBulletImpact::clear_ability_entindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ability_entindex_ = -1;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t CMsgBulletImpact::ability_entindex() const {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.ability_entindex)
  return _internal_ability_entindex();
}
inline void CMsgBulletImpact::set_ability_entindex(::int32_t value) {
  _internal_set_ability_entindex(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgBulletImpact.ability_entindex)
}
inline ::int32_t CMsgBulletImpact::_internal_ability_entindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ability_entindex_;
}
inline void CMsgBulletImpact::_internal_set_ability_entindex(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ability_entindex_ = value;
}

// optional int32 impacted_entindex = 8 [default = -1];
inline bool CMsgBulletImpact::has_impacted_entindex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgBulletImpact::clear_impacted_entindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.impacted_entindex_ = -1;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t CMsgBulletImpact::impacted_entindex() const {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.impacted_entindex)
  return _internal_impacted_entindex();
}
inline void CMsgBulletImpact::set_impacted_entindex(::int32_t value) {
  _internal_set_impacted_entindex(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgBulletImpact.impacted_entindex)
}
inline ::int32_t CMsgBulletImpact::_internal_impacted_entindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.impacted_entindex_;
}
inline void CMsgBulletImpact::_internal_set_impacted_entindex(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.impacted_entindex_ = value;
}

// optional uint32 impacted_hitbox = 9;
inline bool CMsgBulletImpact::has_impacted_hitbox() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgBulletImpact::clear_impacted_hitbox() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.impacted_hitbox_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t CMsgBulletImpact::impacted_hitbox() const {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.impacted_hitbox)
  return _internal_impacted_hitbox();
}
inline void CMsgBulletImpact::set_impacted_hitbox(::uint32_t value) {
  _internal_set_impacted_hitbox(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgBulletImpact.impacted_hitbox)
}
inline ::uint32_t CMsgBulletImpact::_internal_impacted_hitbox() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.impacted_hitbox_;
}
inline void CMsgBulletImpact::_internal_set_impacted_hitbox(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.impacted_hitbox_ = value;
}

// optional uint32 weapon_subclass_id = 10;
inline bool CMsgBulletImpact::has_weapon_subclass_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgBulletImpact::clear_weapon_subclass_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_subclass_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgBulletImpact::weapon_subclass_id() const {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.weapon_subclass_id)
  return _internal_weapon_subclass_id();
}
inline void CMsgBulletImpact::set_weapon_subclass_id(::uint32_t value) {
  _internal_set_weapon_subclass_id(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgBulletImpact.weapon_subclass_id)
}
inline ::uint32_t CMsgBulletImpact::_internal_weapon_subclass_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weapon_subclass_id_;
}
inline void CMsgBulletImpact::_internal_set_weapon_subclass_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weapon_subclass_id_ = value;
}

// optional int32 shooter_entindex = 11 [default = -1];
inline bool CMsgBulletImpact::has_shooter_entindex() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgBulletImpact::clear_shooter_entindex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shooter_entindex_ = -1;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t CMsgBulletImpact::shooter_entindex() const {
  // @@protoc_insertion_point(field_get:CMsgBulletImpact.shooter_entindex)
  return _internal_shooter_entindex();
}
inline void CMsgBulletImpact::set_shooter_entindex(::int32_t value) {
  _internal_set_shooter_entindex(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgBulletImpact.shooter_entindex)
}
inline ::int32_t CMsgBulletImpact::_internal_shooter_entindex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shooter_entindex_;
}
inline void CMsgBulletImpact::_internal_set_shooter_entindex(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shooter_entindex_ = value;
}

// -------------------------------------------------------------------

// CMsgPlayerAnimEvent

// optional fixed32 player = 1 [default = 16777215];
inline bool CMsgPlayerAnimEvent::has_player() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgPlayerAnimEvent::clear_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_ = 16777215u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgPlayerAnimEvent::player() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerAnimEvent.player)
  return _internal_player();
}
inline void CMsgPlayerAnimEvent::set_player(::uint32_t value) {
  _internal_set_player(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgPlayerAnimEvent.player)
}
inline ::uint32_t CMsgPlayerAnimEvent::_internal_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.player_;
}
inline void CMsgPlayerAnimEvent::_internal_set_player(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.player_ = value;
}

// optional uint32 event = 2;
inline bool CMsgPlayerAnimEvent::has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgPlayerAnimEvent::clear_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgPlayerAnimEvent::event() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerAnimEvent.event)
  return _internal_event();
}
inline void CMsgPlayerAnimEvent::set_event(::uint32_t value) {
  _internal_set_event(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgPlayerAnimEvent.event)
}
inline ::uint32_t CMsgPlayerAnimEvent::_internal_event() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_;
}
inline void CMsgPlayerAnimEvent::_internal_set_event(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_ = value;
}

// optional int32 data = 3;
inline bool CMsgPlayerAnimEvent::has_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgPlayerAnimEvent::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CMsgPlayerAnimEvent::data() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerAnimEvent.data)
  return _internal_data();
}
inline void CMsgPlayerAnimEvent::set_data(::int32_t value) {
  _internal_set_data(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgPlayerAnimEvent.data)
}
inline ::int32_t CMsgPlayerAnimEvent::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_;
}
inline void CMsgPlayerAnimEvent::_internal_set_data(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_ = value;
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_CreateParticle

// optional fixed64 particle_name_index = 1;
inline bool CMsgParticleSystemManager_CreateParticle::has_particle_name_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_CreateParticle::clear_particle_name_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.particle_name_index_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CMsgParticleSystemManager_CreateParticle::particle_name_index() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.CreateParticle.particle_name_index)
  return _internal_particle_name_index();
}
inline void CMsgParticleSystemManager_CreateParticle::set_particle_name_index(::uint64_t value) {
  _internal_set_particle_name_index(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.CreateParticle.particle_name_index)
}
inline ::uint64_t CMsgParticleSystemManager_CreateParticle::_internal_particle_name_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.particle_name_index_;
}
inline void CMsgParticleSystemManager_CreateParticle::_internal_set_particle_name_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.particle_name_index_ = value;
}

// optional int32 attach_type = 2;
inline bool CMsgParticleSystemManager_CreateParticle::has_attach_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_CreateParticle::clear_attach_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attach_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CMsgParticleSystemManager_CreateParticle::attach_type() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.CreateParticle.attach_type)
  return _internal_attach_type();
}
inline void CMsgParticleSystemManager_CreateParticle::set_attach_type(::int32_t value) {
  _internal_set_attach_type(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.CreateParticle.attach_type)
}
inline ::int32_t CMsgParticleSystemManager_CreateParticle::_internal_attach_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attach_type_;
}
inline void CMsgParticleSystemManager_CreateParticle::_internal_set_attach_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attach_type_ = value;
}

// optional uint32 entity_handle = 3 [default = 16777215];
inline bool CMsgParticleSystemManager_CreateParticle::has_entity_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_CreateParticle::clear_entity_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = 16777215u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgParticleSystemManager_CreateParticle::entity_handle() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.CreateParticle.entity_handle)
  return _internal_entity_handle();
}
inline void CMsgParticleSystemManager_CreateParticle::set_entity_handle(::uint32_t value) {
  _internal_set_entity_handle(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.CreateParticle.entity_handle)
}
inline ::uint32_t CMsgParticleSystemManager_CreateParticle::_internal_entity_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_handle_;
}
inline void CMsgParticleSystemManager_CreateParticle::_internal_set_entity_handle(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = value;
}

// optional .CMsgVector position = 4;
inline bool CMsgParticleSystemManager_CreateParticle::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgParticleSystemManager_CreateParticle::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgParticleSystemManager_CreateParticle::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.CreateParticle.position)
  return _internal_position();
}
inline void CMsgParticleSystemManager_CreateParticle::unsafe_arena_set_allocated_position(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.CreateParticle.position)
}
inline ::CMsgVector* CMsgParticleSystemManager_CreateParticle::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.position_;
  _impl_.position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgParticleSystemManager_CreateParticle::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.CreateParticle.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgParticleSystemManager_CreateParticle::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.position_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.position_;
}
inline ::CMsgVector* CMsgParticleSystemManager_CreateParticle::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.CreateParticle.position)
  return _msg;
}
inline void CMsgParticleSystemManager_CreateParticle::set_allocated_position(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.CreateParticle.position)
}

// optional .CMsgQAngle angles = 5;
inline bool CMsgParticleSystemManager_CreateParticle::has_angles() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.angles_ != nullptr);
  return value;
}
inline const ::CMsgQAngle& CMsgParticleSystemManager_CreateParticle::_internal_angles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgQAngle* p = _impl_.angles_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgQAngle&>(::_CMsgQAngle_default_instance_);
}
inline const ::CMsgQAngle& CMsgParticleSystemManager_CreateParticle::angles() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.CreateParticle.angles)
  return _internal_angles();
}
inline void CMsgParticleSystemManager_CreateParticle::unsafe_arena_set_allocated_angles(::CMsgQAngle* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angles_);
  }
  _impl_.angles_ = reinterpret_cast<::CMsgQAngle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.CreateParticle.angles)
}
inline ::CMsgQAngle* CMsgParticleSystemManager_CreateParticle::release_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgQAngle* released = _impl_.angles_;
  _impl_.angles_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgQAngle* CMsgParticleSystemManager_CreateParticle::unsafe_arena_release_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.CreateParticle.angles)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgQAngle* temp = _impl_.angles_;
  _impl_.angles_ = nullptr;
  return temp;
}
inline ::CMsgQAngle* CMsgParticleSystemManager_CreateParticle::_internal_mutable_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgQAngle>(GetArena());
    _impl_.angles_ = reinterpret_cast<::CMsgQAngle*>(p);
  }
  return _impl_.angles_;
}
inline ::CMsgQAngle* CMsgParticleSystemManager_CreateParticle::mutable_angles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgQAngle* _msg = _internal_mutable_angles();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.CreateParticle.angles)
  return _msg;
}
inline void CMsgParticleSystemManager_CreateParticle::set_allocated_angles(::CMsgQAngle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.angles_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.angles_ = reinterpret_cast<::CMsgQAngle*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.CreateParticle.angles)
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_DestroyParticle

// optional bool destroy_immediately = 1;
inline bool CMsgParticleSystemManager_DestroyParticle::has_destroy_immediately() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_DestroyParticle::clear_destroy_immediately() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destroy_immediately_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgParticleSystemManager_DestroyParticle::destroy_immediately() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.DestroyParticle.destroy_immediately)
  return _internal_destroy_immediately();
}
inline void CMsgParticleSystemManager_DestroyParticle::set_destroy_immediately(bool value) {
  _internal_set_destroy_immediately(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.DestroyParticle.destroy_immediately)
}
inline bool CMsgParticleSystemManager_DestroyParticle::_internal_destroy_immediately() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destroy_immediately_;
}
inline void CMsgParticleSystemManager_DestroyParticle::_internal_set_destroy_immediately(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destroy_immediately_ = value;
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_DestroyParticleInvolving

// optional bool destroy_immediately = 1;
inline bool CMsgParticleSystemManager_DestroyParticleInvolving::has_destroy_immediately() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_DestroyParticleInvolving::clear_destroy_immediately() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destroy_immediately_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgParticleSystemManager_DestroyParticleInvolving::destroy_immediately() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.DestroyParticleInvolving.destroy_immediately)
  return _internal_destroy_immediately();
}
inline void CMsgParticleSystemManager_DestroyParticleInvolving::set_destroy_immediately(bool value) {
  _internal_set_destroy_immediately(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.DestroyParticleInvolving.destroy_immediately)
}
inline bool CMsgParticleSystemManager_DestroyParticleInvolving::_internal_destroy_immediately() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destroy_immediately_;
}
inline void CMsgParticleSystemManager_DestroyParticleInvolving::_internal_set_destroy_immediately(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destroy_immediately_ = value;
}

// optional uint32 entity_handle = 3 [default = 16777215];
inline bool CMsgParticleSystemManager_DestroyParticleInvolving::has_entity_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_DestroyParticleInvolving::clear_entity_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = 16777215u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgParticleSystemManager_DestroyParticleInvolving::entity_handle() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.DestroyParticleInvolving.entity_handle)
  return _internal_entity_handle();
}
inline void CMsgParticleSystemManager_DestroyParticleInvolving::set_entity_handle(::uint32_t value) {
  _internal_set_entity_handle(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.DestroyParticleInvolving.entity_handle)
}
inline ::uint32_t CMsgParticleSystemManager_DestroyParticleInvolving::_internal_entity_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_handle_;
}
inline void CMsgParticleSystemManager_DestroyParticleInvolving::_internal_set_entity_handle(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = value;
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_ReleaseParticleIndex

// -------------------------------------------------------------------

// CMsgParticleSystemManager_UpdateParticle

// optional int32 control_point = 1;
inline bool CMsgParticleSystemManager_UpdateParticle::has_control_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticle::clear_control_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticle::control_point() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticle.control_point)
  return _internal_control_point();
}
inline void CMsgParticleSystemManager_UpdateParticle::set_control_point(::int32_t value) {
  _internal_set_control_point(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticle.control_point)
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticle::_internal_control_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_point_;
}
inline void CMsgParticleSystemManager_UpdateParticle::_internal_set_control_point(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = value;
}

// optional .CMsgVector position = 2;
inline bool CMsgParticleSystemManager_UpdateParticle::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticle::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticle::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticle.position)
  return _internal_position();
}
inline void CMsgParticleSystemManager_UpdateParticle::unsafe_arena_set_allocated_position(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.UpdateParticle.position)
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticle::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.position_;
  _impl_.position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticle::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.UpdateParticle.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticle::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.position_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.position_;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticle::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.UpdateParticle.position)
  return _msg;
}
inline void CMsgParticleSystemManager_UpdateParticle::set_allocated_position(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.UpdateParticle.position)
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_UpdateParticleFwd

// optional int32 control_point = 1;
inline bool CMsgParticleSystemManager_UpdateParticleFwd::has_control_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleFwd::clear_control_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleFwd::control_point() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleFwd.control_point)
  return _internal_control_point();
}
inline void CMsgParticleSystemManager_UpdateParticleFwd::set_control_point(::int32_t value) {
  _internal_set_control_point(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleFwd.control_point)
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleFwd::_internal_control_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_point_;
}
inline void CMsgParticleSystemManager_UpdateParticleFwd::_internal_set_control_point(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = value;
}

// optional .CMsgVector forward = 2;
inline bool CMsgParticleSystemManager_UpdateParticleFwd::has_forward() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.forward_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleFwd::_internal_forward() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.forward_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleFwd::forward() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleFwd.forward)
  return _internal_forward();
}
inline void CMsgParticleSystemManager_UpdateParticleFwd::unsafe_arena_set_allocated_forward(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.forward_);
  }
  _impl_.forward_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.UpdateParticleFwd.forward)
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleFwd::release_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.forward_;
  _impl_.forward_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleFwd::unsafe_arena_release_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.UpdateParticleFwd.forward)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.forward_;
  _impl_.forward_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleFwd::_internal_mutable_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.forward_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.forward_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.forward_;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleFwd::mutable_forward() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_forward();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.UpdateParticleFwd.forward)
  return _msg;
}
inline void CMsgParticleSystemManager_UpdateParticleFwd::set_allocated_forward(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.forward_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.forward_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.UpdateParticleFwd.forward)
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_UpdateParticleOrient

// optional int32 control_point = 1;
inline bool CMsgParticleSystemManager_UpdateParticleOrient::has_control_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::clear_control_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleOrient::control_point() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleOrient.control_point)
  return _internal_control_point();
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::set_control_point(::int32_t value) {
  _internal_set_control_point(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleOrient.control_point)
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleOrient::_internal_control_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_point_;
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::_internal_set_control_point(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = value;
}

// optional .CMsgVector forward = 2;
inline bool CMsgParticleSystemManager_UpdateParticleOrient::has_forward() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.forward_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleOrient::_internal_forward() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.forward_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleOrient::forward() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleOrient.forward)
  return _internal_forward();
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::unsafe_arena_set_allocated_forward(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.forward_);
  }
  _impl_.forward_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.UpdateParticleOrient.forward)
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::release_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.forward_;
  _impl_.forward_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::unsafe_arena_release_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.UpdateParticleOrient.forward)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.forward_;
  _impl_.forward_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::_internal_mutable_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.forward_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.forward_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.forward_;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::mutable_forward() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_forward();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.UpdateParticleOrient.forward)
  return _msg;
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::set_allocated_forward(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.forward_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.forward_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.UpdateParticleOrient.forward)
}

// optional .CMsgVector left = 3;
inline bool CMsgParticleSystemManager_UpdateParticleOrient::has_left() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.left_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleOrient::_internal_left() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.left_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleOrient::left() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleOrient.left)
  return _internal_left();
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::unsafe_arena_set_allocated_left(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.left_);
  }
  _impl_.left_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.UpdateParticleOrient.left)
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::release_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* released = _impl_.left_;
  _impl_.left_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::unsafe_arena_release_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.UpdateParticleOrient.left)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.left_;
  _impl_.left_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::_internal_mutable_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.left_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.left_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.left_;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::mutable_left() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgVector* _msg = _internal_mutable_left();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.UpdateParticleOrient.left)
  return _msg;
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::set_allocated_left(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.left_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.left_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.UpdateParticleOrient.left)
}

// optional .CMsgVector up = 4;
inline bool CMsgParticleSystemManager_UpdateParticleOrient::has_up() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.up_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleOrient::_internal_up() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.up_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleOrient::up() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleOrient.up)
  return _internal_up();
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::unsafe_arena_set_allocated_up(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.up_);
  }
  _impl_.up_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.UpdateParticleOrient.up)
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::release_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgVector* released = _impl_.up_;
  _impl_.up_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::unsafe_arena_release_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.UpdateParticleOrient.up)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgVector* temp = _impl_.up_;
  _impl_.up_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::_internal_mutable_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.up_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.up_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.up_;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOrient::mutable_up() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgVector* _msg = _internal_mutable_up();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.UpdateParticleOrient.up)
  return _msg;
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::set_allocated_up(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.up_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.up_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.UpdateParticleOrient.up)
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_UpdateParticleFallback

// optional int32 control_point = 1;
inline bool CMsgParticleSystemManager_UpdateParticleFallback::has_control_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleFallback::clear_control_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleFallback::control_point() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleFallback.control_point)
  return _internal_control_point();
}
inline void CMsgParticleSystemManager_UpdateParticleFallback::set_control_point(::int32_t value) {
  _internal_set_control_point(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleFallback.control_point)
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleFallback::_internal_control_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_point_;
}
inline void CMsgParticleSystemManager_UpdateParticleFallback::_internal_set_control_point(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = value;
}

// optional .CMsgVector position = 2;
inline bool CMsgParticleSystemManager_UpdateParticleFallback::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleFallback::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleFallback::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleFallback.position)
  return _internal_position();
}
inline void CMsgParticleSystemManager_UpdateParticleFallback::unsafe_arena_set_allocated_position(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.UpdateParticleFallback.position)
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleFallback::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.position_;
  _impl_.position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleFallback::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.UpdateParticleFallback.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleFallback::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.position_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.position_;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleFallback::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.UpdateParticleFallback.position)
  return _msg;
}
inline void CMsgParticleSystemManager_UpdateParticleFallback::set_allocated_position(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.UpdateParticleFallback.position)
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_UpdateParticleEnt

// optional int32 control_point = 1;
inline bool CMsgParticleSystemManager_UpdateParticleEnt::has_control_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::clear_control_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleEnt::control_point() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleEnt.control_point)
  return _internal_control_point();
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::set_control_point(::int32_t value) {
  _internal_set_control_point(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleEnt.control_point)
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleEnt::_internal_control_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_point_;
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::_internal_set_control_point(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = value;
}

// optional uint32 entity_handle = 2 [default = 16777215];
inline bool CMsgParticleSystemManager_UpdateParticleEnt::has_entity_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::clear_entity_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = 16777215u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgParticleSystemManager_UpdateParticleEnt::entity_handle() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleEnt.entity_handle)
  return _internal_entity_handle();
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::set_entity_handle(::uint32_t value) {
  _internal_set_entity_handle(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleEnt.entity_handle)
}
inline ::uint32_t CMsgParticleSystemManager_UpdateParticleEnt::_internal_entity_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_handle_;
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::_internal_set_entity_handle(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = value;
}

// optional int32 attach_type = 3;
inline bool CMsgParticleSystemManager_UpdateParticleEnt::has_attach_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::clear_attach_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attach_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleEnt::attach_type() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleEnt.attach_type)
  return _internal_attach_type();
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::set_attach_type(::int32_t value) {
  _internal_set_attach_type(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleEnt.attach_type)
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleEnt::_internal_attach_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attach_type_;
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::_internal_set_attach_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attach_type_ = value;
}

// optional int32 attachment = 4;
inline bool CMsgParticleSystemManager_UpdateParticleEnt::has_attachment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::clear_attachment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attachment_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleEnt::attachment() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleEnt.attachment)
  return _internal_attachment();
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::set_attachment(::int32_t value) {
  _internal_set_attachment(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleEnt.attachment)
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleEnt::_internal_attachment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attachment_;
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::_internal_set_attachment(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attachment_ = value;
}

// optional .CMsgVector fallback_position = 5;
inline bool CMsgParticleSystemManager_UpdateParticleEnt::has_fallback_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fallback_position_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleEnt::_internal_fallback_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.fallback_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleEnt::fallback_position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleEnt.fallback_position)
  return _internal_fallback_position();
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::unsafe_arena_set_allocated_fallback_position(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fallback_position_);
  }
  _impl_.fallback_position_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.UpdateParticleEnt.fallback_position)
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleEnt::release_fallback_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.fallback_position_;
  _impl_.fallback_position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleEnt::unsafe_arena_release_fallback_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.UpdateParticleEnt.fallback_position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.fallback_position_;
  _impl_.fallback_position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleEnt::_internal_mutable_fallback_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fallback_position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.fallback_position_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.fallback_position_;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleEnt::mutable_fallback_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_fallback_position();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.UpdateParticleEnt.fallback_position)
  return _msg;
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::set_allocated_fallback_position(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fallback_position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.fallback_position_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.UpdateParticleEnt.fallback_position)
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_UpdateParticleOffset

// optional int32 control_point = 1;
inline bool CMsgParticleSystemManager_UpdateParticleOffset::has_control_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleOffset::clear_control_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleOffset::control_point() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleOffset.control_point)
  return _internal_control_point();
}
inline void CMsgParticleSystemManager_UpdateParticleOffset::set_control_point(::int32_t value) {
  _internal_set_control_point(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleOffset.control_point)
}
inline ::int32_t CMsgParticleSystemManager_UpdateParticleOffset::_internal_control_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.control_point_;
}
inline void CMsgParticleSystemManager_UpdateParticleOffset::_internal_set_control_point(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.control_point_ = value;
}

// optional .CMsgVector origin_offset = 2;
inline bool CMsgParticleSystemManager_UpdateParticleOffset::has_origin_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.origin_offset_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleOffset::_internal_origin_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.origin_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgParticleSystemManager_UpdateParticleOffset::origin_offset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleOffset.origin_offset)
  return _internal_origin_offset();
}
inline void CMsgParticleSystemManager_UpdateParticleOffset::unsafe_arena_set_allocated_origin_offset(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.origin_offset_);
  }
  _impl_.origin_offset_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.UpdateParticleOffset.origin_offset)
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOffset::release_origin_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.origin_offset_;
  _impl_.origin_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOffset::unsafe_arena_release_origin_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.UpdateParticleOffset.origin_offset)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.origin_offset_;
  _impl_.origin_offset_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOffset::_internal_mutable_origin_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_offset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.origin_offset_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.origin_offset_;
}
inline ::CMsgVector* CMsgParticleSystemManager_UpdateParticleOffset::mutable_origin_offset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_origin_offset();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.UpdateParticleOffset.origin_offset)
  return _msg;
}
inline void CMsgParticleSystemManager_UpdateParticleOffset::set_allocated_origin_offset(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.origin_offset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.origin_offset_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.UpdateParticleOffset.origin_offset)
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_UpdateParticleFrozen

// optional bool set_frozen = 1;
inline bool CMsgParticleSystemManager_UpdateParticleFrozen::has_set_frozen() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleFrozen::clear_set_frozen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_frozen_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgParticleSystemManager_UpdateParticleFrozen::set_frozen() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleFrozen.set_frozen)
  return _internal_set_frozen();
}
inline void CMsgParticleSystemManager_UpdateParticleFrozen::set_set_frozen(bool value) {
  _internal_set_set_frozen(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleFrozen.set_frozen)
}
inline bool CMsgParticleSystemManager_UpdateParticleFrozen::_internal_set_frozen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.set_frozen_;
}
inline void CMsgParticleSystemManager_UpdateParticleFrozen::_internal_set_set_frozen(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_frozen_ = value;
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager_UpdateParticleShouldDraw

// optional bool should_draw = 1;
inline bool CMsgParticleSystemManager_UpdateParticleShouldDraw::has_should_draw() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgParticleSystemManager_UpdateParticleShouldDraw::clear_should_draw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.should_draw_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgParticleSystemManager_UpdateParticleShouldDraw::should_draw() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.UpdateParticleShouldDraw.should_draw)
  return _internal_should_draw();
}
inline void CMsgParticleSystemManager_UpdateParticleShouldDraw::set_should_draw(bool value) {
  _internal_set_should_draw(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.UpdateParticleShouldDraw.should_draw)
}
inline bool CMsgParticleSystemManager_UpdateParticleShouldDraw::_internal_should_draw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.should_draw_;
}
inline void CMsgParticleSystemManager_UpdateParticleShouldDraw::_internal_set_should_draw(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.should_draw_ = value;
}

// -------------------------------------------------------------------

// CMsgParticleSystemManager

// required .PARTICLE_SYSTEM_MANAGER_MESSAGE type = 1 [default = PARTICLE_SYSTEM_MANAGER_EVENT_CREATE];
inline bool CMsgParticleSystemManager::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CMsgParticleSystemManager::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::PARTICLE_SYSTEM_MANAGER_MESSAGE CMsgParticleSystemManager::type() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.type)
  return _internal_type();
}
inline void CMsgParticleSystemManager::set_type(::PARTICLE_SYSTEM_MANAGER_MESSAGE value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.type)
}
inline ::PARTICLE_SYSTEM_MANAGER_MESSAGE CMsgParticleSystemManager::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::PARTICLE_SYSTEM_MANAGER_MESSAGE>(_impl_.type_);
}
inline void CMsgParticleSystemManager::_internal_set_type(::PARTICLE_SYSTEM_MANAGER_MESSAGE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::PARTICLE_SYSTEM_MANAGER_MESSAGE_IsValid(value));
  _impl_.type_ = value;
}

// required uint32 index = 2;
inline bool CMsgParticleSystemManager::has_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void CMsgParticleSystemManager::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t CMsgParticleSystemManager::index() const {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.index)
  return _internal_index();
}
inline void CMsgParticleSystemManager::set_index(::uint32_t value) {
  _internal_set_index(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CMsgParticleSystemManager.index)
}
inline ::uint32_t CMsgParticleSystemManager::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void CMsgParticleSystemManager::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// optional .CMsgParticleSystemManager.CreateParticle create_particle = 3;
inline bool CMsgParticleSystemManager::has_create_particle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.create_particle_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_create_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.create_particle_ != nullptr) _impl_.create_particle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgParticleSystemManager_CreateParticle& CMsgParticleSystemManager::_internal_create_particle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_CreateParticle* p = _impl_.create_particle_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_CreateParticle&>(::_CMsgParticleSystemManager_CreateParticle_default_instance_);
}
inline const ::CMsgParticleSystemManager_CreateParticle& CMsgParticleSystemManager::create_particle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.create_particle)
  return _internal_create_particle();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_create_particle(::CMsgParticleSystemManager_CreateParticle* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.create_particle_);
  }
  _impl_.create_particle_ = reinterpret_cast<::CMsgParticleSystemManager_CreateParticle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.create_particle)
}
inline ::CMsgParticleSystemManager_CreateParticle* CMsgParticleSystemManager::release_create_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgParticleSystemManager_CreateParticle* released = _impl_.create_particle_;
  _impl_.create_particle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_CreateParticle* CMsgParticleSystemManager::unsafe_arena_release_create_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.create_particle)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgParticleSystemManager_CreateParticle* temp = _impl_.create_particle_;
  _impl_.create_particle_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_CreateParticle* CMsgParticleSystemManager::_internal_mutable_create_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.create_particle_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_CreateParticle>(GetArena());
    _impl_.create_particle_ = reinterpret_cast<::CMsgParticleSystemManager_CreateParticle*>(p);
  }
  return _impl_.create_particle_;
}
inline ::CMsgParticleSystemManager_CreateParticle* CMsgParticleSystemManager::mutable_create_particle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgParticleSystemManager_CreateParticle* _msg = _internal_mutable_create_particle();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.create_particle)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_create_particle(::CMsgParticleSystemManager_CreateParticle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.create_particle_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.create_particle_ = reinterpret_cast<::CMsgParticleSystemManager_CreateParticle*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.create_particle)
}

// optional .CMsgParticleSystemManager.DestroyParticle destroy_particle = 4;
inline bool CMsgParticleSystemManager::has_destroy_particle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.destroy_particle_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_destroy_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.destroy_particle_ != nullptr) _impl_.destroy_particle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgParticleSystemManager_DestroyParticle& CMsgParticleSystemManager::_internal_destroy_particle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_DestroyParticle* p = _impl_.destroy_particle_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_DestroyParticle&>(::_CMsgParticleSystemManager_DestroyParticle_default_instance_);
}
inline const ::CMsgParticleSystemManager_DestroyParticle& CMsgParticleSystemManager::destroy_particle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.destroy_particle)
  return _internal_destroy_particle();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_destroy_particle(::CMsgParticleSystemManager_DestroyParticle* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.destroy_particle_);
  }
  _impl_.destroy_particle_ = reinterpret_cast<::CMsgParticleSystemManager_DestroyParticle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.destroy_particle)
}
inline ::CMsgParticleSystemManager_DestroyParticle* CMsgParticleSystemManager::release_destroy_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgParticleSystemManager_DestroyParticle* released = _impl_.destroy_particle_;
  _impl_.destroy_particle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_DestroyParticle* CMsgParticleSystemManager::unsafe_arena_release_destroy_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.destroy_particle)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgParticleSystemManager_DestroyParticle* temp = _impl_.destroy_particle_;
  _impl_.destroy_particle_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_DestroyParticle* CMsgParticleSystemManager::_internal_mutable_destroy_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.destroy_particle_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_DestroyParticle>(GetArena());
    _impl_.destroy_particle_ = reinterpret_cast<::CMsgParticleSystemManager_DestroyParticle*>(p);
  }
  return _impl_.destroy_particle_;
}
inline ::CMsgParticleSystemManager_DestroyParticle* CMsgParticleSystemManager::mutable_destroy_particle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgParticleSystemManager_DestroyParticle* _msg = _internal_mutable_destroy_particle();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.destroy_particle)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_destroy_particle(::CMsgParticleSystemManager_DestroyParticle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.destroy_particle_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.destroy_particle_ = reinterpret_cast<::CMsgParticleSystemManager_DestroyParticle*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.destroy_particle)
}

// optional .CMsgParticleSystemManager.DestroyParticleInvolving destroy_particle_involving = 5;
inline bool CMsgParticleSystemManager::has_destroy_particle_involving() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.destroy_particle_involving_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_destroy_particle_involving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.destroy_particle_involving_ != nullptr) _impl_.destroy_particle_involving_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgParticleSystemManager_DestroyParticleInvolving& CMsgParticleSystemManager::_internal_destroy_particle_involving() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_DestroyParticleInvolving* p = _impl_.destroy_particle_involving_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_DestroyParticleInvolving&>(::_CMsgParticleSystemManager_DestroyParticleInvolving_default_instance_);
}
inline const ::CMsgParticleSystemManager_DestroyParticleInvolving& CMsgParticleSystemManager::destroy_particle_involving() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.destroy_particle_involving)
  return _internal_destroy_particle_involving();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_destroy_particle_involving(::CMsgParticleSystemManager_DestroyParticleInvolving* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.destroy_particle_involving_);
  }
  _impl_.destroy_particle_involving_ = reinterpret_cast<::CMsgParticleSystemManager_DestroyParticleInvolving*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.destroy_particle_involving)
}
inline ::CMsgParticleSystemManager_DestroyParticleInvolving* CMsgParticleSystemManager::release_destroy_particle_involving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgParticleSystemManager_DestroyParticleInvolving* released = _impl_.destroy_particle_involving_;
  _impl_.destroy_particle_involving_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_DestroyParticleInvolving* CMsgParticleSystemManager::unsafe_arena_release_destroy_particle_involving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.destroy_particle_involving)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgParticleSystemManager_DestroyParticleInvolving* temp = _impl_.destroy_particle_involving_;
  _impl_.destroy_particle_involving_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_DestroyParticleInvolving* CMsgParticleSystemManager::_internal_mutable_destroy_particle_involving() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.destroy_particle_involving_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_DestroyParticleInvolving>(GetArena());
    _impl_.destroy_particle_involving_ = reinterpret_cast<::CMsgParticleSystemManager_DestroyParticleInvolving*>(p);
  }
  return _impl_.destroy_particle_involving_;
}
inline ::CMsgParticleSystemManager_DestroyParticleInvolving* CMsgParticleSystemManager::mutable_destroy_particle_involving() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgParticleSystemManager_DestroyParticleInvolving* _msg = _internal_mutable_destroy_particle_involving();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.destroy_particle_involving)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_destroy_particle_involving(::CMsgParticleSystemManager_DestroyParticleInvolving* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.destroy_particle_involving_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.destroy_particle_involving_ = reinterpret_cast<::CMsgParticleSystemManager_DestroyParticleInvolving*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.destroy_particle_involving)
}

// optional .CMsgParticleSystemManager.ReleaseParticleIndex release_particle_index = 6;
inline bool CMsgParticleSystemManager::has_release_particle_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.release_particle_index_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_release_particle_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.release_particle_index_ != nullptr) _impl_.release_particle_index_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::CMsgParticleSystemManager_ReleaseParticleIndex& CMsgParticleSystemManager::_internal_release_particle_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_ReleaseParticleIndex* p = _impl_.release_particle_index_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_ReleaseParticleIndex&>(::_CMsgParticleSystemManager_ReleaseParticleIndex_default_instance_);
}
inline const ::CMsgParticleSystemManager_ReleaseParticleIndex& CMsgParticleSystemManager::release_particle_index() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.release_particle_index)
  return _internal_release_particle_index();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_release_particle_index(::CMsgParticleSystemManager_ReleaseParticleIndex* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.release_particle_index_);
  }
  _impl_.release_particle_index_ = reinterpret_cast<::CMsgParticleSystemManager_ReleaseParticleIndex*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.release_particle_index)
}
inline ::CMsgParticleSystemManager_ReleaseParticleIndex* CMsgParticleSystemManager::release_release_particle_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgParticleSystemManager_ReleaseParticleIndex* released = _impl_.release_particle_index_;
  _impl_.release_particle_index_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_ReleaseParticleIndex* CMsgParticleSystemManager::unsafe_arena_release_release_particle_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.release_particle_index)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::CMsgParticleSystemManager_ReleaseParticleIndex* temp = _impl_.release_particle_index_;
  _impl_.release_particle_index_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_ReleaseParticleIndex* CMsgParticleSystemManager::_internal_mutable_release_particle_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.release_particle_index_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_ReleaseParticleIndex>(GetArena());
    _impl_.release_particle_index_ = reinterpret_cast<::CMsgParticleSystemManager_ReleaseParticleIndex*>(p);
  }
  return _impl_.release_particle_index_;
}
inline ::CMsgParticleSystemManager_ReleaseParticleIndex* CMsgParticleSystemManager::mutable_release_particle_index() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::CMsgParticleSystemManager_ReleaseParticleIndex* _msg = _internal_mutable_release_particle_index();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.release_particle_index)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_release_particle_index(::CMsgParticleSystemManager_ReleaseParticleIndex* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.release_particle_index_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.release_particle_index_ = reinterpret_cast<::CMsgParticleSystemManager_ReleaseParticleIndex*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.release_particle_index)
}

// optional .CMsgParticleSystemManager.UpdateParticle update_particle = 7;
inline bool CMsgParticleSystemManager::has_update_particle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_particle_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_update_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_ != nullptr) _impl_.update_particle_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::CMsgParticleSystemManager_UpdateParticle& CMsgParticleSystemManager::_internal_update_particle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_UpdateParticle* p = _impl_.update_particle_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_UpdateParticle&>(::_CMsgParticleSystemManager_UpdateParticle_default_instance_);
}
inline const ::CMsgParticleSystemManager_UpdateParticle& CMsgParticleSystemManager::update_particle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.update_particle)
  return _internal_update_particle();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_update_particle(::CMsgParticleSystemManager_UpdateParticle* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_particle_);
  }
  _impl_.update_particle_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.update_particle)
}
inline ::CMsgParticleSystemManager_UpdateParticle* CMsgParticleSystemManager::release_update_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgParticleSystemManager_UpdateParticle* released = _impl_.update_particle_;
  _impl_.update_particle_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_UpdateParticle* CMsgParticleSystemManager::unsafe_arena_release_update_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.update_particle)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::CMsgParticleSystemManager_UpdateParticle* temp = _impl_.update_particle_;
  _impl_.update_particle_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_UpdateParticle* CMsgParticleSystemManager::_internal_mutable_update_particle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_UpdateParticle>(GetArena());
    _impl_.update_particle_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticle*>(p);
  }
  return _impl_.update_particle_;
}
inline ::CMsgParticleSystemManager_UpdateParticle* CMsgParticleSystemManager::mutable_update_particle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::CMsgParticleSystemManager_UpdateParticle* _msg = _internal_mutable_update_particle();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.update_particle)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_update_particle(::CMsgParticleSystemManager_UpdateParticle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_particle_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.update_particle_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticle*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.update_particle)
}

// optional .CMsgParticleSystemManager.UpdateParticleFwd update_particle_fwd = 8;
inline bool CMsgParticleSystemManager::has_update_particle_fwd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_particle_fwd_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_update_particle_fwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_fwd_ != nullptr) _impl_.update_particle_fwd_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::CMsgParticleSystemManager_UpdateParticleFwd& CMsgParticleSystemManager::_internal_update_particle_fwd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_UpdateParticleFwd* p = _impl_.update_particle_fwd_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_UpdateParticleFwd&>(::_CMsgParticleSystemManager_UpdateParticleFwd_default_instance_);
}
inline const ::CMsgParticleSystemManager_UpdateParticleFwd& CMsgParticleSystemManager::update_particle_fwd() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.update_particle_fwd)
  return _internal_update_particle_fwd();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_update_particle_fwd(::CMsgParticleSystemManager_UpdateParticleFwd* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_particle_fwd_);
  }
  _impl_.update_particle_fwd_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleFwd*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.update_particle_fwd)
}
inline ::CMsgParticleSystemManager_UpdateParticleFwd* CMsgParticleSystemManager::release_update_particle_fwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::CMsgParticleSystemManager_UpdateParticleFwd* released = _impl_.update_particle_fwd_;
  _impl_.update_particle_fwd_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_UpdateParticleFwd* CMsgParticleSystemManager::unsafe_arena_release_update_particle_fwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.update_particle_fwd)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::CMsgParticleSystemManager_UpdateParticleFwd* temp = _impl_.update_particle_fwd_;
  _impl_.update_particle_fwd_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_UpdateParticleFwd* CMsgParticleSystemManager::_internal_mutable_update_particle_fwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_fwd_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_UpdateParticleFwd>(GetArena());
    _impl_.update_particle_fwd_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleFwd*>(p);
  }
  return _impl_.update_particle_fwd_;
}
inline ::CMsgParticleSystemManager_UpdateParticleFwd* CMsgParticleSystemManager::mutable_update_particle_fwd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::CMsgParticleSystemManager_UpdateParticleFwd* _msg = _internal_mutable_update_particle_fwd();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.update_particle_fwd)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_update_particle_fwd(::CMsgParticleSystemManager_UpdateParticleFwd* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_particle_fwd_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.update_particle_fwd_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleFwd*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.update_particle_fwd)
}

// optional .CMsgParticleSystemManager.UpdateParticleOrient update_particle_orient = 9;
inline bool CMsgParticleSystemManager::has_update_particle_orient() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_particle_orient_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_update_particle_orient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_orient_ != nullptr) _impl_.update_particle_orient_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::CMsgParticleSystemManager_UpdateParticleOrient& CMsgParticleSystemManager::_internal_update_particle_orient() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_UpdateParticleOrient* p = _impl_.update_particle_orient_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_UpdateParticleOrient&>(::_CMsgParticleSystemManager_UpdateParticleOrient_default_instance_);
}
inline const ::CMsgParticleSystemManager_UpdateParticleOrient& CMsgParticleSystemManager::update_particle_orient() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.update_particle_orient)
  return _internal_update_particle_orient();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_update_particle_orient(::CMsgParticleSystemManager_UpdateParticleOrient* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_particle_orient_);
  }
  _impl_.update_particle_orient_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleOrient*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.update_particle_orient)
}
inline ::CMsgParticleSystemManager_UpdateParticleOrient* CMsgParticleSystemManager::release_update_particle_orient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::CMsgParticleSystemManager_UpdateParticleOrient* released = _impl_.update_particle_orient_;
  _impl_.update_particle_orient_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_UpdateParticleOrient* CMsgParticleSystemManager::unsafe_arena_release_update_particle_orient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.update_particle_orient)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::CMsgParticleSystemManager_UpdateParticleOrient* temp = _impl_.update_particle_orient_;
  _impl_.update_particle_orient_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_UpdateParticleOrient* CMsgParticleSystemManager::_internal_mutable_update_particle_orient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_orient_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_UpdateParticleOrient>(GetArena());
    _impl_.update_particle_orient_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleOrient*>(p);
  }
  return _impl_.update_particle_orient_;
}
inline ::CMsgParticleSystemManager_UpdateParticleOrient* CMsgParticleSystemManager::mutable_update_particle_orient() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::CMsgParticleSystemManager_UpdateParticleOrient* _msg = _internal_mutable_update_particle_orient();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.update_particle_orient)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_update_particle_orient(::CMsgParticleSystemManager_UpdateParticleOrient* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_particle_orient_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.update_particle_orient_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleOrient*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.update_particle_orient)
}

// optional .CMsgParticleSystemManager.UpdateParticleFallback update_particle_fallback = 10;
inline bool CMsgParticleSystemManager::has_update_particle_fallback() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_particle_fallback_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_update_particle_fallback() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_fallback_ != nullptr) _impl_.update_particle_fallback_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const ::CMsgParticleSystemManager_UpdateParticleFallback& CMsgParticleSystemManager::_internal_update_particle_fallback() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_UpdateParticleFallback* p = _impl_.update_particle_fallback_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_UpdateParticleFallback&>(::_CMsgParticleSystemManager_UpdateParticleFallback_default_instance_);
}
inline const ::CMsgParticleSystemManager_UpdateParticleFallback& CMsgParticleSystemManager::update_particle_fallback() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.update_particle_fallback)
  return _internal_update_particle_fallback();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_update_particle_fallback(::CMsgParticleSystemManager_UpdateParticleFallback* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_particle_fallback_);
  }
  _impl_.update_particle_fallback_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleFallback*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.update_particle_fallback)
}
inline ::CMsgParticleSystemManager_UpdateParticleFallback* CMsgParticleSystemManager::release_update_particle_fallback() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::CMsgParticleSystemManager_UpdateParticleFallback* released = _impl_.update_particle_fallback_;
  _impl_.update_particle_fallback_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_UpdateParticleFallback* CMsgParticleSystemManager::unsafe_arena_release_update_particle_fallback() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.update_particle_fallback)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::CMsgParticleSystemManager_UpdateParticleFallback* temp = _impl_.update_particle_fallback_;
  _impl_.update_particle_fallback_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_UpdateParticleFallback* CMsgParticleSystemManager::_internal_mutable_update_particle_fallback() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_fallback_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_UpdateParticleFallback>(GetArena());
    _impl_.update_particle_fallback_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleFallback*>(p);
  }
  return _impl_.update_particle_fallback_;
}
inline ::CMsgParticleSystemManager_UpdateParticleFallback* CMsgParticleSystemManager::mutable_update_particle_fallback() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::CMsgParticleSystemManager_UpdateParticleFallback* _msg = _internal_mutable_update_particle_fallback();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.update_particle_fallback)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_update_particle_fallback(::CMsgParticleSystemManager_UpdateParticleFallback* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_particle_fallback_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.update_particle_fallback_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleFallback*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.update_particle_fallback)
}

// optional .CMsgParticleSystemManager.UpdateParticleOffset update_particle_offset = 11;
inline bool CMsgParticleSystemManager::has_update_particle_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_particle_offset_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_update_particle_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_offset_ != nullptr) _impl_.update_particle_offset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::CMsgParticleSystemManager_UpdateParticleOffset& CMsgParticleSystemManager::_internal_update_particle_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_UpdateParticleOffset* p = _impl_.update_particle_offset_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_UpdateParticleOffset&>(::_CMsgParticleSystemManager_UpdateParticleOffset_default_instance_);
}
inline const ::CMsgParticleSystemManager_UpdateParticleOffset& CMsgParticleSystemManager::update_particle_offset() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.update_particle_offset)
  return _internal_update_particle_offset();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_update_particle_offset(::CMsgParticleSystemManager_UpdateParticleOffset* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_particle_offset_);
  }
  _impl_.update_particle_offset_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleOffset*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.update_particle_offset)
}
inline ::CMsgParticleSystemManager_UpdateParticleOffset* CMsgParticleSystemManager::release_update_particle_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::CMsgParticleSystemManager_UpdateParticleOffset* released = _impl_.update_particle_offset_;
  _impl_.update_particle_offset_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_UpdateParticleOffset* CMsgParticleSystemManager::unsafe_arena_release_update_particle_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.update_particle_offset)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::CMsgParticleSystemManager_UpdateParticleOffset* temp = _impl_.update_particle_offset_;
  _impl_.update_particle_offset_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_UpdateParticleOffset* CMsgParticleSystemManager::_internal_mutable_update_particle_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_offset_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_UpdateParticleOffset>(GetArena());
    _impl_.update_particle_offset_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleOffset*>(p);
  }
  return _impl_.update_particle_offset_;
}
inline ::CMsgParticleSystemManager_UpdateParticleOffset* CMsgParticleSystemManager::mutable_update_particle_offset() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::CMsgParticleSystemManager_UpdateParticleOffset* _msg = _internal_mutable_update_particle_offset();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.update_particle_offset)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_update_particle_offset(::CMsgParticleSystemManager_UpdateParticleOffset* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_particle_offset_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.update_particle_offset_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleOffset*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.update_particle_offset)
}

// optional .CMsgParticleSystemManager.UpdateParticleEnt update_particle_ent = 12;
inline bool CMsgParticleSystemManager::has_update_particle_ent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_particle_ent_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_update_particle_ent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_ent_ != nullptr) _impl_.update_particle_ent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline const ::CMsgParticleSystemManager_UpdateParticleEnt& CMsgParticleSystemManager::_internal_update_particle_ent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_UpdateParticleEnt* p = _impl_.update_particle_ent_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_UpdateParticleEnt&>(::_CMsgParticleSystemManager_UpdateParticleEnt_default_instance_);
}
inline const ::CMsgParticleSystemManager_UpdateParticleEnt& CMsgParticleSystemManager::update_particle_ent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.update_particle_ent)
  return _internal_update_particle_ent();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_update_particle_ent(::CMsgParticleSystemManager_UpdateParticleEnt* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_particle_ent_);
  }
  _impl_.update_particle_ent_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleEnt*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.update_particle_ent)
}
inline ::CMsgParticleSystemManager_UpdateParticleEnt* CMsgParticleSystemManager::release_update_particle_ent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::CMsgParticleSystemManager_UpdateParticleEnt* released = _impl_.update_particle_ent_;
  _impl_.update_particle_ent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_UpdateParticleEnt* CMsgParticleSystemManager::unsafe_arena_release_update_particle_ent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.update_particle_ent)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::CMsgParticleSystemManager_UpdateParticleEnt* temp = _impl_.update_particle_ent_;
  _impl_.update_particle_ent_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_UpdateParticleEnt* CMsgParticleSystemManager::_internal_mutable_update_particle_ent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_ent_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_UpdateParticleEnt>(GetArena());
    _impl_.update_particle_ent_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleEnt*>(p);
  }
  return _impl_.update_particle_ent_;
}
inline ::CMsgParticleSystemManager_UpdateParticleEnt* CMsgParticleSystemManager::mutable_update_particle_ent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::CMsgParticleSystemManager_UpdateParticleEnt* _msg = _internal_mutable_update_particle_ent();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.update_particle_ent)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_update_particle_ent(::CMsgParticleSystemManager_UpdateParticleEnt* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_particle_ent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.update_particle_ent_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleEnt*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.update_particle_ent)
}

// optional .CMsgParticleSystemManager.UpdateParticleFrozen update_particle_frozen = 13;
inline bool CMsgParticleSystemManager::has_update_particle_frozen() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_particle_frozen_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_update_particle_frozen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_frozen_ != nullptr) _impl_.update_particle_frozen_->Clear();
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline const ::CMsgParticleSystemManager_UpdateParticleFrozen& CMsgParticleSystemManager::_internal_update_particle_frozen() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_UpdateParticleFrozen* p = _impl_.update_particle_frozen_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_UpdateParticleFrozen&>(::_CMsgParticleSystemManager_UpdateParticleFrozen_default_instance_);
}
inline const ::CMsgParticleSystemManager_UpdateParticleFrozen& CMsgParticleSystemManager::update_particle_frozen() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.update_particle_frozen)
  return _internal_update_particle_frozen();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_update_particle_frozen(::CMsgParticleSystemManager_UpdateParticleFrozen* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_particle_frozen_);
  }
  _impl_.update_particle_frozen_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleFrozen*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.update_particle_frozen)
}
inline ::CMsgParticleSystemManager_UpdateParticleFrozen* CMsgParticleSystemManager::release_update_particle_frozen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::CMsgParticleSystemManager_UpdateParticleFrozen* released = _impl_.update_particle_frozen_;
  _impl_.update_particle_frozen_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_UpdateParticleFrozen* CMsgParticleSystemManager::unsafe_arena_release_update_particle_frozen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.update_particle_frozen)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::CMsgParticleSystemManager_UpdateParticleFrozen* temp = _impl_.update_particle_frozen_;
  _impl_.update_particle_frozen_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_UpdateParticleFrozen* CMsgParticleSystemManager::_internal_mutable_update_particle_frozen() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_frozen_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_UpdateParticleFrozen>(GetArena());
    _impl_.update_particle_frozen_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleFrozen*>(p);
  }
  return _impl_.update_particle_frozen_;
}
inline ::CMsgParticleSystemManager_UpdateParticleFrozen* CMsgParticleSystemManager::mutable_update_particle_frozen() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::CMsgParticleSystemManager_UpdateParticleFrozen* _msg = _internal_mutable_update_particle_frozen();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.update_particle_frozen)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_update_particle_frozen(::CMsgParticleSystemManager_UpdateParticleFrozen* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_particle_frozen_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.update_particle_frozen_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleFrozen*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.update_particle_frozen)
}

// optional .CMsgParticleSystemManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
inline bool CMsgParticleSystemManager::has_update_particle_should_draw() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_particle_should_draw_ != nullptr);
  return value;
}
inline void CMsgParticleSystemManager::clear_update_particle_should_draw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_should_draw_ != nullptr) _impl_.update_particle_should_draw_->Clear();
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline const ::CMsgParticleSystemManager_UpdateParticleShouldDraw& CMsgParticleSystemManager::_internal_update_particle_should_draw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgParticleSystemManager_UpdateParticleShouldDraw* p = _impl_.update_particle_should_draw_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgParticleSystemManager_UpdateParticleShouldDraw&>(::_CMsgParticleSystemManager_UpdateParticleShouldDraw_default_instance_);
}
inline const ::CMsgParticleSystemManager_UpdateParticleShouldDraw& CMsgParticleSystemManager::update_particle_should_draw() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgParticleSystemManager.update_particle_should_draw)
  return _internal_update_particle_should_draw();
}
inline void CMsgParticleSystemManager::unsafe_arena_set_allocated_update_particle_should_draw(::CMsgParticleSystemManager_UpdateParticleShouldDraw* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_particle_should_draw_);
  }
  _impl_.update_particle_should_draw_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleShouldDraw*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgParticleSystemManager.update_particle_should_draw)
}
inline ::CMsgParticleSystemManager_UpdateParticleShouldDraw* CMsgParticleSystemManager::release_update_particle_should_draw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::CMsgParticleSystemManager_UpdateParticleShouldDraw* released = _impl_.update_particle_should_draw_;
  _impl_.update_particle_should_draw_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgParticleSystemManager_UpdateParticleShouldDraw* CMsgParticleSystemManager::unsafe_arena_release_update_particle_should_draw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgParticleSystemManager.update_particle_should_draw)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::CMsgParticleSystemManager_UpdateParticleShouldDraw* temp = _impl_.update_particle_should_draw_;
  _impl_.update_particle_should_draw_ = nullptr;
  return temp;
}
inline ::CMsgParticleSystemManager_UpdateParticleShouldDraw* CMsgParticleSystemManager::_internal_mutable_update_particle_should_draw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_particle_should_draw_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgParticleSystemManager_UpdateParticleShouldDraw>(GetArena());
    _impl_.update_particle_should_draw_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleShouldDraw*>(p);
  }
  return _impl_.update_particle_should_draw_;
}
inline ::CMsgParticleSystemManager_UpdateParticleShouldDraw* CMsgParticleSystemManager::mutable_update_particle_should_draw() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::CMsgParticleSystemManager_UpdateParticleShouldDraw* _msg = _internal_mutable_update_particle_should_draw();
  // @@protoc_insertion_point(field_mutable:CMsgParticleSystemManager.update_particle_should_draw)
  return _msg;
}
inline void CMsgParticleSystemManager::set_allocated_update_particle_should_draw(::CMsgParticleSystemManager_UpdateParticleShouldDraw* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_particle_should_draw_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.update_particle_should_draw_ = reinterpret_cast<::CMsgParticleSystemManager_UpdateParticleShouldDraw*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgParticleSystemManager.update_particle_should_draw)
}

// -------------------------------------------------------------------

// CMsgScreenTextPretty

// optional float x_pos = 1;
inline bool CMsgScreenTextPretty::has_x_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_x_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_pos_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgScreenTextPretty::x_pos() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.x_pos)
  return _internal_x_pos();
}
inline void CMsgScreenTextPretty::set_x_pos(float value) {
  _internal_set_x_pos(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.x_pos)
}
inline float CMsgScreenTextPretty::_internal_x_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_pos_;
}
inline void CMsgScreenTextPretty::_internal_set_x_pos(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_pos_ = value;
}

// optional float y_pos = 2;
inline bool CMsgScreenTextPretty::has_y_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_y_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_pos_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CMsgScreenTextPretty::y_pos() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.y_pos)
  return _internal_y_pos();
}
inline void CMsgScreenTextPretty::set_y_pos(float value) {
  _internal_set_y_pos(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.y_pos)
}
inline float CMsgScreenTextPretty::_internal_y_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_pos_;
}
inline void CMsgScreenTextPretty::_internal_set_y_pos(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_pos_ = value;
}

// optional int32 line = 3;
inline bool CMsgScreenTextPretty::has_line() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.line_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t CMsgScreenTextPretty::line() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.line)
  return _internal_line();
}
inline void CMsgScreenTextPretty::set_line(::int32_t value) {
  _internal_set_line(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.line)
}
inline ::int32_t CMsgScreenTextPretty::_internal_line() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.line_;
}
inline void CMsgScreenTextPretty::_internal_set_line(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.line_ = value;
}

// optional string text = 4;
inline bool CMsgScreenTextPretty::has_text() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.text_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgScreenTextPretty::text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgScreenTextPretty::set_text(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.text)
}
inline std::string* CMsgScreenTextPretty::mutable_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:CMsgScreenTextPretty.text)
  return _s;
}
inline const std::string& CMsgScreenTextPretty::_internal_text() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.text_.Get();
}
inline void CMsgScreenTextPretty::_internal_set_text(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.text_.Set(value, GetArena());
}
inline std::string* CMsgScreenTextPretty::_internal_mutable_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.text_.Mutable( GetArena());
}
inline std::string* CMsgScreenTextPretty::release_text() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgScreenTextPretty.text)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.text_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.text_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgScreenTextPretty::set_allocated_text(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.text_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.text_.IsDefault()) {
          _impl_.text_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgScreenTextPretty.text)
}

// optional int32 r = 5;
inline bool CMsgScreenTextPretty::has_r() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_r() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t CMsgScreenTextPretty::r() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.r)
  return _internal_r();
}
inline void CMsgScreenTextPretty::set_r(::int32_t value) {
  _internal_set_r(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.r)
}
inline ::int32_t CMsgScreenTextPretty::_internal_r() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_;
}
inline void CMsgScreenTextPretty::_internal_set_r(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_ = value;
}

// optional int32 g = 6;
inline bool CMsgScreenTextPretty::has_g() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_g() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.g_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t CMsgScreenTextPretty::g() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.g)
  return _internal_g();
}
inline void CMsgScreenTextPretty::set_g(::int32_t value) {
  _internal_set_g(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.g)
}
inline ::int32_t CMsgScreenTextPretty::_internal_g() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.g_;
}
inline void CMsgScreenTextPretty::_internal_set_g(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.g_ = value;
}

// optional int32 b = 7;
inline bool CMsgScreenTextPretty::has_b() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_b() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t CMsgScreenTextPretty::b() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.b)
  return _internal_b();
}
inline void CMsgScreenTextPretty::set_b(::int32_t value) {
  _internal_set_b(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.b)
}
inline ::int32_t CMsgScreenTextPretty::_internal_b() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.b_;
}
inline void CMsgScreenTextPretty::_internal_set_b(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.b_ = value;
}

// optional int32 a = 8;
inline bool CMsgScreenTextPretty::has_a() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_a() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t CMsgScreenTextPretty::a() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.a)
  return _internal_a();
}
inline void CMsgScreenTextPretty::set_a(::int32_t value) {
  _internal_set_a(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.a)
}
inline ::int32_t CMsgScreenTextPretty::_internal_a() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.a_;
}
inline void CMsgScreenTextPretty::_internal_set_a(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.a_ = value;
}

// optional float duration = 9;
inline bool CMsgScreenTextPretty::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline float CMsgScreenTextPretty::duration() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.duration)
  return _internal_duration();
}
inline void CMsgScreenTextPretty::set_duration(float value) {
  _internal_set_duration(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.duration)
}
inline float CMsgScreenTextPretty::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_;
}
inline void CMsgScreenTextPretty::_internal_set_duration(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = value;
}

// optional string font_name = 10;
inline bool CMsgScreenTextPretty::has_font_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_font_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.font_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgScreenTextPretty::font_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.font_name)
  return _internal_font_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgScreenTextPretty::set_font_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.font_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.font_name)
}
inline std::string* CMsgScreenTextPretty::mutable_font_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_font_name();
  // @@protoc_insertion_point(field_mutable:CMsgScreenTextPretty.font_name)
  return _s;
}
inline const std::string& CMsgScreenTextPretty::_internal_font_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.font_name_.Get();
}
inline void CMsgScreenTextPretty::_internal_set_font_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.font_name_.Set(value, GetArena());
}
inline std::string* CMsgScreenTextPretty::_internal_mutable_font_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.font_name_.Mutable( GetArena());
}
inline std::string* CMsgScreenTextPretty::release_font_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgScreenTextPretty.font_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.font_name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.font_name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgScreenTextPretty::set_allocated_font_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.font_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.font_name_.IsDefault()) {
          _impl_.font_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgScreenTextPretty.font_name)
}

// optional int32 font_size = 11;
inline bool CMsgScreenTextPretty::has_font_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_font_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.font_size_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int32_t CMsgScreenTextPretty::font_size() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.font_size)
  return _internal_font_size();
}
inline void CMsgScreenTextPretty::set_font_size(::int32_t value) {
  _internal_set_font_size(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.font_size)
}
inline ::int32_t CMsgScreenTextPretty::_internal_font_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.font_size_;
}
inline void CMsgScreenTextPretty::_internal_set_font_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.font_size_ = value;
}

// optional bool bold_font = 12;
inline bool CMsgScreenTextPretty::has_bold_font() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CMsgScreenTextPretty::clear_bold_font() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bold_font_ = false;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgScreenTextPretty::bold_font() const {
  // @@protoc_insertion_point(field_get:CMsgScreenTextPretty.bold_font)
  return _internal_bold_font();
}
inline void CMsgScreenTextPretty::set_bold_font(bool value) {
  _internal_set_bold_font(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CMsgScreenTextPretty.bold_font)
}
inline bool CMsgScreenTextPretty::_internal_bold_font() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bold_font_;
}
inline void CMsgScreenTextPretty::_internal_set_bold_font(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bold_font_ = value;
}

// -------------------------------------------------------------------

// CMsgServerRequestedTracer

// optional .CMsgVector origin = 1;
inline bool CMsgServerRequestedTracer::has_origin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.origin_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgServerRequestedTracer::_internal_origin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgServerRequestedTracer::origin() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgServerRequestedTracer.origin)
  return _internal_origin();
}
inline void CMsgServerRequestedTracer::unsafe_arena_set_allocated_origin(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.origin_);
  }
  _impl_.origin_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgServerRequestedTracer.origin)
}
inline ::CMsgVector* CMsgServerRequestedTracer::release_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.origin_;
  _impl_.origin_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgServerRequestedTracer::unsafe_arena_release_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgServerRequestedTracer.origin)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.origin_;
  _impl_.origin_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgServerRequestedTracer::_internal_mutable_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.origin_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.origin_;
}
inline ::CMsgVector* CMsgServerRequestedTracer::mutable_origin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_origin();
  // @@protoc_insertion_point(field_mutable:CMsgServerRequestedTracer.origin)
  return _msg;
}
inline void CMsgServerRequestedTracer::set_allocated_origin(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.origin_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.origin_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgServerRequestedTracer.origin)
}

// optional .CMsgVector end = 2;
inline bool CMsgServerRequestedTracer::has_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgServerRequestedTracer::_internal_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.end_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgServerRequestedTracer::end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgServerRequestedTracer.end)
  return _internal_end();
}
inline void CMsgServerRequestedTracer::unsafe_arena_set_allocated_end(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }
  _impl_.end_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgServerRequestedTracer.end)
}
inline ::CMsgVector* CMsgServerRequestedTracer::release_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* released = _impl_.end_;
  _impl_.end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgServerRequestedTracer::unsafe_arena_release_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgServerRequestedTracer.end)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.end_;
  _impl_.end_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgServerRequestedTracer::_internal_mutable_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.end_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.end_;
}
inline ::CMsgVector* CMsgServerRequestedTracer::mutable_end() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgVector* _msg = _internal_mutable_end();
  // @@protoc_insertion_point(field_mutable:CMsgServerRequestedTracer.end)
  return _msg;
}
inline void CMsgServerRequestedTracer::set_allocated_end(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.end_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgServerRequestedTracer.end)
}

// optional int32 weaponid = 3 [default = -1];
inline bool CMsgServerRequestedTracer::has_weaponid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgServerRequestedTracer::clear_weaponid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weaponid_ = -1;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CMsgServerRequestedTracer::weaponid() const {
  // @@protoc_insertion_point(field_get:CMsgServerRequestedTracer.weaponid)
  return _internal_weaponid();
}
inline void CMsgServerRequestedTracer::set_weaponid(::int32_t value) {
  _internal_set_weaponid(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgServerRequestedTracer.weaponid)
}
inline ::int32_t CMsgServerRequestedTracer::_internal_weaponid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weaponid_;
}
inline void CMsgServerRequestedTracer::_internal_set_weaponid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weaponid_ = value;
}

// optional uint32 entity_handle = 4 [default = 16777215];
inline bool CMsgServerRequestedTracer::has_entity_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgServerRequestedTracer::clear_entity_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = 16777215u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgServerRequestedTracer::entity_handle() const {
  // @@protoc_insertion_point(field_get:CMsgServerRequestedTracer.entity_handle)
  return _internal_entity_handle();
}
inline void CMsgServerRequestedTracer::set_entity_handle(::uint32_t value) {
  _internal_set_entity_handle(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgServerRequestedTracer.entity_handle)
}
inline ::uint32_t CMsgServerRequestedTracer::_internal_entity_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_handle_;
}
inline void CMsgServerRequestedTracer::_internal_set_entity_handle(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = value;
}

// optional float dps = 5;
inline bool CMsgServerRequestedTracer::has_dps() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgServerRequestedTracer::clear_dps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dps_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgServerRequestedTracer::dps() const {
  // @@protoc_insertion_point(field_get:CMsgServerRequestedTracer.dps)
  return _internal_dps();
}
inline void CMsgServerRequestedTracer::set_dps(float value) {
  _internal_set_dps(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgServerRequestedTracer.dps)
}
inline float CMsgServerRequestedTracer::_internal_dps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dps_;
}
inline void CMsgServerRequestedTracer::_internal_set_dps(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dps_ = value;
}

// -------------------------------------------------------------------

// CMsgEnableSatVolumesEvent

// optional uint32 mode = 1;
inline bool CMsgEnableSatVolumesEvent::has_mode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgEnableSatVolumesEvent::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t CMsgEnableSatVolumesEvent::mode() const {
  // @@protoc_insertion_point(field_get:CMsgEnableSatVolumesEvent.mode)
  return _internal_mode();
}
inline void CMsgEnableSatVolumesEvent::set_mode(::uint32_t value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgEnableSatVolumesEvent.mode)
}
inline ::uint32_t CMsgEnableSatVolumesEvent::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mode_;
}
inline void CMsgEnableSatVolumesEvent::_internal_set_mode(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// optional float desat_amount = 2;
inline bool CMsgEnableSatVolumesEvent::has_desat_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgEnableSatVolumesEvent::clear_desat_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.desat_amount_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float CMsgEnableSatVolumesEvent::desat_amount() const {
  // @@protoc_insertion_point(field_get:CMsgEnableSatVolumesEvent.desat_amount)
  return _internal_desat_amount();
}
inline void CMsgEnableSatVolumesEvent::set_desat_amount(float value) {
  _internal_set_desat_amount(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgEnableSatVolumesEvent.desat_amount)
}
inline float CMsgEnableSatVolumesEvent::_internal_desat_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.desat_amount_;
}
inline void CMsgEnableSatVolumesEvent::_internal_set_desat_amount(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.desat_amount_ = value;
}

// optional fixed32 sat_tint = 3;
inline bool CMsgEnableSatVolumesEvent::has_sat_tint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgEnableSatVolumesEvent::clear_sat_tint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_tint_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t CMsgEnableSatVolumesEvent::sat_tint() const {
  // @@protoc_insertion_point(field_get:CMsgEnableSatVolumesEvent.sat_tint)
  return _internal_sat_tint();
}
inline void CMsgEnableSatVolumesEvent::set_sat_tint(::uint32_t value) {
  _internal_set_sat_tint(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgEnableSatVolumesEvent.sat_tint)
}
inline ::uint32_t CMsgEnableSatVolumesEvent::_internal_sat_tint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_tint_;
}
inline void CMsgEnableSatVolumesEvent::_internal_set_sat_tint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_tint_ = value;
}

// optional fixed32 desat_tint = 4;
inline bool CMsgEnableSatVolumesEvent::has_desat_tint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgEnableSatVolumesEvent::clear_desat_tint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.desat_tint_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CMsgEnableSatVolumesEvent::desat_tint() const {
  // @@protoc_insertion_point(field_get:CMsgEnableSatVolumesEvent.desat_tint)
  return _internal_desat_tint();
}
inline void CMsgEnableSatVolumesEvent::set_desat_tint(::uint32_t value) {
  _internal_set_desat_tint(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgEnableSatVolumesEvent.desat_tint)
}
inline ::uint32_t CMsgEnableSatVolumesEvent::_internal_desat_tint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.desat_tint_;
}
inline void CMsgEnableSatVolumesEvent::_internal_set_desat_tint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.desat_tint_ = value;
}

// optional fixed32 outline_color = 5;
inline bool CMsgEnableSatVolumesEvent::has_outline_color() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgEnableSatVolumesEvent::clear_outline_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outline_color_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgEnableSatVolumesEvent::outline_color() const {
  // @@protoc_insertion_point(field_get:CMsgEnableSatVolumesEvent.outline_color)
  return _internal_outline_color();
}
inline void CMsgEnableSatVolumesEvent::set_outline_color(::uint32_t value) {
  _internal_set_outline_color(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgEnableSatVolumesEvent.outline_color)
}
inline ::uint32_t CMsgEnableSatVolumesEvent::_internal_outline_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outline_color_;
}
inline void CMsgEnableSatVolumesEvent::_internal_set_outline_color(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outline_color_ = value;
}

// -------------------------------------------------------------------

// CMsgPlaceSatVolumeEvent

// optional .CMsgVector position = 1;
inline bool CMsgPlaceSatVolumeEvent::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgPlaceSatVolumeEvent::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgPlaceSatVolumeEvent::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.position)
  return _internal_position();
}
inline void CMsgPlaceSatVolumeEvent::unsafe_arena_set_allocated_position(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgPlaceSatVolumeEvent.position)
}
inline ::CMsgVector* CMsgPlaceSatVolumeEvent::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* released = _impl_.position_;
  _impl_.position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgPlaceSatVolumeEvent::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgPlaceSatVolumeEvent.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgPlaceSatVolumeEvent::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.position_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.position_;
}
inline ::CMsgVector* CMsgPlaceSatVolumeEvent::mutable_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CMsgVector* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:CMsgPlaceSatVolumeEvent.position)
  return _msg;
}
inline void CMsgPlaceSatVolumeEvent::set_allocated_position(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgPlaceSatVolumeEvent.position)
}

// optional .CMsgVector direction = 2;
inline bool CMsgPlaceSatVolumeEvent::has_direction() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.direction_ != nullptr);
  return value;
}
inline const ::CMsgVector& CMsgPlaceSatVolumeEvent::_internal_direction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.direction_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgPlaceSatVolumeEvent::direction() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.direction)
  return _internal_direction();
}
inline void CMsgPlaceSatVolumeEvent::unsafe_arena_set_allocated_direction(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.direction_);
  }
  _impl_.direction_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgPlaceSatVolumeEvent.direction)
}
inline ::CMsgVector* CMsgPlaceSatVolumeEvent::release_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* released = _impl_.direction_;
  _impl_.direction_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CMsgPlaceSatVolumeEvent::unsafe_arena_release_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgPlaceSatVolumeEvent.direction)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.direction_;
  _impl_.direction_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgPlaceSatVolumeEvent::_internal_mutable_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.direction_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.direction_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.direction_;
}
inline ::CMsgVector* CMsgPlaceSatVolumeEvent::mutable_direction() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgVector* _msg = _internal_mutable_direction();
  // @@protoc_insertion_point(field_mutable:CMsgPlaceSatVolumeEvent.direction)
  return _msg;
}
inline void CMsgPlaceSatVolumeEvent::set_allocated_direction(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.direction_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.direction_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CMsgPlaceSatVolumeEvent.direction)
}

// optional float radius = 3;
inline bool CMsgPlaceSatVolumeEvent::has_radius() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgPlaceSatVolumeEvent::clear_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float CMsgPlaceSatVolumeEvent::radius() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.radius)
  return _internal_radius();
}
inline void CMsgPlaceSatVolumeEvent::set_radius(float value) {
  _internal_set_radius(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgPlaceSatVolumeEvent.radius)
}
inline float CMsgPlaceSatVolumeEvent::_internal_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radius_;
}
inline void CMsgPlaceSatVolumeEvent::_internal_set_radius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = value;
}

// optional float falloff_distance = 4;
inline bool CMsgPlaceSatVolumeEvent::has_falloff_distance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgPlaceSatVolumeEvent::clear_falloff_distance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.falloff_distance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float CMsgPlaceSatVolumeEvent::falloff_distance() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.falloff_distance)
  return _internal_falloff_distance();
}
inline void CMsgPlaceSatVolumeEvent::set_falloff_distance(float value) {
  _internal_set_falloff_distance(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgPlaceSatVolumeEvent.falloff_distance)
}
inline float CMsgPlaceSatVolumeEvent::_internal_falloff_distance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.falloff_distance_;
}
inline void CMsgPlaceSatVolumeEvent::_internal_set_falloff_distance(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.falloff_distance_ = value;
}

// optional float theta_dot = 5;
inline bool CMsgPlaceSatVolumeEvent::has_theta_dot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgPlaceSatVolumeEvent::clear_theta_dot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.theta_dot_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CMsgPlaceSatVolumeEvent::theta_dot() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.theta_dot)
  return _internal_theta_dot();
}
inline void CMsgPlaceSatVolumeEvent::set_theta_dot(float value) {
  _internal_set_theta_dot(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgPlaceSatVolumeEvent.theta_dot)
}
inline float CMsgPlaceSatVolumeEvent::_internal_theta_dot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.theta_dot_;
}
inline void CMsgPlaceSatVolumeEvent::_internal_set_theta_dot(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.theta_dot_ = value;
}

// optional float phi_dot = 6;
inline bool CMsgPlaceSatVolumeEvent::has_phi_dot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgPlaceSatVolumeEvent::clear_phi_dot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phi_dot_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float CMsgPlaceSatVolumeEvent::phi_dot() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.phi_dot)
  return _internal_phi_dot();
}
inline void CMsgPlaceSatVolumeEvent::set_phi_dot(float value) {
  _internal_set_phi_dot(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgPlaceSatVolumeEvent.phi_dot)
}
inline float CMsgPlaceSatVolumeEvent::_internal_phi_dot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phi_dot_;
}
inline void CMsgPlaceSatVolumeEvent::_internal_set_phi_dot(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phi_dot_ = value;
}

// optional uint32 entity_handle = 7 [default = 16777215];
inline bool CMsgPlaceSatVolumeEvent::has_entity_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgPlaceSatVolumeEvent::clear_entity_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = 16777215u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t CMsgPlaceSatVolumeEvent::entity_handle() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.entity_handle)
  return _internal_entity_handle();
}
inline void CMsgPlaceSatVolumeEvent::set_entity_handle(::uint32_t value) {
  _internal_set_entity_handle(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgPlaceSatVolumeEvent.entity_handle)
}
inline ::uint32_t CMsgPlaceSatVolumeEvent::_internal_entity_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_handle_;
}
inline void CMsgPlaceSatVolumeEvent::_internal_set_entity_handle(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_handle_ = value;
}

// optional uint32 attachment_handle = 8;
inline bool CMsgPlaceSatVolumeEvent::has_attachment_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgPlaceSatVolumeEvent::clear_attachment_handle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attachment_handle_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t CMsgPlaceSatVolumeEvent::attachment_handle() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.attachment_handle)
  return _internal_attachment_handle();
}
inline void CMsgPlaceSatVolumeEvent::set_attachment_handle(::uint32_t value) {
  _internal_set_attachment_handle(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgPlaceSatVolumeEvent.attachment_handle)
}
inline ::uint32_t CMsgPlaceSatVolumeEvent::_internal_attachment_handle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attachment_handle_;
}
inline void CMsgPlaceSatVolumeEvent::_internal_set_attachment_handle(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attachment_handle_ = value;
}

// optional uint32 type = 9;
inline bool CMsgPlaceSatVolumeEvent::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgPlaceSatVolumeEvent::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t CMsgPlaceSatVolumeEvent::type() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.type)
  return _internal_type();
}
inline void CMsgPlaceSatVolumeEvent::set_type(::uint32_t value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgPlaceSatVolumeEvent.type)
}
inline ::uint32_t CMsgPlaceSatVolumeEvent::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_;
}
inline void CMsgPlaceSatVolumeEvent::_internal_set_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// optional int32 volume_id = 10;
inline bool CMsgPlaceSatVolumeEvent::has_volume_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgPlaceSatVolumeEvent::clear_volume_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t CMsgPlaceSatVolumeEvent::volume_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceSatVolumeEvent.volume_id)
  return _internal_volume_id();
}
inline void CMsgPlaceSatVolumeEvent::set_volume_id(::int32_t value) {
  _internal_set_volume_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgPlaceSatVolumeEvent.volume_id)
}
inline ::int32_t CMsgPlaceSatVolumeEvent::_internal_volume_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_id_;
}
inline void CMsgPlaceSatVolumeEvent::_internal_set_volume_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_id_ = value;
}

// -------------------------------------------------------------------

// CMsgRemoveSatVolumeEvent

// optional int32 volume_id = 1;
inline bool CMsgRemoveSatVolumeEvent::has_volume_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgRemoveSatVolumeEvent::clear_volume_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t CMsgRemoveSatVolumeEvent::volume_id() const {
  // @@protoc_insertion_point(field_get:CMsgRemoveSatVolumeEvent.volume_id)
  return _internal_volume_id();
}
inline void CMsgRemoveSatVolumeEvent::set_volume_id(::int32_t value) {
  _internal_set_volume_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CMsgRemoveSatVolumeEvent.volume_id)
}
inline ::int32_t CMsgRemoveSatVolumeEvent::_internal_volume_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_id_;
}
inline void CMsgRemoveSatVolumeEvent::_internal_set_volume_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_id_ = value;
}

// -------------------------------------------------------------------

// CMsgDisableSatVolumesEvent

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ECitadelGameEvents> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ECitadelGameEvents>() {
  return ::ECitadelGameEvents_descriptor();
}
template <>
struct is_proto_enum<::PARTICLE_SYSTEM_MANAGER_MESSAGE> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::PARTICLE_SYSTEM_MANAGER_MESSAGE>() {
  return ::PARTICLE_SYSTEM_MANAGER_MESSAGE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_citadel_5fgameevents_2eproto_2epb_2eh
