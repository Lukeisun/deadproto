// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: citadel_usercmd.proto
// Protobuf C++ Version: 5.27.3

#include "citadel_usercmd.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr CCitadelUserCmdPB::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        base_{nullptr},
        vec_camera_position_{nullptr},
        ang_camera_angles_{nullptr},
        execute_ability_indices_{0},
        camera_roaming_speed_{0},
        in_shop_{false},
        using_free_cursor_{false},
        enemy_hero_aimed_at_{-1} {}

template <typename>
PROTOBUF_CONSTEXPR CCitadelUserCmdPB::CCitadelUserCmdPB(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CCitadelUserCmdPBDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CCitadelUserCmdPBDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CCitadelUserCmdPBDefaultTypeInternal() {}
  union {
    CCitadelUserCmdPB _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CCitadelUserCmdPBDefaultTypeInternal _CCitadelUserCmdPB_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_citadel_5fusercmd_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_citadel_5fusercmd_2eproto = nullptr;
const ::uint32_t
    TableStruct_citadel_5fusercmd_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _impl_.vec_camera_position_),
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _impl_.ang_camera_angles_),
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _impl_.execute_ability_indices_),
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _impl_.in_shop_),
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _impl_.camera_roaming_speed_),
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _impl_.using_free_cursor_),
        PROTOBUF_FIELD_OFFSET(::CCitadelUserCmdPB, _impl_.enemy_hero_aimed_at_),
        0,
        1,
        2,
        3,
        5,
        4,
        6,
        7,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 16, -1, sizeof(::CCitadelUserCmdPB)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_CCitadelUserCmdPB_default_instance_._instance,
};
const char descriptor_table_protodef_citadel_5fusercmd_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025citadel_usercmd.proto\032\026networkbasetype"
    "s.proto\032\rusercmd.proto\"\220\002\n\021CCitadelUserC"
    "mdPB\022\035\n\004base\030\001 \001(\0132\017.CBaseUserCmdPB\022(\n\023v"
    "ec_camera_position\030\002 \001(\0132\013.CMsgVector\022&\n"
    "\021ang_camera_angles\030\003 \001(\0132\013.CMsgQAngle\022\037\n"
    "\027execute_ability_indices\030\004 \001(\005\022\017\n\007in_sho"
    "p\030\005 \001(\010\022\034\n\024camera_roaming_speed\030\006 \001(\002\022\031\n"
    "\021using_free_cursor\030\010 \001(\010\022\037\n\023enemy_hero_a"
    "imed_at\030\n \001(\005:\002-1"
};
static const ::_pbi::DescriptorTable* const descriptor_table_citadel_5fusercmd_2eproto_deps[2] =
    {
        &::descriptor_table_networkbasetypes_2eproto,
        &::descriptor_table_usercmd_2eproto,
};
static ::absl::once_flag descriptor_table_citadel_5fusercmd_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_citadel_5fusercmd_2eproto = {
    false,
    false,
    337,
    descriptor_table_protodef_citadel_5fusercmd_2eproto,
    "citadel_usercmd.proto",
    &descriptor_table_citadel_5fusercmd_2eproto_once,
    descriptor_table_citadel_5fusercmd_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_citadel_5fusercmd_2eproto::offsets,
    file_level_enum_descriptors_citadel_5fusercmd_2eproto,
    file_level_service_descriptors_citadel_5fusercmd_2eproto,
};
// ===================================================================

class CCitadelUserCmdPB::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CCitadelUserCmdPB>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_._has_bits_);
};

void CCitadelUserCmdPB::clear_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ != nullptr) _impl_.base_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CCitadelUserCmdPB::clear_vec_camera_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vec_camera_position_ != nullptr) _impl_.vec_camera_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CCitadelUserCmdPB::clear_ang_camera_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ang_camera_angles_ != nullptr) _impl_.ang_camera_angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CCitadelUserCmdPB::CCitadelUserCmdPB(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CCitadelUserCmdPB)
}
inline PROTOBUF_NDEBUG_INLINE CCitadelUserCmdPB::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CCitadelUserCmdPB& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CCitadelUserCmdPB::CCitadelUserCmdPB(
    ::google::protobuf::Arena* arena,
    const CCitadelUserCmdPB& from)
    : ::google::protobuf::Message(arena) {
  CCitadelUserCmdPB* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CBaseUserCmdPB>(
                              arena, *from._impl_.base_)
                        : nullptr;
  _impl_.vec_camera_position_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.vec_camera_position_)
                        : nullptr;
  _impl_.ang_camera_angles_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::CMsgQAngle>(
                              arena, *from._impl_.ang_camera_angles_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, execute_ability_indices_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, execute_ability_indices_),
           offsetof(Impl_, enemy_hero_aimed_at_) -
               offsetof(Impl_, execute_ability_indices_) +
               sizeof(Impl_::enemy_hero_aimed_at_));

  // @@protoc_insertion_point(copy_constructor:CCitadelUserCmdPB)
}
inline PROTOBUF_NDEBUG_INLINE CCitadelUserCmdPB::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        enemy_hero_aimed_at_{-1} {}

inline void CCitadelUserCmdPB::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, base_),
           0,
           offsetof(Impl_, using_free_cursor_) -
               offsetof(Impl_, base_) +
               sizeof(Impl_::using_free_cursor_));
}
CCitadelUserCmdPB::~CCitadelUserCmdPB() {
  // @@protoc_insertion_point(destructor:CCitadelUserCmdPB)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CCitadelUserCmdPB::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.base_;
  delete _impl_.vec_camera_position_;
  delete _impl_.ang_camera_angles_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CCitadelUserCmdPB::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_._cached_size_),
              false,
          },
          &CCitadelUserCmdPB::MergeImpl,
          &CCitadelUserCmdPB::kDescriptorMethods,
          &descriptor_table_citadel_5fusercmd_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 3, 0, 2> CCitadelUserCmdPB::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966592,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CCitadelUserCmdPB_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CCitadelUserCmdPB>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CBaseUserCmdPB base = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.base_)}},
    // optional .CMsgVector vec_camera_position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.vec_camera_position_)}},
    // optional .CMsgQAngle ang_camera_angles = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.ang_camera_angles_)}},
    // optional int32 execute_ability_indices = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCitadelUserCmdPB, _impl_.execute_ability_indices_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.execute_ability_indices_)}},
    // optional bool in_shop = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CCitadelUserCmdPB, _impl_.in_shop_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.in_shop_)}},
    // optional float camera_roaming_speed = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 4, 0, PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.camera_roaming_speed_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool using_free_cursor = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CCitadelUserCmdPB, _impl_.using_free_cursor_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.using_free_cursor_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 enemy_hero_aimed_at = 10 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CCitadelUserCmdPB, _impl_.enemy_hero_aimed_at_), 7>(),
     {80, 7, 0, PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.enemy_hero_aimed_at_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CBaseUserCmdPB base = 1;
    {PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.base_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector vec_camera_position = 2;
    {PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.vec_camera_position_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle ang_camera_angles = 3;
    {PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.ang_camera_angles_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 execute_ability_indices = 4;
    {PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.execute_ability_indices_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool in_shop = 5;
    {PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.in_shop_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional float camera_roaming_speed = 6;
    {PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.camera_roaming_speed_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool using_free_cursor = 8;
    {PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.using_free_cursor_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 enemy_hero_aimed_at = 10 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.enemy_hero_aimed_at_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CBaseUserCmdPB>()},
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CCitadelUserCmdPB::Clear() {
// @@protoc_insertion_point(message_clear_start:CCitadelUserCmdPB)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.base_ != nullptr);
      _impl_.base_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.vec_camera_position_ != nullptr);
      _impl_.vec_camera_position_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.ang_camera_angles_ != nullptr);
      _impl_.ang_camera_angles_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.execute_ability_indices_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.using_free_cursor_) -
        reinterpret_cast<char*>(&_impl_.execute_ability_indices_)) + sizeof(_impl_.using_free_cursor_));
    _impl_.enemy_hero_aimed_at_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CCitadelUserCmdPB::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CCitadelUserCmdPB)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CBaseUserCmdPB base = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.base_, _impl_.base_->GetCachedSize(), target, stream);
  }

  // optional .CMsgVector vec_camera_position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.vec_camera_position_, _impl_.vec_camera_position_->GetCachedSize(), target, stream);
  }

  // optional .CMsgQAngle ang_camera_angles = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.ang_camera_angles_, _impl_.ang_camera_angles_->GetCachedSize(), target, stream);
  }

  // optional int32 execute_ability_indices = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_execute_ability_indices(), target);
  }

  // optional bool in_shop = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_in_shop(), target);
  }

  // optional float camera_roaming_speed = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_camera_roaming_speed(), target);
  }

  // optional bool using_free_cursor = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_using_free_cursor(), target);
  }

  // optional int32 enemy_hero_aimed_at = 10 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_enemy_hero_aimed_at(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CCitadelUserCmdPB)
  return target;
}

::size_t CCitadelUserCmdPB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CCitadelUserCmdPB)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .CBaseUserCmdPB base = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.base_);
    }

    // optional .CMsgVector vec_camera_position = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.vec_camera_position_);
    }

    // optional .CMsgQAngle ang_camera_angles = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ang_camera_angles_);
    }

    // optional int32 execute_ability_indices = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_execute_ability_indices());
    }

    // optional float camera_roaming_speed = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional bool in_shop = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2;
    }

    // optional bool using_free_cursor = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

    // optional int32 enemy_hero_aimed_at = 10 [default = -1];
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_enemy_hero_aimed_at());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CCitadelUserCmdPB::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CCitadelUserCmdPB*>(&to_msg);
  auto& from = static_cast<const CCitadelUserCmdPB&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CCitadelUserCmdPB)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.base_ != nullptr);
      if (_this->_impl_.base_ == nullptr) {
        _this->_impl_.base_ =
            ::google::protobuf::Message::CopyConstruct<::CBaseUserCmdPB>(arena, *from._impl_.base_);
      } else {
        _this->_impl_.base_->MergeFrom(*from._impl_.base_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.vec_camera_position_ != nullptr);
      if (_this->_impl_.vec_camera_position_ == nullptr) {
        _this->_impl_.vec_camera_position_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.vec_camera_position_);
      } else {
        _this->_impl_.vec_camera_position_->MergeFrom(*from._impl_.vec_camera_position_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.ang_camera_angles_ != nullptr);
      if (_this->_impl_.ang_camera_angles_ == nullptr) {
        _this->_impl_.ang_camera_angles_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgQAngle>(arena, *from._impl_.ang_camera_angles_);
      } else {
        _this->_impl_.ang_camera_angles_->MergeFrom(*from._impl_.ang_camera_angles_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.execute_ability_indices_ = from._impl_.execute_ability_indices_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.camera_roaming_speed_ = from._impl_.camera_roaming_speed_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.in_shop_ = from._impl_.in_shop_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.using_free_cursor_ = from._impl_.using_free_cursor_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.enemy_hero_aimed_at_ = from._impl_.enemy_hero_aimed_at_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CCitadelUserCmdPB::CopyFrom(const CCitadelUserCmdPB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CCitadelUserCmdPB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CCitadelUserCmdPB::InternalSwap(CCitadelUserCmdPB* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.enemy_hero_aimed_at_)
      + sizeof(CCitadelUserCmdPB::_impl_.enemy_hero_aimed_at_)
      - PROTOBUF_FIELD_OFFSET(CCitadelUserCmdPB, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::google::protobuf::Metadata CCitadelUserCmdPB::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_citadel_5fusercmd_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
