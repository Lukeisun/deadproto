// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: econ_shared_enums.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_econ_5fshared_5fenums_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_econ_5fshared_5fenums_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_econ_5fshared_5fenums_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_econ_5fshared_5fenums_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_econ_5fshared_5fenums_2eproto;
class CMsgGenericResult;
struct CMsgGenericResultDefaultTypeInternal;
extern CMsgGenericResultDefaultTypeInternal _CMsgGenericResult_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum EGCEconBaseMsg : int {
  k_EMsgGCGenericResult = 2579,
};

bool EGCEconBaseMsg_IsValid(int value);
extern const uint32_t EGCEconBaseMsg_internal_data_[];
constexpr EGCEconBaseMsg EGCEconBaseMsg_MIN = static_cast<EGCEconBaseMsg>(2579);
constexpr EGCEconBaseMsg EGCEconBaseMsg_MAX = static_cast<EGCEconBaseMsg>(2579);
constexpr int EGCEconBaseMsg_ARRAYSIZE = 2579 + 1;
const ::google::protobuf::EnumDescriptor*
EGCEconBaseMsg_descriptor();
template <typename T>
const std::string& EGCEconBaseMsg_Name(T value) {
  static_assert(std::is_same<T, EGCEconBaseMsg>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EGCEconBaseMsg_Name().");
  return EGCEconBaseMsg_Name(static_cast<EGCEconBaseMsg>(value));
}
template <>
inline const std::string& EGCEconBaseMsg_Name(EGCEconBaseMsg value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EGCEconBaseMsg_descriptor,
                                                 2579, 2579>(
      static_cast<int>(value));
}
inline bool EGCEconBaseMsg_Parse(absl::string_view name, EGCEconBaseMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCEconBaseMsg>(
      EGCEconBaseMsg_descriptor(), name, value);
}
enum EGCMsgResponse : int {
  k_EGCMsgResponseOK = 0,
  k_EGCMsgResponseDenied = 1,
  k_EGCMsgResponseServerError = 2,
  k_EGCMsgResponseTimeout = 3,
  k_EGCMsgResponseInvalid = 4,
  k_EGCMsgResponseNoMatch = 5,
  k_EGCMsgResponseUnknownError = 6,
  k_EGCMsgResponseNotLoggedOn = 7,
  k_EGCMsgFailedToCreate = 8,
};

bool EGCMsgResponse_IsValid(int value);
extern const uint32_t EGCMsgResponse_internal_data_[];
constexpr EGCMsgResponse EGCMsgResponse_MIN = static_cast<EGCMsgResponse>(0);
constexpr EGCMsgResponse EGCMsgResponse_MAX = static_cast<EGCMsgResponse>(8);
constexpr int EGCMsgResponse_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
EGCMsgResponse_descriptor();
template <typename T>
const std::string& EGCMsgResponse_Name(T value) {
  static_assert(std::is_same<T, EGCMsgResponse>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EGCMsgResponse_Name().");
  return EGCMsgResponse_Name(static_cast<EGCMsgResponse>(value));
}
template <>
inline const std::string& EGCMsgResponse_Name(EGCMsgResponse value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EGCMsgResponse_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool EGCMsgResponse_Parse(absl::string_view name, EGCMsgResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCMsgResponse>(
      EGCMsgResponse_descriptor(), name, value);
}
enum EGCMsgUseItemResponse : int {
  k_EGCMsgUseItemResponse_ItemUsed = 0,
  k_EGCMsgUseItemResponse_GiftNoOtherPlayers = 1,
  k_EGCMsgUseItemResponse_ServerError = 2,
  k_EGCMsgUseItemResponse_MiniGameAlreadyStarted = 3,
  k_EGCMsgUseItemResponse_ItemUsed_ItemsGranted = 4,
  k_EGCMsgUseItemResponse_DropRateBonusAlreadyGranted = 5,
  k_EGCMsgUseItemResponse_NotInLowPriorityPool = 6,
  k_EGCMsgUseItemResponse_NotHighEnoughLevel = 7,
  k_EGCMsgUseItemResponse_EventNotActive = 8,
  k_EGCMsgUseItemResponse_ItemUsed_EventPointsGranted = 9,
  k_EGCMsgUseItemResponse_MissingRequirement = 10,
  k_EGCMsgUseItemResponse_EmoticonUnlock_NoNew = 11,
  k_EGCMsgUseItemResponse_EmoticonUnlock_Complete = 12,
  k_EGCMsgUseItemResponse_ItemUsed_Compendium = 13,
};

bool EGCMsgUseItemResponse_IsValid(int value);
extern const uint32_t EGCMsgUseItemResponse_internal_data_[];
constexpr EGCMsgUseItemResponse EGCMsgUseItemResponse_MIN = static_cast<EGCMsgUseItemResponse>(0);
constexpr EGCMsgUseItemResponse EGCMsgUseItemResponse_MAX = static_cast<EGCMsgUseItemResponse>(13);
constexpr int EGCMsgUseItemResponse_ARRAYSIZE = 13 + 1;
const ::google::protobuf::EnumDescriptor*
EGCMsgUseItemResponse_descriptor();
template <typename T>
const std::string& EGCMsgUseItemResponse_Name(T value) {
  static_assert(std::is_same<T, EGCMsgUseItemResponse>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EGCMsgUseItemResponse_Name().");
  return EGCMsgUseItemResponse_Name(static_cast<EGCMsgUseItemResponse>(value));
}
template <>
inline const std::string& EGCMsgUseItemResponse_Name(EGCMsgUseItemResponse value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EGCMsgUseItemResponse_descriptor,
                                                 0, 13>(
      static_cast<int>(value));
}
inline bool EGCMsgUseItemResponse_Parse(absl::string_view name, EGCMsgUseItemResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCMsgUseItemResponse>(
      EGCMsgUseItemResponse_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class CMsgGenericResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgGenericResult) */ {
 public:
  inline CMsgGenericResult() : CMsgGenericResult(nullptr) {}
  ~CMsgGenericResult() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgGenericResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgGenericResult(const CMsgGenericResult& from) : CMsgGenericResult(nullptr, from) {}
  inline CMsgGenericResult(CMsgGenericResult&& from) noexcept
      : CMsgGenericResult(nullptr, std::move(from)) {}
  inline CMsgGenericResult& operator=(const CMsgGenericResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGenericResult& operator=(CMsgGenericResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgGenericResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGenericResult* internal_default_instance() {
    return reinterpret_cast<const CMsgGenericResult*>(
        &_CMsgGenericResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CMsgGenericResult& a, CMsgGenericResult& b) { a.Swap(&b); }
  inline void Swap(CMsgGenericResult* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGenericResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgGenericResult* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgGenericResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgGenericResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgGenericResult& from) { CMsgGenericResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgGenericResult* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgGenericResult"; }

 protected:
  explicit CMsgGenericResult(::google::protobuf::Arena* arena);
  CMsgGenericResult(::google::protobuf::Arena* arena, const CMsgGenericResult& from);
  CMsgGenericResult(::google::protobuf::Arena* arena, CMsgGenericResult&& from) noexcept
      : CMsgGenericResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDebugMessageFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional string debug_message = 2;
  bool has_debug_message() const;
  void clear_debug_message() ;
  const std::string& debug_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_debug_message(Arg_&& arg, Args_... args);
  std::string* mutable_debug_message();
  PROTOBUF_NODISCARD std::string* release_debug_message();
  void set_allocated_debug_message(std::string* value);

  private:
  const std::string& _internal_debug_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_debug_message(
      const std::string& value);
  std::string* _internal_mutable_debug_message();

  public:
  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult() ;
  ::uint32_t eresult() const;
  void set_eresult(::uint32_t value);

  private:
  ::uint32_t _internal_eresult() const;
  void _internal_set_eresult(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgGenericResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgGenericResult_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgGenericResult& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr debug_message_;
    ::uint32_t eresult_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_econ_5fshared_5fenums_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CMsgGenericResult

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgGenericResult::has_eresult() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgGenericResult::clear_eresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eresult_ = 2u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CMsgGenericResult::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgGenericResult.eresult)
  return _internal_eresult();
}
inline void CMsgGenericResult::set_eresult(::uint32_t value) {
  _internal_set_eresult(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CMsgGenericResult.eresult)
}
inline ::uint32_t CMsgGenericResult::_internal_eresult() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eresult_;
}
inline void CMsgGenericResult::_internal_set_eresult(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eresult_ = value;
}

// optional string debug_message = 2;
inline bool CMsgGenericResult::has_debug_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgGenericResult::clear_debug_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.debug_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGenericResult::debug_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgGenericResult.debug_message)
  return _internal_debug_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgGenericResult::set_debug_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.debug_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgGenericResult.debug_message)
}
inline std::string* CMsgGenericResult::mutable_debug_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_debug_message();
  // @@protoc_insertion_point(field_mutable:CMsgGenericResult.debug_message)
  return _s;
}
inline const std::string& CMsgGenericResult::_internal_debug_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.debug_message_.Get();
}
inline void CMsgGenericResult::_internal_set_debug_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.debug_message_.Set(value, GetArena());
}
inline std::string* CMsgGenericResult::_internal_mutable_debug_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.debug_message_.Mutable( GetArena());
}
inline std::string* CMsgGenericResult::release_debug_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgGenericResult.debug_message)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.debug_message_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.debug_message_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgGenericResult::set_allocated_debug_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.debug_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.debug_message_.IsDefault()) {
          _impl_.debug_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgGenericResult.debug_message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::EGCEconBaseMsg> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::EGCEconBaseMsg>() {
  return ::EGCEconBaseMsg_descriptor();
}
template <>
struct is_proto_enum<::EGCMsgResponse> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::EGCMsgResponse>() {
  return ::EGCMsgResponse_descriptor();
}
template <>
struct is_proto_enum<::EGCMsgUseItemResponse> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::EGCMsgUseItemResponse>() {
  return ::EGCMsgUseItemResponse_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_econ_5fshared_5fenums_2eproto_2epb_2eh
