// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: citadel_usercmd.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_citadel_5fusercmd_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_citadel_5fusercmd_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "networkbasetypes.pb.h"
#include "usercmd.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_citadel_5fusercmd_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_citadel_5fusercmd_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_citadel_5fusercmd_2eproto;
class CCitadelUserCmdPB;
struct CCitadelUserCmdPBDefaultTypeInternal;
extern CCitadelUserCmdPBDefaultTypeInternal _CCitadelUserCmdPB_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class CCitadelUserCmdPB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CCitadelUserCmdPB) */ {
 public:
  inline CCitadelUserCmdPB() : CCitadelUserCmdPB(nullptr) {}
  ~CCitadelUserCmdPB() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CCitadelUserCmdPB(
      ::google::protobuf::internal::ConstantInitialized);

  inline CCitadelUserCmdPB(const CCitadelUserCmdPB& from) : CCitadelUserCmdPB(nullptr, from) {}
  inline CCitadelUserCmdPB(CCitadelUserCmdPB&& from) noexcept
      : CCitadelUserCmdPB(nullptr, std::move(from)) {}
  inline CCitadelUserCmdPB& operator=(const CCitadelUserCmdPB& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCitadelUserCmdPB& operator=(CCitadelUserCmdPB&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CCitadelUserCmdPB& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCitadelUserCmdPB* internal_default_instance() {
    return reinterpret_cast<const CCitadelUserCmdPB*>(
        &_CCitadelUserCmdPB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CCitadelUserCmdPB& a, CCitadelUserCmdPB& b) { a.Swap(&b); }
  inline void Swap(CCitadelUserCmdPB* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCitadelUserCmdPB* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CCitadelUserCmdPB* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CCitadelUserCmdPB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CCitadelUserCmdPB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CCitadelUserCmdPB& from) { CCitadelUserCmdPB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CCitadelUserCmdPB* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CCitadelUserCmdPB"; }

 protected:
  explicit CCitadelUserCmdPB(::google::protobuf::Arena* arena);
  CCitadelUserCmdPB(::google::protobuf::Arena* arena, const CCitadelUserCmdPB& from);
  CCitadelUserCmdPB(::google::protobuf::Arena* arena, CCitadelUserCmdPB&& from) noexcept
      : CCitadelUserCmdPB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFieldNumber = 1,
    kVecCameraPositionFieldNumber = 2,
    kAngCameraAnglesFieldNumber = 3,
    kExecuteAbilityIndicesFieldNumber = 4,
    kCameraRoamingSpeedFieldNumber = 6,
    kInShopFieldNumber = 5,
    kUsingFreeCursorFieldNumber = 8,
    kEnemyHeroAimedAtFieldNumber = 10,
  };
  // optional .CBaseUserCmdPB base = 1;
  bool has_base() const;
  void clear_base() ;
  const ::CBaseUserCmdPB& base() const;
  PROTOBUF_NODISCARD ::CBaseUserCmdPB* release_base();
  ::CBaseUserCmdPB* mutable_base();
  void set_allocated_base(::CBaseUserCmdPB* value);
  void unsafe_arena_set_allocated_base(::CBaseUserCmdPB* value);
  ::CBaseUserCmdPB* unsafe_arena_release_base();

  private:
  const ::CBaseUserCmdPB& _internal_base() const;
  ::CBaseUserCmdPB* _internal_mutable_base();

  public:
  // optional .CMsgVector vec_camera_position = 2;
  bool has_vec_camera_position() const;
  void clear_vec_camera_position() ;
  const ::CMsgVector& vec_camera_position() const;
  PROTOBUF_NODISCARD ::CMsgVector* release_vec_camera_position();
  ::CMsgVector* mutable_vec_camera_position();
  void set_allocated_vec_camera_position(::CMsgVector* value);
  void unsafe_arena_set_allocated_vec_camera_position(::CMsgVector* value);
  ::CMsgVector* unsafe_arena_release_vec_camera_position();

  private:
  const ::CMsgVector& _internal_vec_camera_position() const;
  ::CMsgVector* _internal_mutable_vec_camera_position();

  public:
  // optional .CMsgQAngle ang_camera_angles = 3;
  bool has_ang_camera_angles() const;
  void clear_ang_camera_angles() ;
  const ::CMsgQAngle& ang_camera_angles() const;
  PROTOBUF_NODISCARD ::CMsgQAngle* release_ang_camera_angles();
  ::CMsgQAngle* mutable_ang_camera_angles();
  void set_allocated_ang_camera_angles(::CMsgQAngle* value);
  void unsafe_arena_set_allocated_ang_camera_angles(::CMsgQAngle* value);
  ::CMsgQAngle* unsafe_arena_release_ang_camera_angles();

  private:
  const ::CMsgQAngle& _internal_ang_camera_angles() const;
  ::CMsgQAngle* _internal_mutable_ang_camera_angles();

  public:
  // optional int32 execute_ability_indices = 4;
  bool has_execute_ability_indices() const;
  void clear_execute_ability_indices() ;
  ::int32_t execute_ability_indices() const;
  void set_execute_ability_indices(::int32_t value);

  private:
  ::int32_t _internal_execute_ability_indices() const;
  void _internal_set_execute_ability_indices(::int32_t value);

  public:
  // optional float camera_roaming_speed = 6;
  bool has_camera_roaming_speed() const;
  void clear_camera_roaming_speed() ;
  float camera_roaming_speed() const;
  void set_camera_roaming_speed(float value);

  private:
  float _internal_camera_roaming_speed() const;
  void _internal_set_camera_roaming_speed(float value);

  public:
  // optional bool in_shop = 5;
  bool has_in_shop() const;
  void clear_in_shop() ;
  bool in_shop() const;
  void set_in_shop(bool value);

  private:
  bool _internal_in_shop() const;
  void _internal_set_in_shop(bool value);

  public:
  // optional bool using_free_cursor = 8;
  bool has_using_free_cursor() const;
  void clear_using_free_cursor() ;
  bool using_free_cursor() const;
  void set_using_free_cursor(bool value);

  private:
  bool _internal_using_free_cursor() const;
  void _internal_set_using_free_cursor(bool value);

  public:
  // optional int32 enemy_hero_aimed_at = 10 [default = -1];
  bool has_enemy_hero_aimed_at() const;
  void clear_enemy_hero_aimed_at() ;
  ::int32_t enemy_hero_aimed_at() const;
  void set_enemy_hero_aimed_at(::int32_t value);

  private:
  ::int32_t _internal_enemy_hero_aimed_at() const;
  void _internal_set_enemy_hero_aimed_at(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CCitadelUserCmdPB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CCitadelUserCmdPB_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CCitadelUserCmdPB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::CBaseUserCmdPB* base_;
    ::CMsgVector* vec_camera_position_;
    ::CMsgQAngle* ang_camera_angles_;
    ::int32_t execute_ability_indices_;
    float camera_roaming_speed_;
    bool in_shop_;
    bool using_free_cursor_;
    ::int32_t enemy_hero_aimed_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_citadel_5fusercmd_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CCitadelUserCmdPB

// optional .CBaseUserCmdPB base = 1;
inline bool CCitadelUserCmdPB::has_base() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_ != nullptr);
  return value;
}
inline const ::CBaseUserCmdPB& CCitadelUserCmdPB::_internal_base() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CBaseUserCmdPB* p = _impl_.base_;
  return p != nullptr ? *p : reinterpret_cast<const ::CBaseUserCmdPB&>(::_CBaseUserCmdPB_default_instance_);
}
inline const ::CBaseUserCmdPB& CCitadelUserCmdPB::base() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CCitadelUserCmdPB.base)
  return _internal_base();
}
inline void CCitadelUserCmdPB::unsafe_arena_set_allocated_base(::CBaseUserCmdPB* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }
  _impl_.base_ = reinterpret_cast<::CBaseUserCmdPB*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserCmdPB.base)
}
inline ::CBaseUserCmdPB* CCitadelUserCmdPB::release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CBaseUserCmdPB* released = _impl_.base_;
  _impl_.base_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CBaseUserCmdPB* CCitadelUserCmdPB::unsafe_arena_release_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CCitadelUserCmdPB.base)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::CBaseUserCmdPB* temp = _impl_.base_;
  _impl_.base_ = nullptr;
  return temp;
}
inline ::CBaseUserCmdPB* CCitadelUserCmdPB::_internal_mutable_base() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CBaseUserCmdPB>(GetArena());
    _impl_.base_ = reinterpret_cast<::CBaseUserCmdPB*>(p);
  }
  return _impl_.base_;
}
inline ::CBaseUserCmdPB* CCitadelUserCmdPB::mutable_base() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::CBaseUserCmdPB* _msg = _internal_mutable_base();
  // @@protoc_insertion_point(field_mutable:CCitadelUserCmdPB.base)
  return _msg;
}
inline void CCitadelUserCmdPB::set_allocated_base(::CBaseUserCmdPB* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_ = reinterpret_cast<::CBaseUserCmdPB*>(value);
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserCmdPB.base)
}

// optional .CMsgVector vec_camera_position = 2;
inline bool CCitadelUserCmdPB::has_vec_camera_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vec_camera_position_ != nullptr);
  return value;
}
inline const ::CMsgVector& CCitadelUserCmdPB::_internal_vec_camera_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgVector* p = _impl_.vec_camera_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CCitadelUserCmdPB::vec_camera_position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CCitadelUserCmdPB.vec_camera_position)
  return _internal_vec_camera_position();
}
inline void CCitadelUserCmdPB::unsafe_arena_set_allocated_vec_camera_position(::CMsgVector* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vec_camera_position_);
  }
  _impl_.vec_camera_position_ = reinterpret_cast<::CMsgVector*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserCmdPB.vec_camera_position)
}
inline ::CMsgVector* CCitadelUserCmdPB::release_vec_camera_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* released = _impl_.vec_camera_position_;
  _impl_.vec_camera_position_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgVector* CCitadelUserCmdPB::unsafe_arena_release_vec_camera_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CCitadelUserCmdPB.vec_camera_position)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = _impl_.vec_camera_position_;
  _impl_.vec_camera_position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CCitadelUserCmdPB::_internal_mutable_vec_camera_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vec_camera_position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgVector>(GetArena());
    _impl_.vec_camera_position_ = reinterpret_cast<::CMsgVector*>(p);
  }
  return _impl_.vec_camera_position_;
}
inline ::CMsgVector* CCitadelUserCmdPB::mutable_vec_camera_position() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::CMsgVector* _msg = _internal_mutable_vec_camera_position();
  // @@protoc_insertion_point(field_mutable:CCitadelUserCmdPB.vec_camera_position)
  return _msg;
}
inline void CCitadelUserCmdPB::set_allocated_vec_camera_position(::CMsgVector* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vec_camera_position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.vec_camera_position_ = reinterpret_cast<::CMsgVector*>(value);
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserCmdPB.vec_camera_position)
}

// optional .CMsgQAngle ang_camera_angles = 3;
inline bool CCitadelUserCmdPB::has_ang_camera_angles() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ang_camera_angles_ != nullptr);
  return value;
}
inline const ::CMsgQAngle& CCitadelUserCmdPB::_internal_ang_camera_angles() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::CMsgQAngle* p = _impl_.ang_camera_angles_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgQAngle&>(::_CMsgQAngle_default_instance_);
}
inline const ::CMsgQAngle& CCitadelUserCmdPB::ang_camera_angles() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CCitadelUserCmdPB.ang_camera_angles)
  return _internal_ang_camera_angles();
}
inline void CCitadelUserCmdPB::unsafe_arena_set_allocated_ang_camera_angles(::CMsgQAngle* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ang_camera_angles_);
  }
  _impl_.ang_camera_angles_ = reinterpret_cast<::CMsgQAngle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCitadelUserCmdPB.ang_camera_angles)
}
inline ::CMsgQAngle* CCitadelUserCmdPB::release_ang_camera_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgQAngle* released = _impl_.ang_camera_angles_;
  _impl_.ang_camera_angles_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::CMsgQAngle* CCitadelUserCmdPB::unsafe_arena_release_ang_camera_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CCitadelUserCmdPB.ang_camera_angles)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::CMsgQAngle* temp = _impl_.ang_camera_angles_;
  _impl_.ang_camera_angles_ = nullptr;
  return temp;
}
inline ::CMsgQAngle* CCitadelUserCmdPB::_internal_mutable_ang_camera_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ang_camera_angles_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::CMsgQAngle>(GetArena());
    _impl_.ang_camera_angles_ = reinterpret_cast<::CMsgQAngle*>(p);
  }
  return _impl_.ang_camera_angles_;
}
inline ::CMsgQAngle* CCitadelUserCmdPB::mutable_ang_camera_angles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::CMsgQAngle* _msg = _internal_mutable_ang_camera_angles();
  // @@protoc_insertion_point(field_mutable:CCitadelUserCmdPB.ang_camera_angles)
  return _msg;
}
inline void CCitadelUserCmdPB::set_allocated_ang_camera_angles(::CMsgQAngle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ang_camera_angles_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.ang_camera_angles_ = reinterpret_cast<::CMsgQAngle*>(value);
  // @@protoc_insertion_point(field_set_allocated:CCitadelUserCmdPB.ang_camera_angles)
}

// optional int32 execute_ability_indices = 4;
inline bool CCitadelUserCmdPB::has_execute_ability_indices() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CCitadelUserCmdPB::clear_execute_ability_indices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execute_ability_indices_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CCitadelUserCmdPB::execute_ability_indices() const {
  // @@protoc_insertion_point(field_get:CCitadelUserCmdPB.execute_ability_indices)
  return _internal_execute_ability_indices();
}
inline void CCitadelUserCmdPB::set_execute_ability_indices(::int32_t value) {
  _internal_set_execute_ability_indices(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CCitadelUserCmdPB.execute_ability_indices)
}
inline ::int32_t CCitadelUserCmdPB::_internal_execute_ability_indices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.execute_ability_indices_;
}
inline void CCitadelUserCmdPB::_internal_set_execute_ability_indices(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.execute_ability_indices_ = value;
}

// optional bool in_shop = 5;
inline bool CCitadelUserCmdPB::has_in_shop() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CCitadelUserCmdPB::clear_in_shop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_shop_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool CCitadelUserCmdPB::in_shop() const {
  // @@protoc_insertion_point(field_get:CCitadelUserCmdPB.in_shop)
  return _internal_in_shop();
}
inline void CCitadelUserCmdPB::set_in_shop(bool value) {
  _internal_set_in_shop(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CCitadelUserCmdPB.in_shop)
}
inline bool CCitadelUserCmdPB::_internal_in_shop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.in_shop_;
}
inline void CCitadelUserCmdPB::_internal_set_in_shop(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_shop_ = value;
}

// optional float camera_roaming_speed = 6;
inline bool CCitadelUserCmdPB::has_camera_roaming_speed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CCitadelUserCmdPB::clear_camera_roaming_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_roaming_speed_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CCitadelUserCmdPB::camera_roaming_speed() const {
  // @@protoc_insertion_point(field_get:CCitadelUserCmdPB.camera_roaming_speed)
  return _internal_camera_roaming_speed();
}
inline void CCitadelUserCmdPB::set_camera_roaming_speed(float value) {
  _internal_set_camera_roaming_speed(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CCitadelUserCmdPB.camera_roaming_speed)
}
inline float CCitadelUserCmdPB::_internal_camera_roaming_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_roaming_speed_;
}
inline void CCitadelUserCmdPB::_internal_set_camera_roaming_speed(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_roaming_speed_ = value;
}

// optional bool using_free_cursor = 8;
inline bool CCitadelUserCmdPB::has_using_free_cursor() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CCitadelUserCmdPB::clear_using_free_cursor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.using_free_cursor_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool CCitadelUserCmdPB::using_free_cursor() const {
  // @@protoc_insertion_point(field_get:CCitadelUserCmdPB.using_free_cursor)
  return _internal_using_free_cursor();
}
inline void CCitadelUserCmdPB::set_using_free_cursor(bool value) {
  _internal_set_using_free_cursor(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CCitadelUserCmdPB.using_free_cursor)
}
inline bool CCitadelUserCmdPB::_internal_using_free_cursor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.using_free_cursor_;
}
inline void CCitadelUserCmdPB::_internal_set_using_free_cursor(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.using_free_cursor_ = value;
}

// optional int32 enemy_hero_aimed_at = 10 [default = -1];
inline bool CCitadelUserCmdPB::has_enemy_hero_aimed_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CCitadelUserCmdPB::clear_enemy_hero_aimed_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enemy_hero_aimed_at_ = -1;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t CCitadelUserCmdPB::enemy_hero_aimed_at() const {
  // @@protoc_insertion_point(field_get:CCitadelUserCmdPB.enemy_hero_aimed_at)
  return _internal_enemy_hero_aimed_at();
}
inline void CCitadelUserCmdPB::set_enemy_hero_aimed_at(::int32_t value) {
  _internal_set_enemy_hero_aimed_at(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CCitadelUserCmdPB.enemy_hero_aimed_at)
}
inline ::int32_t CCitadelUserCmdPB::_internal_enemy_hero_aimed_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.enemy_hero_aimed_at_;
}
inline void CCitadelUserCmdPB::_internal_set_enemy_hero_aimed_at(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enemy_hero_aimed_at_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_citadel_5fusercmd_2eproto_2epb_2eh
