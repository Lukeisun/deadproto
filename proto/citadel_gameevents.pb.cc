// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: citadel_gameevents.proto
// Protobuf C++ Version: 5.27.3

#include "citadel_gameevents.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr CMsgScreenTextPretty::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        font_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        x_pos_{0},
        y_pos_{0},
        line_{0},
        r_{0},
        g_{0},
        b_{0},
        a_{0},
        duration_{0},
        font_size_{0},
        bold_font_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgScreenTextPretty::CMsgScreenTextPretty(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgScreenTextPrettyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgScreenTextPrettyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgScreenTextPrettyDefaultTypeInternal() {}
  union {
    CMsgScreenTextPretty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgScreenTextPrettyDefaultTypeInternal _CMsgScreenTextPretty_default_instance_;

inline constexpr CMsgRemoveSatVolumeEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        volume_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgRemoveSatVolumeEvent::CMsgRemoveSatVolumeEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgRemoveSatVolumeEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgRemoveSatVolumeEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgRemoveSatVolumeEventDefaultTypeInternal() {}
  union {
    CMsgRemoveSatVolumeEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgRemoveSatVolumeEventDefaultTypeInternal _CMsgRemoveSatVolumeEvent_default_instance_;

inline constexpr CMsgPlayerAnimEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_{0u},
        data_{0},
        player_{16777215u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgPlayerAnimEvent::CMsgPlayerAnimEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgPlayerAnimEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgPlayerAnimEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgPlayerAnimEventDefaultTypeInternal() {}
  union {
    CMsgPlayerAnimEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgPlayerAnimEventDefaultTypeInternal _CMsgPlayerAnimEvent_default_instance_;

inline constexpr CMsgParticleSystemManager_UpdateParticleShouldDraw::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        should_draw_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleShouldDraw::CMsgParticleSystemManager_UpdateParticleShouldDraw(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_UpdateParticleShouldDrawDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleShouldDrawDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_UpdateParticleShouldDrawDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_UpdateParticleShouldDraw _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_UpdateParticleShouldDrawDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleShouldDraw_default_instance_;

inline constexpr CMsgParticleSystemManager_UpdateParticleFrozen::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        set_frozen_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleFrozen::CMsgParticleSystemManager_UpdateParticleFrozen(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_UpdateParticleFrozenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleFrozenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_UpdateParticleFrozenDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_UpdateParticleFrozen _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_UpdateParticleFrozenDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleFrozen_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_ReleaseParticleIndex::CMsgParticleSystemManager_ReleaseParticleIndex(::_pbi::ConstantInitialized) {}
struct CMsgParticleSystemManager_ReleaseParticleIndexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_ReleaseParticleIndexDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_ReleaseParticleIndexDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_ReleaseParticleIndex _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_ReleaseParticleIndexDefaultTypeInternal _CMsgParticleSystemManager_ReleaseParticleIndex_default_instance_;

inline constexpr CMsgParticleSystemManager_DestroyParticleInvolving::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        destroy_immediately_{false},
        entity_handle_{16777215u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_DestroyParticleInvolving::CMsgParticleSystemManager_DestroyParticleInvolving(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_DestroyParticleInvolvingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_DestroyParticleInvolvingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_DestroyParticleInvolvingDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_DestroyParticleInvolving _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_DestroyParticleInvolvingDefaultTypeInternal _CMsgParticleSystemManager_DestroyParticleInvolving_default_instance_;

inline constexpr CMsgParticleSystemManager_DestroyParticle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        destroy_immediately_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_DestroyParticle::CMsgParticleSystemManager_DestroyParticle(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_DestroyParticleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_DestroyParticleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_DestroyParticleDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_DestroyParticle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_DestroyParticleDefaultTypeInternal _CMsgParticleSystemManager_DestroyParticle_default_instance_;

inline constexpr CMsgFireBullets_TracerAssignment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tracer_resource_id_{::uint64_t{0u}},
        bullet_indicies_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgFireBullets_TracerAssignment::CMsgFireBullets_TracerAssignment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgFireBullets_TracerAssignmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgFireBullets_TracerAssignmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgFireBullets_TracerAssignmentDefaultTypeInternal() {}
  union {
    CMsgFireBullets_TracerAssignment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgFireBullets_TracerAssignmentDefaultTypeInternal _CMsgFireBullets_TracerAssignment_default_instance_;

inline constexpr CMsgEnableSatVolumesEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mode_{0u},
        desat_amount_{0},
        sat_tint_{0u},
        desat_tint_{0u},
        outline_color_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgEnableSatVolumesEvent::CMsgEnableSatVolumesEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgEnableSatVolumesEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgEnableSatVolumesEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgEnableSatVolumesEventDefaultTypeInternal() {}
  union {
    CMsgEnableSatVolumesEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgEnableSatVolumesEventDefaultTypeInternal _CMsgEnableSatVolumesEvent_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR CMsgDisableSatVolumesEvent::CMsgDisableSatVolumesEvent(::_pbi::ConstantInitialized) {}
struct CMsgDisableSatVolumesEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgDisableSatVolumesEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgDisableSatVolumesEventDefaultTypeInternal() {}
  union {
    CMsgDisableSatVolumesEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgDisableSatVolumesEventDefaultTypeInternal _CMsgDisableSatVolumesEvent_default_instance_;

inline constexpr CMsgServerRequestedTracer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_{nullptr},
        end_{nullptr},
        dps_{0},
        weaponid_{-1},
        entity_handle_{16777215u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgServerRequestedTracer::CMsgServerRequestedTracer(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgServerRequestedTracerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgServerRequestedTracerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgServerRequestedTracerDefaultTypeInternal() {}
  union {
    CMsgServerRequestedTracer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgServerRequestedTracerDefaultTypeInternal _CMsgServerRequestedTracer_default_instance_;

inline constexpr CMsgPlaceSatVolumeEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        direction_{nullptr},
        radius_{0},
        falloff_distance_{0},
        theta_dot_{0},
        phi_dot_{0},
        attachment_handle_{0u},
        type_{0u},
        volume_id_{0},
        entity_handle_{16777215u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgPlaceSatVolumeEvent::CMsgPlaceSatVolumeEvent(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgPlaceSatVolumeEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgPlaceSatVolumeEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgPlaceSatVolumeEventDefaultTypeInternal() {}
  union {
    CMsgPlaceSatVolumeEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgPlaceSatVolumeEventDefaultTypeInternal _CMsgPlaceSatVolumeEvent_default_instance_;

inline constexpr CMsgParticleSystemManager_UpdateParticleOrient::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        forward_{nullptr},
        left_{nullptr},
        up_{nullptr},
        control_point_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleOrient::CMsgParticleSystemManager_UpdateParticleOrient(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_UpdateParticleOrientDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleOrientDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_UpdateParticleOrientDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_UpdateParticleOrient _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_UpdateParticleOrientDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleOrient_default_instance_;

inline constexpr CMsgParticleSystemManager_UpdateParticleOffset::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        origin_offset_{nullptr},
        control_point_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleOffset::CMsgParticleSystemManager_UpdateParticleOffset(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_UpdateParticleOffsetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleOffsetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_UpdateParticleOffsetDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_UpdateParticleOffset _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_UpdateParticleOffsetDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleOffset_default_instance_;

inline constexpr CMsgParticleSystemManager_UpdateParticleFwd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        forward_{nullptr},
        control_point_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleFwd::CMsgParticleSystemManager_UpdateParticleFwd(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_UpdateParticleFwdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleFwdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_UpdateParticleFwdDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_UpdateParticleFwd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_UpdateParticleFwdDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleFwd_default_instance_;

inline constexpr CMsgParticleSystemManager_UpdateParticleFallback::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        control_point_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleFallback::CMsgParticleSystemManager_UpdateParticleFallback(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_UpdateParticleFallbackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleFallbackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_UpdateParticleFallbackDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_UpdateParticleFallback _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_UpdateParticleFallbackDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleFallback_default_instance_;

inline constexpr CMsgParticleSystemManager_UpdateParticleEnt::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        fallback_position_{nullptr},
        control_point_{0},
        attach_type_{0},
        attachment_{0},
        entity_handle_{16777215u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleEnt::CMsgParticleSystemManager_UpdateParticleEnt(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_UpdateParticleEntDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleEntDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_UpdateParticleEntDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_UpdateParticleEnt _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_UpdateParticleEntDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticleEnt_default_instance_;

inline constexpr CMsgParticleSystemManager_UpdateParticle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        control_point_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticle::CMsgParticleSystemManager_UpdateParticle(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_UpdateParticleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_UpdateParticleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_UpdateParticleDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_UpdateParticle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_UpdateParticleDefaultTypeInternal _CMsgParticleSystemManager_UpdateParticle_default_instance_;

inline constexpr CMsgParticleSystemManager_CreateParticle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        position_{nullptr},
        angles_{nullptr},
        particle_name_index_{::uint64_t{0u}},
        attach_type_{0},
        entity_handle_{16777215u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager_CreateParticle::CMsgParticleSystemManager_CreateParticle(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManager_CreateParticleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManager_CreateParticleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManager_CreateParticleDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager_CreateParticle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManager_CreateParticleDefaultTypeInternal _CMsgParticleSystemManager_CreateParticle_default_instance_;

inline constexpr CMsgFireBullets::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tracer_additional_{},
        origin_{nullptr},
        angles_{nullptr},
        tracer_replacement_{nullptr},
        angles_original_{nullptr},
        seed_{0u},
        penetration_percent_{0},
        spread_{0},
        bullets_override_{0u},
        weapon_subclass_id_{0u},
        shot_number_{0u},
        max_range_{0},
        shooter_entity_{-1},
        ability_{-1},
        fired_from_gun_{true},
        ignore_entity_{-1} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgFireBullets::CMsgFireBullets(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgFireBulletsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgFireBulletsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgFireBulletsDefaultTypeInternal() {}
  union {
    CMsgFireBullets _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgFireBulletsDefaultTypeInternal _CMsgFireBullets_default_instance_;

inline constexpr CMsgBulletImpact::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trace_start_{nullptr},
        impact_origin_{nullptr},
        surface_normal_{nullptr},
        damage_{0u},
        surface_type_{0u},
        impacted_hitbox_{0u},
        weapon_subclass_id_{0u},
        shooter_entindex_{-1},
        ability_entindex_{-1},
        impacted_entindex_{-1} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgBulletImpact::CMsgBulletImpact(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgBulletImpactDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgBulletImpactDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgBulletImpactDefaultTypeInternal() {}
  union {
    CMsgBulletImpact _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgBulletImpactDefaultTypeInternal _CMsgBulletImpact_default_instance_;

inline constexpr CMsgParticleSystemManager::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        create_particle_{nullptr},
        destroy_particle_{nullptr},
        destroy_particle_involving_{nullptr},
        release_particle_index_{nullptr},
        update_particle_{nullptr},
        update_particle_fwd_{nullptr},
        update_particle_orient_{nullptr},
        update_particle_fallback_{nullptr},
        update_particle_offset_{nullptr},
        update_particle_ent_{nullptr},
        update_particle_frozen_{nullptr},
        update_particle_should_draw_{nullptr},
        type_{static_cast< ::PARTICLE_SYSTEM_MANAGER_MESSAGE >(0)},
        index_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR CMsgParticleSystemManager::CMsgParticleSystemManager(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CMsgParticleSystemManagerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CMsgParticleSystemManagerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CMsgParticleSystemManagerDefaultTypeInternal() {}
  union {
    CMsgParticleSystemManager _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CMsgParticleSystemManagerDefaultTypeInternal _CMsgParticleSystemManager_default_instance_;
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_citadel_5fgameevents_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_citadel_5fgameevents_2eproto = nullptr;
const ::uint32_t
    TableStruct_citadel_5fgameevents_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets_TracerAssignment, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets_TracerAssignment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets_TracerAssignment, _impl_.tracer_resource_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets_TracerAssignment, _impl_.bullet_indicies_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.angles_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.seed_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.shooter_entity_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.ability_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.penetration_percent_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.spread_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.fired_from_gun_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.bullets_override_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.tracer_replacement_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.tracer_additional_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.angles_original_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.weapon_subclass_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.shot_number_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.ignore_entity_),
        PROTOBUF_FIELD_OFFSET(::CMsgFireBullets, _impl_.max_range_),
        0,
        1,
        4,
        11,
        12,
        5,
        6,
        13,
        7,
        2,
        ~0u,
        3,
        8,
        9,
        14,
        10,
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.trace_start_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.impact_origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.surface_normal_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.damage_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.surface_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.ability_entindex_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.impacted_entindex_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.impacted_hitbox_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.weapon_subclass_id_),
        PROTOBUF_FIELD_OFFSET(::CMsgBulletImpact, _impl_.shooter_entindex_),
        0,
        1,
        2,
        3,
        4,
        8,
        9,
        5,
        6,
        7,
        PROTOBUF_FIELD_OFFSET(::CMsgPlayerAnimEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlayerAnimEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgPlayerAnimEvent, _impl_.player_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlayerAnimEvent, _impl_.event_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlayerAnimEvent, _impl_.data_),
        2,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_CreateParticle, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_CreateParticle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_CreateParticle, _impl_.particle_name_index_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_CreateParticle, _impl_.attach_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_CreateParticle, _impl_.entity_handle_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_CreateParticle, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_CreateParticle, _impl_.angles_),
        2,
        3,
        4,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_DestroyParticle, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_DestroyParticle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_DestroyParticle, _impl_.destroy_immediately_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_DestroyParticleInvolving, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_DestroyParticleInvolving, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.destroy_immediately_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.entity_handle_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_ReleaseParticleIndex, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticle, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticle, _impl_.control_point_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticle, _impl_.position_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFwd, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFwd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFwd, _impl_.control_point_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFwd, _impl_.forward_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOrient, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOrient, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOrient, _impl_.control_point_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOrient, _impl_.forward_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOrient, _impl_.left_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOrient, _impl_.up_),
        3,
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFallback, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFallback, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFallback, _impl_.control_point_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFallback, _impl_.position_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleEnt, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleEnt, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleEnt, _impl_.control_point_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleEnt, _impl_.entity_handle_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleEnt, _impl_.attach_type_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleEnt, _impl_.attachment_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleEnt, _impl_.fallback_position_),
        1,
        4,
        2,
        3,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOffset, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOffset, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOffset, _impl_.control_point_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleOffset, _impl_.origin_offset_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFrozen, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFrozen, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleFrozen, _impl_.set_frozen_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleShouldDraw, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleShouldDraw, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager_UpdateParticleShouldDraw, _impl_.should_draw_),
        0,
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.create_particle_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.destroy_particle_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.destroy_particle_involving_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.release_particle_index_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.update_particle_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.update_particle_fwd_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.update_particle_orient_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.update_particle_fallback_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.update_particle_offset_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.update_particle_ent_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.update_particle_frozen_),
        PROTOBUF_FIELD_OFFSET(::CMsgParticleSystemManager, _impl_.update_particle_should_draw_),
        12,
        13,
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.x_pos_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.y_pos_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.line_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.r_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.g_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.b_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.a_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.font_name_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.font_size_),
        PROTOBUF_FIELD_OFFSET(::CMsgScreenTextPretty, _impl_.bold_font_),
        2,
        3,
        4,
        0,
        5,
        6,
        7,
        8,
        9,
        1,
        10,
        11,
        PROTOBUF_FIELD_OFFSET(::CMsgServerRequestedTracer, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgServerRequestedTracer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgServerRequestedTracer, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::CMsgServerRequestedTracer, _impl_.end_),
        PROTOBUF_FIELD_OFFSET(::CMsgServerRequestedTracer, _impl_.weaponid_),
        PROTOBUF_FIELD_OFFSET(::CMsgServerRequestedTracer, _impl_.entity_handle_),
        PROTOBUF_FIELD_OFFSET(::CMsgServerRequestedTracer, _impl_.dps_),
        0,
        1,
        3,
        4,
        2,
        PROTOBUF_FIELD_OFFSET(::CMsgEnableSatVolumesEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgEnableSatVolumesEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgEnableSatVolumesEvent, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::CMsgEnableSatVolumesEvent, _impl_.desat_amount_),
        PROTOBUF_FIELD_OFFSET(::CMsgEnableSatVolumesEvent, _impl_.sat_tint_),
        PROTOBUF_FIELD_OFFSET(::CMsgEnableSatVolumesEvent, _impl_.desat_tint_),
        PROTOBUF_FIELD_OFFSET(::CMsgEnableSatVolumesEvent, _impl_.outline_color_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.direction_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.radius_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.falloff_distance_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.theta_dot_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.phi_dot_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.entity_handle_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.attachment_handle_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::CMsgPlaceSatVolumeEvent, _impl_.volume_id_),
        0,
        1,
        2,
        3,
        4,
        5,
        9,
        6,
        7,
        8,
        PROTOBUF_FIELD_OFFSET(::CMsgRemoveSatVolumeEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CMsgRemoveSatVolumeEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CMsgRemoveSatVolumeEvent, _impl_.volume_id_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CMsgDisableSatVolumesEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::CMsgFireBullets_TracerAssignment)},
        {12, 36, -1, sizeof(::CMsgFireBullets)},
        {52, 70, -1, sizeof(::CMsgBulletImpact)},
        {80, 91, -1, sizeof(::CMsgPlayerAnimEvent)},
        {94, 107, -1, sizeof(::CMsgParticleSystemManager_CreateParticle)},
        {112, 121, -1, sizeof(::CMsgParticleSystemManager_DestroyParticle)},
        {122, 132, -1, sizeof(::CMsgParticleSystemManager_DestroyParticleInvolving)},
        {134, -1, -1, sizeof(::CMsgParticleSystemManager_ReleaseParticleIndex)},
        {142, 152, -1, sizeof(::CMsgParticleSystemManager_UpdateParticle)},
        {154, 164, -1, sizeof(::CMsgParticleSystemManager_UpdateParticleFwd)},
        {166, 178, -1, sizeof(::CMsgParticleSystemManager_UpdateParticleOrient)},
        {182, 192, -1, sizeof(::CMsgParticleSystemManager_UpdateParticleFallback)},
        {194, 207, -1, sizeof(::CMsgParticleSystemManager_UpdateParticleEnt)},
        {212, 222, -1, sizeof(::CMsgParticleSystemManager_UpdateParticleOffset)},
        {224, 233, -1, sizeof(::CMsgParticleSystemManager_UpdateParticleFrozen)},
        {234, 243, -1, sizeof(::CMsgParticleSystemManager_UpdateParticleShouldDraw)},
        {244, 266, -1, sizeof(::CMsgParticleSystemManager)},
        {280, 300, -1, sizeof(::CMsgScreenTextPretty)},
        {312, 325, -1, sizeof(::CMsgServerRequestedTracer)},
        {330, 343, -1, sizeof(::CMsgEnableSatVolumesEvent)},
        {348, 366, -1, sizeof(::CMsgPlaceSatVolumeEvent)},
        {376, 385, -1, sizeof(::CMsgRemoveSatVolumeEvent)},
        {386, -1, -1, sizeof(::CMsgDisableSatVolumesEvent)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_CMsgFireBullets_TracerAssignment_default_instance_._instance,
    &::_CMsgFireBullets_default_instance_._instance,
    &::_CMsgBulletImpact_default_instance_._instance,
    &::_CMsgPlayerAnimEvent_default_instance_._instance,
    &::_CMsgParticleSystemManager_CreateParticle_default_instance_._instance,
    &::_CMsgParticleSystemManager_DestroyParticle_default_instance_._instance,
    &::_CMsgParticleSystemManager_DestroyParticleInvolving_default_instance_._instance,
    &::_CMsgParticleSystemManager_ReleaseParticleIndex_default_instance_._instance,
    &::_CMsgParticleSystemManager_UpdateParticle_default_instance_._instance,
    &::_CMsgParticleSystemManager_UpdateParticleFwd_default_instance_._instance,
    &::_CMsgParticleSystemManager_UpdateParticleOrient_default_instance_._instance,
    &::_CMsgParticleSystemManager_UpdateParticleFallback_default_instance_._instance,
    &::_CMsgParticleSystemManager_UpdateParticleEnt_default_instance_._instance,
    &::_CMsgParticleSystemManager_UpdateParticleOffset_default_instance_._instance,
    &::_CMsgParticleSystemManager_UpdateParticleFrozen_default_instance_._instance,
    &::_CMsgParticleSystemManager_UpdateParticleShouldDraw_default_instance_._instance,
    &::_CMsgParticleSystemManager_default_instance_._instance,
    &::_CMsgScreenTextPretty_default_instance_._instance,
    &::_CMsgServerRequestedTracer_default_instance_._instance,
    &::_CMsgEnableSatVolumesEvent_default_instance_._instance,
    &::_CMsgPlaceSatVolumeEvent_default_instance_._instance,
    &::_CMsgRemoveSatVolumeEvent_default_instance_._instance,
    &::_CMsgDisableSatVolumesEvent_default_instance_._instance,
};
const char descriptor_table_protodef_citadel_5fgameevents_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\030citadel_gameevents.proto\032 google/proto"
    "buf/descriptor.proto\032\026networkbasetypes.p"
    "roto\"\272\004\n\017CMsgFireBullets\022\033\n\006origin\030\001 \001(\013"
    "2\013.CMsgVector\022\033\n\006angles\030\002 \001(\0132\013.CMsgQAng"
    "le\022\014\n\004seed\030\004 \001(\r\022\032\n\016shooter_entity\030\005 \001(\005"
    ":\002-1\022\023\n\007ability\030\007 \001(\005:\002-1\022\033\n\023penetration"
    "_percent\030\010 \001(\002\022\016\n\006spread\030\t \001(\002\022\034\n\016fired_"
    "from_gun\030\n \001(\010:\004true\022\030\n\020bullets_override"
    "\030\013 \001(\r\022=\n\022tracer_replacement\030\014 \001(\0132!.CMs"
    "gFireBullets.TracerAssignment\022<\n\021tracer_"
    "additional\030\r \003(\0132!.CMsgFireBullets.Trace"
    "rAssignment\022$\n\017angles_original\030\016 \001(\0132\013.C"
    "MsgQAngle\022\032\n\022weapon_subclass_id\030\017 \001(\r\022\023\n"
    "\013shot_number\030\020 \001(\r\022\031\n\rignore_entity\030\021 \001("
    "\005:\002-1\022\021\n\tmax_range\030\022 \001(\002\032G\n\020TracerAssign"
    "ment\022\032\n\022tracer_resource_id\030\001 \001(\004\022\027\n\017bull"
    "et_indicies\030\002 \001(\r\"\263\002\n\020CMsgBulletImpact\022 "
    "\n\013trace_start\030\001 \001(\0132\013.CMsgVector\022\"\n\rimpa"
    "ct_origin\030\002 \001(\0132\013.CMsgVector\022#\n\016surface_"
    "normal\030\003 \001(\0132\013.CMsgVector\022\016\n\006damage\030\004 \001("
    "\r\022\024\n\014surface_type\030\005 \001(\r\022\034\n\020ability_entin"
    "dex\030\007 \001(\005:\002-1\022\035\n\021impacted_entindex\030\010 \001(\005"
    ":\002-1\022\027\n\017impacted_hitbox\030\t \001(\r\022\032\n\022weapon_"
    "subclass_id\030\n \001(\r\022\034\n\020shooter_entindex\030\013 "
    "\001(\005:\002-1\"L\n\023CMsgPlayerAnimEvent\022\030\n\006player"
    "\030\001 \001(\007:\01016777215\022\r\n\005event\030\002 \001(\r\022\014\n\004data\030"
    "\003 \001(\005\"\246\020\n\031CMsgParticleSystemManager\022T\n\004t"
    "ype\030\001 \002(\0162 .PARTICLE_SYSTEM_MANAGER_MESS"
    "AGE:$PARTICLE_SYSTEM_MANAGER_EVENT_CREAT"
    "E\022\r\n\005index\030\002 \002(\r\022B\n\017create_particle\030\003 \001("
    "\0132).CMsgParticleSystemManager.CreatePart"
    "icle\022D\n\020destroy_particle\030\004 \001(\0132*.CMsgPar"
    "ticleSystemManager.DestroyParticle\022W\n\032de"
    "stroy_particle_involving\030\005 \001(\01323.CMsgPar"
    "ticleSystemManager.DestroyParticleInvolv"
    "ing\022O\n\026release_particle_index\030\006 \001(\0132/.CM"
    "sgParticleSystemManager.ReleaseParticleI"
    "ndex\022B\n\017update_particle\030\007 \001(\0132).CMsgPart"
    "icleSystemManager.UpdateParticle\022I\n\023upda"
    "te_particle_fwd\030\010 \001(\0132,.CMsgParticleSyst"
    "emManager.UpdateParticleFwd\022O\n\026update_pa"
    "rticle_orient\030\t \001(\0132/.CMsgParticleSystem"
    "Manager.UpdateParticleOrient\022S\n\030update_p"
    "article_fallback\030\n \001(\01321.CMsgParticleSys"
    "temManager.UpdateParticleFallback\022O\n\026upd"
    "ate_particle_offset\030\013 \001(\0132/.CMsgParticle"
    "SystemManager.UpdateParticleOffset\022I\n\023up"
    "date_particle_ent\030\014 \001(\0132,.CMsgParticleSy"
    "stemManager.UpdateParticleEnt\022O\n\026update_"
    "particle_frozen\030\r \001(\0132/.CMsgParticleSyst"
    "emManager.UpdateParticleFrozen\022X\n\033update"
    "_particle_should_draw\030\016 \001(\01323.CMsgPartic"
    "leSystemManager.UpdateParticleShouldDraw"
    "\032\237\001\n\016CreateParticle\022\033\n\023particle_name_ind"
    "ex\030\001 \001(\006\022\023\n\013attach_type\030\002 \001(\005\022\037\n\rentity_"
    "handle\030\003 \001(\r:\01016777215\022\035\n\010position\030\004 \001(\013"
    "2\013.CMsgVector\022\033\n\006angles\030\005 \001(\0132\013.CMsgQAng"
    "le\032.\n\017DestroyParticle\022\033\n\023destroy_immedia"
    "tely\030\001 \001(\010\032X\n\030DestroyParticleInvolving\022\033"
    "\n\023destroy_immediately\030\001 \001(\010\022\037\n\rentity_ha"
    "ndle\030\003 \001(\r:\01016777215\032\026\n\024ReleaseParticleI"
    "ndex\032F\n\016UpdateParticle\022\025\n\rcontrol_point\030"
    "\001 \001(\005\022\035\n\010position\030\002 \001(\0132\013.CMsgVector\032H\n\021"
    "UpdateParticleFwd\022\025\n\rcontrol_point\030\001 \001(\005"
    "\022\034\n\007forward\030\002 \001(\0132\013.CMsgVector\032\177\n\024Update"
    "ParticleOrient\022\025\n\rcontrol_point\030\001 \001(\005\022\034\n"
    "\007forward\030\002 \001(\0132\013.CMsgVector\022\031\n\004left\030\003 \001("
    "\0132\013.CMsgVector\022\027\n\002up\030\004 \001(\0132\013.CMsgVector\032"
    "N\n\026UpdateParticleFallback\022\025\n\rcontrol_poi"
    "nt\030\001 \001(\005\022\035\n\010position\030\002 \001(\0132\013.CMsgVector\032"
    "\234\001\n\021UpdateParticleEnt\022\025\n\rcontrol_point\030\001"
    " \001(\005\022\037\n\rentity_handle\030\002 \001(\r:\01016777215\022\023\n"
    "\013attach_type\030\003 \001(\005\022\022\n\nattachment\030\004 \001(\005\022&"
    "\n\021fallback_position\030\005 \001(\0132\013.CMsgVector\032Q"
    "\n\024UpdateParticleOffset\022\025\n\rcontrol_point\030"
    "\001 \001(\005\022\"\n\rorigin_offset\030\002 \001(\0132\013.CMsgVecto"
    "r\032*\n\024UpdateParticleFrozen\022\022\n\nset_frozen\030"
    "\001 \001(\010\032/\n\030UpdateParticleShouldDraw\022\023\n\013sho"
    "uld_draw\030\001 \001(\010\"\307\001\n\024CMsgScreenTextPretty\022"
    "\r\n\005x_pos\030\001 \001(\002\022\r\n\005y_pos\030\002 \001(\002\022\014\n\004line\030\003 "
    "\001(\005\022\014\n\004text\030\004 \001(\t\022\t\n\001r\030\005 \001(\005\022\t\n\001g\030\006 \001(\005\022"
    "\t\n\001b\030\007 \001(\005\022\t\n\001a\030\010 \001(\005\022\020\n\010duration\030\t \001(\002\022"
    "\021\n\tfont_name\030\n \001(\t\022\021\n\tfont_size\030\013 \001(\005\022\021\n"
    "\tbold_font\030\014 \001(\010\"\226\001\n\031CMsgServerRequested"
    "Tracer\022\033\n\006origin\030\001 \001(\0132\013.CMsgVector\022\030\n\003e"
    "nd\030\002 \001(\0132\013.CMsgVector\022\024\n\010weaponid\030\003 \001(\005:"
    "\002-1\022\037\n\rentity_handle\030\004 \001(\r:\01016777215\022\013\n\003"
    "dps\030\005 \001(\002\"|\n\031CMsgEnableSatVolumesEvent\022\014"
    "\n\004mode\030\001 \001(\r\022\024\n\014desat_amount\030\002 \001(\002\022\020\n\010sa"
    "t_tint\030\003 \001(\007\022\022\n\ndesat_tint\030\004 \001(\007\022\025\n\routl"
    "ine_color\030\005 \001(\007\"\203\002\n\027CMsgPlaceSatVolumeEv"
    "ent\022\035\n\010position\030\001 \001(\0132\013.CMsgVector\022\036\n\tdi"
    "rection\030\002 \001(\0132\013.CMsgVector\022\016\n\006radius\030\003 \001"
    "(\002\022\030\n\020falloff_distance\030\004 \001(\002\022\021\n\ttheta_do"
    "t\030\005 \001(\002\022\017\n\007phi_dot\030\006 \001(\002\022\037\n\rentity_handl"
    "e\030\007 \001(\r:\01016777215\022\031\n\021attachment_handle\030\010"
    " \001(\r\022\014\n\004type\030\t \001(\r\022\021\n\tvolume_id\030\n \001(\005\"-\n"
    "\030CMsgRemoveSatVolumeEvent\022\021\n\tvolume_id\030\001"
    " \001(\005\"\034\n\032CMsgDisableSatVolumesEvent*\252\002\n\022E"
    "CitadelGameEvents\022\023\n\016GE_FireBullets\020\302\003\022\027"
    "\n\022GE_PlayerAnimEvent\020\303\003\022\035\n\030GE_ParticleSy"
    "stemManager\020\312\003\022\030\n\023GE_ScreenTextPretty\020\313\003"
    "\022\035\n\030GE_ServerRequestedTracer\020\314\003\022\024\n\017GE_Bu"
    "lletImpact\020\315\003\022\035\n\030GE_EnableSatVolumesEven"
    "t\020\316\003\022\033\n\026GE_PlaceSatVolumeEvent\020\317\003\022\036\n\031GE_"
    "DisableSatVolumesEvent\020\320\003\022\034\n\027GE_RemoveSa"
    "tVolumeEvent\020\321\003*\341\004\n\037PARTICLE_SYSTEM_MANA"
    "GER_MESSAGE\022(\n$PARTICLE_SYSTEM_MANAGER_E"
    "VENT_CREATE\020\000\022)\n%PARTICLE_SYSTEM_MANAGER"
    "_EVENT_DESTROY\020\001\0223\n/PARTICLE_SYSTEM_MANA"
    "GER_EVENT_DESTROY_INVOLVING\020\002\022)\n%PARTICL"
    "E_SYSTEM_MANAGER_EVENT_RELEASE\020\003\022(\n$PART"
    "ICLE_SYSTEM_MANAGER_EVENT_UPDATE\020\004\0220\n,PA"
    "RTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FORWA"
    "RD\020\005\0224\n0PARTICLE_SYSTEM_MANAGER_EVENT_UP"
    "DATE_ORIENTATION\020\006\0221\n-PARTICLE_SYSTEM_MA"
    "NAGER_EVENT_UPDATE_FALLBACK\020\007\022,\n(PARTICL"
    "E_SYSTEM_MANAGER_EVENT_UPDATE_ENT\020\010\022/\n+P"
    "ARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_OFFS"
    "ET\020\t\022/\n+PARTICLE_SYSTEM_MANAGER_EVENT_UP"
    "DATE_FROZEN\020\n\0224\n0PARTICLE_SYSTEM_MANAGER"
    "_EVENT_UPDATE_SHOULD_DRAW\020\013"
};
static const ::_pbi::DescriptorTable* const descriptor_table_citadel_5fgameevents_2eproto_deps[2] =
    {
        &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
        &::descriptor_table_networkbasetypes_2eproto,
};
static ::absl::once_flag descriptor_table_citadel_5fgameevents_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_citadel_5fgameevents_2eproto = {
    false,
    false,
    4867,
    descriptor_table_protodef_citadel_5fgameevents_2eproto,
    "citadel_gameevents.proto",
    &descriptor_table_citadel_5fgameevents_2eproto_once,
    descriptor_table_citadel_5fgameevents_2eproto_deps,
    2,
    23,
    schemas,
    file_default_instances,
    TableStruct_citadel_5fgameevents_2eproto::offsets,
    file_level_enum_descriptors_citadel_5fgameevents_2eproto,
    file_level_service_descriptors_citadel_5fgameevents_2eproto,
};
const ::google::protobuf::EnumDescriptor* ECitadelGameEvents_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_citadel_5fgameevents_2eproto);
  return file_level_enum_descriptors_citadel_5fgameevents_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ECitadelGameEvents_internal_data_[] = {
    131522u, 32u, 16320u, };
bool ECitadelGameEvents_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, ECitadelGameEvents_internal_data_);
}
const ::google::protobuf::EnumDescriptor* PARTICLE_SYSTEM_MANAGER_MESSAGE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_citadel_5fgameevents_2eproto);
  return file_level_enum_descriptors_citadel_5fgameevents_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t PARTICLE_SYSTEM_MANAGER_MESSAGE_internal_data_[] = {
    786432u, 0u, };
bool PARTICLE_SYSTEM_MANAGER_MESSAGE_IsValid(int value) {
  return 0 <= value && value <= 11;
}
// ===================================================================

class CMsgFireBullets_TracerAssignment::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgFireBullets_TracerAssignment>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgFireBullets_TracerAssignment, _impl_._has_bits_);
};

CMsgFireBullets_TracerAssignment::CMsgFireBullets_TracerAssignment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgFireBullets.TracerAssignment)
}
CMsgFireBullets_TracerAssignment::CMsgFireBullets_TracerAssignment(
    ::google::protobuf::Arena* arena, const CMsgFireBullets_TracerAssignment& from)
    : CMsgFireBullets_TracerAssignment(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CMsgFireBullets_TracerAssignment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgFireBullets_TracerAssignment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tracer_resource_id_),
           0,
           offsetof(Impl_, bullet_indicies_) -
               offsetof(Impl_, tracer_resource_id_) +
               sizeof(Impl_::bullet_indicies_));
}
CMsgFireBullets_TracerAssignment::~CMsgFireBullets_TracerAssignment() {
  // @@protoc_insertion_point(destructor:CMsgFireBullets.TracerAssignment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgFireBullets_TracerAssignment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgFireBullets_TracerAssignment::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgFireBullets_TracerAssignment, _impl_._cached_size_),
              false,
          },
          &CMsgFireBullets_TracerAssignment::MergeImpl,
          &CMsgFireBullets_TracerAssignment::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CMsgFireBullets_TracerAssignment::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgFireBullets_TracerAssignment, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgFireBullets_TracerAssignment_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgFireBullets_TracerAssignment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional uint32 bullet_indicies = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgFireBullets_TracerAssignment, _impl_.bullet_indicies_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets_TracerAssignment, _impl_.bullet_indicies_)}},
    // optional uint64 tracer_resource_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CMsgFireBullets_TracerAssignment, _impl_.tracer_resource_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets_TracerAssignment, _impl_.tracer_resource_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint64 tracer_resource_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets_TracerAssignment, _impl_.tracer_resource_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // optional uint32 bullet_indicies = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets_TracerAssignment, _impl_.bullet_indicies_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CMsgFireBullets_TracerAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFireBullets.TracerAssignment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.tracer_resource_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bullet_indicies_) -
        reinterpret_cast<char*>(&_impl_.tracer_resource_id_)) + sizeof(_impl_.bullet_indicies_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgFireBullets_TracerAssignment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFireBullets.TracerAssignment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint64 tracer_resource_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_tracer_resource_id(), target);
  }

  // optional uint32 bullet_indicies = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_bullet_indicies(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFireBullets.TracerAssignment)
  return target;
}

::size_t CMsgFireBullets_TracerAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFireBullets.TracerAssignment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 tracer_resource_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
          this->_internal_tracer_resource_id());
    }

    // optional uint32 bullet_indicies = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_bullet_indicies());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgFireBullets_TracerAssignment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgFireBullets_TracerAssignment*>(&to_msg);
  auto& from = static_cast<const CMsgFireBullets_TracerAssignment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgFireBullets.TracerAssignment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.tracer_resource_id_ = from._impl_.tracer_resource_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.bullet_indicies_ = from._impl_.bullet_indicies_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgFireBullets_TracerAssignment::CopyFrom(const CMsgFireBullets_TracerAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFireBullets.TracerAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgFireBullets_TracerAssignment::InternalSwap(CMsgFireBullets_TracerAssignment* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgFireBullets_TracerAssignment, _impl_.bullet_indicies_)
      + sizeof(CMsgFireBullets_TracerAssignment::_impl_.bullet_indicies_)
      - PROTOBUF_FIELD_OFFSET(CMsgFireBullets_TracerAssignment, _impl_.tracer_resource_id_)>(
          reinterpret_cast<char*>(&_impl_.tracer_resource_id_),
          reinterpret_cast<char*>(&other->_impl_.tracer_resource_id_));
}

::google::protobuf::Metadata CMsgFireBullets_TracerAssignment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgFireBullets::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgFireBullets>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_._has_bits_);
};

void CMsgFireBullets::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgFireBullets::clear_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ != nullptr) _impl_.angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgFireBullets::clear_angles_original() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_original_ != nullptr) _impl_.angles_original_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
CMsgFireBullets::CMsgFireBullets(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgFireBullets)
}
inline PROTOBUF_NDEBUG_INLINE CMsgFireBullets::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgFireBullets& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tracer_additional_{visibility, arena, from.tracer_additional_} {}

CMsgFireBullets::CMsgFireBullets(
    ::google::protobuf::Arena* arena,
    const CMsgFireBullets& from)
    : ::google::protobuf::Message(arena) {
  CMsgFireBullets* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.origin_)
                        : nullptr;
  _impl_.angles_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::CMsgQAngle>(
                              arena, *from._impl_.angles_)
                        : nullptr;
  _impl_.tracer_replacement_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::CMsgFireBullets_TracerAssignment>(
                              arena, *from._impl_.tracer_replacement_)
                        : nullptr;
  _impl_.angles_original_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::CMsgQAngle>(
                              arena, *from._impl_.angles_original_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seed_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, seed_),
           offsetof(Impl_, ignore_entity_) -
               offsetof(Impl_, seed_) +
               sizeof(Impl_::ignore_entity_));

  // @@protoc_insertion_point(copy_constructor:CMsgFireBullets)
}
inline PROTOBUF_NDEBUG_INLINE CMsgFireBullets::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tracer_additional_{visibility, arena},
        shooter_entity_{-1},
        ability_{-1},
        fired_from_gun_{true},
        ignore_entity_{-1} {}

inline void CMsgFireBullets::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, max_range_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::max_range_));
}
CMsgFireBullets::~CMsgFireBullets() {
  // @@protoc_insertion_point(destructor:CMsgFireBullets)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgFireBullets::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.origin_;
  delete _impl_.angles_;
  delete _impl_.tracer_replacement_;
  delete _impl_.angles_original_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgFireBullets::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_._cached_size_),
              false,
          },
          &CMsgFireBullets::MergeImpl,
          &CMsgFireBullets::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 16, 5, 0, 2> CMsgFireBullets::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_._has_bits_),
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705188,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgFireBullets_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgFireBullets>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.origin_)}},
    // optional .CMsgQAngle angles = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.angles_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 seed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgFireBullets, _impl_.seed_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.seed_)}},
    // optional int32 shooter_entity = 5 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgFireBullets, _impl_.shooter_entity_), 11>(),
     {40, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.shooter_entity_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 ability = 7 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgFireBullets, _impl_.ability_), 12>(),
     {56, 12, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.ability_)}},
    // optional float penetration_percent = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.penetration_percent_)}},
    // optional float spread = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.spread_)}},
    // optional bool fired_from_gun = 10 [default = true];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgFireBullets, _impl_.fired_from_gun_), 13>(),
     {80, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.fired_from_gun_)}},
    // optional uint32 bullets_override = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgFireBullets, _impl_.bullets_override_), 7>(),
     {88, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.bullets_override_)}},
    // optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.tracer_replacement_)}},
    // repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 3, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.tracer_additional_)}},
    // optional .CMsgQAngle angles_original = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 3, 4, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.angles_original_)}},
    // optional uint32 weapon_subclass_id = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgFireBullets, _impl_.weapon_subclass_id_), 8>(),
     {120, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.weapon_subclass_id_)}},
    // optional uint32 shot_number = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.shot_number_)}},
    // optional int32 ignore_entity = 17 [default = -1];
    {::_pbi::TcParser::FastV32S2,
     {392, 14, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.ignore_entity_)}},
    // optional float max_range = 18;
    {::_pbi::TcParser::FastF32S2,
     {405, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.max_range_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle angles = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.angles_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 seed = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.seed_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 shooter_entity = 5 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.shooter_entity_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 ability = 7 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.ability_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float penetration_percent = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.penetration_percent_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float spread = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.spread_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool fired_from_gun = 10 [default = true];
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.fired_from_gun_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 bullets_override = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.bullets_override_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.tracer_replacement_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.tracer_additional_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle angles_original = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.angles_original_), _Internal::kHasBitsOffset + 3, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 weapon_subclass_id = 15;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.weapon_subclass_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 shot_number = 16;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.shot_number_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 ignore_entity = 17 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.ignore_entity_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float max_range = 18;
    {PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.max_range_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
    {::_pbi::TcParser::GetTable<::CMsgFireBullets_TracerAssignment>()},
    {::_pbi::TcParser::GetTable<::CMsgFireBullets_TracerAssignment>()},
    {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgFireBullets::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFireBullets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tracer_additional_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.angles_ != nullptr);
      _impl_.angles_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.tracer_replacement_ != nullptr);
      _impl_.tracer_replacement_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.angles_original_ != nullptr);
      _impl_.angles_original_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&_impl_.seed_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bullets_override_) -
        reinterpret_cast<char*>(&_impl_.seed_)) + sizeof(_impl_.bullets_override_));
  }
  if (cached_has_bits & 0x00007f00u) {
    ::memset(&_impl_.weapon_subclass_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_range_) -
        reinterpret_cast<char*>(&_impl_.weapon_subclass_id_)) + sizeof(_impl_.max_range_));
    _impl_.shooter_entity_ = -1;
    _impl_.ability_ = -1;
    _impl_.fired_from_gun_ = true;
    _impl_.ignore_entity_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgFireBullets::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFireBullets)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.origin_, _impl_.origin_->GetCachedSize(), target, stream);
  }

  // optional .CMsgQAngle angles = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.angles_, _impl_.angles_->GetCachedSize(), target, stream);
  }

  // optional uint32 seed = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_seed(), target);
  }

  // optional int32 shooter_entity = 5 [default = -1];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_shooter_entity(), target);
  }

  // optional int32 ability = 7 [default = -1];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_ability(), target);
  }

  // optional float penetration_percent = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_penetration_percent(), target);
  }

  // optional float spread = 9;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this->_internal_spread(), target);
  }

  // optional bool fired_from_gun = 10 [default = true];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        10, this->_internal_fired_from_gun(), target);
  }

  // optional uint32 bullets_override = 11;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        11, this->_internal_bullets_override(), target);
  }

  // optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *_impl_.tracer_replacement_, _impl_.tracer_replacement_->GetCachedSize(), target, stream);
  }

  // repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_tracer_additional_size());
       i < n; i++) {
    const auto& repfield = this->_internal_tracer_additional().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // optional .CMsgQAngle angles_original = 14;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, *_impl_.angles_original_, _impl_.angles_original_->GetCachedSize(), target, stream);
  }

  // optional uint32 weapon_subclass_id = 15;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        15, this->_internal_weapon_subclass_id(), target);
  }

  // optional uint32 shot_number = 16;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        16, this->_internal_shot_number(), target);
  }

  // optional int32 ignore_entity = 17 [default = -1];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_ignore_entity(), target);
  }

  // optional float max_range = 18;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        18, this->_internal_max_range(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFireBullets)
  return target;
}

::size_t CMsgFireBullets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFireBullets)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;
  total_size += 1UL * this->_internal_tracer_additional_size();
  for (const auto& msg : this->_internal_tracer_additional()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .CMsgVector origin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.origin_);
    }

    // optional .CMsgQAngle angles = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.angles_);
    }

    // optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.tracer_replacement_);
    }

    // optional .CMsgQAngle angles_original = 14;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.angles_original_);
    }

    // optional uint32 seed = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_seed());
    }

    // optional float penetration_percent = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // optional float spread = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size += 5;
    }

    // optional uint32 bullets_override = 11;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_bullets_override());
    }

  }
  if (cached_has_bits & 0x00007f00u) {
    // optional uint32 weapon_subclass_id = 15;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_weapon_subclass_id());
    }

    // optional uint32 shot_number = 16;
    if (cached_has_bits & 0x00000200u) {
      total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                      this->_internal_shot_number());
    }

    // optional float max_range = 18;
    if (cached_has_bits & 0x00000400u) {
      total_size += 6;
    }

    // optional int32 shooter_entity = 5 [default = -1];
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_shooter_entity());
    }

    // optional int32 ability = 7 [default = -1];
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ability());
    }

    // optional bool fired_from_gun = 10 [default = true];
    if (cached_has_bits & 0x00002000u) {
      total_size += 2;
    }

    // optional int32 ignore_entity = 17 [default = -1];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_ignore_entity());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgFireBullets::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgFireBullets*>(&to_msg);
  auto& from = static_cast<const CMsgFireBullets&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgFireBullets)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tracer_additional()->MergeFrom(
      from._internal_tracer_additional());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.angles_ != nullptr);
      if (_this->_impl_.angles_ == nullptr) {
        _this->_impl_.angles_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgQAngle>(arena, *from._impl_.angles_);
      } else {
        _this->_impl_.angles_->MergeFrom(*from._impl_.angles_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.tracer_replacement_ != nullptr);
      if (_this->_impl_.tracer_replacement_ == nullptr) {
        _this->_impl_.tracer_replacement_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgFireBullets_TracerAssignment>(arena, *from._impl_.tracer_replacement_);
      } else {
        _this->_impl_.tracer_replacement_->MergeFrom(*from._impl_.tracer_replacement_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.angles_original_ != nullptr);
      if (_this->_impl_.angles_original_ == nullptr) {
        _this->_impl_.angles_original_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgQAngle>(arena, *from._impl_.angles_original_);
      } else {
        _this->_impl_.angles_original_->MergeFrom(*from._impl_.angles_original_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.seed_ = from._impl_.seed_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.penetration_percent_ = from._impl_.penetration_percent_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.spread_ = from._impl_.spread_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.bullets_override_ = from._impl_.bullets_override_;
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.weapon_subclass_id_ = from._impl_.weapon_subclass_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.shot_number_ = from._impl_.shot_number_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.max_range_ = from._impl_.max_range_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.shooter_entity_ = from._impl_.shooter_entity_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.ability_ = from._impl_.ability_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.fired_from_gun_ = from._impl_.fired_from_gun_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.ignore_entity_ = from._impl_.ignore_entity_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgFireBullets::CopyFrom(const CMsgFireBullets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFireBullets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgFireBullets::InternalSwap(CMsgFireBullets* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tracer_additional_.InternalSwap(&other->_impl_.tracer_additional_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.ignore_entity_)
      + sizeof(CMsgFireBullets::_impl_.ignore_entity_)
      - PROTOBUF_FIELD_OFFSET(CMsgFireBullets, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgFireBullets::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgBulletImpact::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgBulletImpact>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_._has_bits_);
};

void CMsgBulletImpact::clear_trace_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trace_start_ != nullptr) _impl_.trace_start_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgBulletImpact::clear_impact_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.impact_origin_ != nullptr) _impl_.impact_origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgBulletImpact::clear_surface_normal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.surface_normal_ != nullptr) _impl_.surface_normal_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CMsgBulletImpact::CMsgBulletImpact(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgBulletImpact)
}
inline PROTOBUF_NDEBUG_INLINE CMsgBulletImpact::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgBulletImpact& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgBulletImpact::CMsgBulletImpact(
    ::google::protobuf::Arena* arena,
    const CMsgBulletImpact& from)
    : ::google::protobuf::Message(arena) {
  CMsgBulletImpact* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trace_start_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.trace_start_)
                        : nullptr;
  _impl_.impact_origin_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.impact_origin_)
                        : nullptr;
  _impl_.surface_normal_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.surface_normal_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, damage_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, damage_),
           offsetof(Impl_, impacted_entindex_) -
               offsetof(Impl_, damage_) +
               sizeof(Impl_::impacted_entindex_));

  // @@protoc_insertion_point(copy_constructor:CMsgBulletImpact)
}
inline PROTOBUF_NDEBUG_INLINE CMsgBulletImpact::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        shooter_entindex_{-1},
        ability_entindex_{-1},
        impacted_entindex_{-1} {}

inline void CMsgBulletImpact::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trace_start_),
           0,
           offsetof(Impl_, weapon_subclass_id_) -
               offsetof(Impl_, trace_start_) +
               sizeof(Impl_::weapon_subclass_id_));
}
CMsgBulletImpact::~CMsgBulletImpact() {
  // @@protoc_insertion_point(destructor:CMsgBulletImpact)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgBulletImpact::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.trace_start_;
  delete _impl_.impact_origin_;
  delete _impl_.surface_normal_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgBulletImpact::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_._cached_size_),
              false,
          },
          &CMsgBulletImpact::MergeImpl,
          &CMsgBulletImpact::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 3, 0, 2> CMsgBulletImpact::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgBulletImpact_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgBulletImpact>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector trace_start = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.trace_start_)}},
    // optional .CMsgVector impact_origin = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.impact_origin_)}},
    // optional .CMsgVector surface_normal = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.surface_normal_)}},
    // optional uint32 damage = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgBulletImpact, _impl_.damage_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.damage_)}},
    // optional uint32 surface_type = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgBulletImpact, _impl_.surface_type_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.surface_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 ability_entindex = 7 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgBulletImpact, _impl_.ability_entindex_), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.ability_entindex_)}},
    // optional int32 impacted_entindex = 8 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgBulletImpact, _impl_.impacted_entindex_), 9>(),
     {64, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.impacted_entindex_)}},
    // optional uint32 impacted_hitbox = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgBulletImpact, _impl_.impacted_hitbox_), 5>(),
     {72, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.impacted_hitbox_)}},
    // optional uint32 weapon_subclass_id = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgBulletImpact, _impl_.weapon_subclass_id_), 6>(),
     {80, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.weapon_subclass_id_)}},
    // optional int32 shooter_entindex = 11 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgBulletImpact, _impl_.shooter_entindex_), 7>(),
     {88, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.shooter_entindex_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector trace_start = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.trace_start_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector impact_origin = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.impact_origin_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector surface_normal = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.surface_normal_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 damage = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.damage_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 surface_type = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.surface_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 ability_entindex = 7 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.ability_entindex_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 impacted_entindex = 8 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.impacted_entindex_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 impacted_hitbox = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.impacted_hitbox_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 weapon_subclass_id = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.weapon_subclass_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 shooter_entindex = 11 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.shooter_entindex_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgBulletImpact::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgBulletImpact)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.trace_start_ != nullptr);
      _impl_.trace_start_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.impact_origin_ != nullptr);
      _impl_.impact_origin_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.surface_normal_ != nullptr);
      _impl_.surface_normal_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.damage_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.weapon_subclass_id_) -
        reinterpret_cast<char*>(&_impl_.damage_)) + sizeof(_impl_.weapon_subclass_id_));
    _impl_.shooter_entindex_ = -1;
  }
  if (cached_has_bits & 0x00000300u) {
    _impl_.ability_entindex_ = -1;
    _impl_.impacted_entindex_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgBulletImpact::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgBulletImpact)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgVector trace_start = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.trace_start_, _impl_.trace_start_->GetCachedSize(), target, stream);
  }

  // optional .CMsgVector impact_origin = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.impact_origin_, _impl_.impact_origin_->GetCachedSize(), target, stream);
  }

  // optional .CMsgVector surface_normal = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.surface_normal_, _impl_.surface_normal_->GetCachedSize(), target, stream);
  }

  // optional uint32 damage = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_damage(), target);
  }

  // optional uint32 surface_type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_surface_type(), target);
  }

  // optional int32 ability_entindex = 7 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_ability_entindex(), target);
  }

  // optional int32 impacted_entindex = 8 [default = -1];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_impacted_entindex(), target);
  }

  // optional uint32 impacted_hitbox = 9;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_impacted_hitbox(), target);
  }

  // optional uint32 weapon_subclass_id = 10;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this->_internal_weapon_subclass_id(), target);
  }

  // optional int32 shooter_entindex = 11 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_shooter_entindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgBulletImpact)
  return target;
}

::size_t CMsgBulletImpact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgBulletImpact)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .CMsgVector trace_start = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.trace_start_);
    }

    // optional .CMsgVector impact_origin = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.impact_origin_);
    }

    // optional .CMsgVector surface_normal = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.surface_normal_);
    }

    // optional uint32 damage = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_damage());
    }

    // optional uint32 surface_type = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_surface_type());
    }

    // optional uint32 impacted_hitbox = 9;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_impacted_hitbox());
    }

    // optional uint32 weapon_subclass_id = 10;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_weapon_subclass_id());
    }

    // optional int32 shooter_entindex = 11 [default = -1];
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_shooter_entindex());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int32 ability_entindex = 7 [default = -1];
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ability_entindex());
    }

    // optional int32 impacted_entindex = 8 [default = -1];
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_impacted_entindex());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgBulletImpact::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgBulletImpact*>(&to_msg);
  auto& from = static_cast<const CMsgBulletImpact&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgBulletImpact)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.trace_start_ != nullptr);
      if (_this->_impl_.trace_start_ == nullptr) {
        _this->_impl_.trace_start_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.trace_start_);
      } else {
        _this->_impl_.trace_start_->MergeFrom(*from._impl_.trace_start_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.impact_origin_ != nullptr);
      if (_this->_impl_.impact_origin_ == nullptr) {
        _this->_impl_.impact_origin_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.impact_origin_);
      } else {
        _this->_impl_.impact_origin_->MergeFrom(*from._impl_.impact_origin_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.surface_normal_ != nullptr);
      if (_this->_impl_.surface_normal_ == nullptr) {
        _this->_impl_.surface_normal_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.surface_normal_);
      } else {
        _this->_impl_.surface_normal_->MergeFrom(*from._impl_.surface_normal_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.damage_ = from._impl_.damage_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.surface_type_ = from._impl_.surface_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.impacted_hitbox_ = from._impl_.impacted_hitbox_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.weapon_subclass_id_ = from._impl_.weapon_subclass_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.shooter_entindex_ = from._impl_.shooter_entindex_;
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.ability_entindex_ = from._impl_.ability_entindex_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.impacted_entindex_ = from._impl_.impacted_entindex_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgBulletImpact::CopyFrom(const CMsgBulletImpact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgBulletImpact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgBulletImpact::InternalSwap(CMsgBulletImpact* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.impacted_entindex_)
      + sizeof(CMsgBulletImpact::_impl_.impacted_entindex_)
      - PROTOBUF_FIELD_OFFSET(CMsgBulletImpact, _impl_.trace_start_)>(
          reinterpret_cast<char*>(&_impl_.trace_start_),
          reinterpret_cast<char*>(&other->_impl_.trace_start_));
}

::google::protobuf::Metadata CMsgBulletImpact::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgPlayerAnimEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgPlayerAnimEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_._has_bits_);
};

CMsgPlayerAnimEvent::CMsgPlayerAnimEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgPlayerAnimEvent)
}
CMsgPlayerAnimEvent::CMsgPlayerAnimEvent(
    ::google::protobuf::Arena* arena, const CMsgPlayerAnimEvent& from)
    : CMsgPlayerAnimEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CMsgPlayerAnimEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        player_{16777215u} {}

inline void CMsgPlayerAnimEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, event_),
           0,
           offsetof(Impl_, data_) -
               offsetof(Impl_, event_) +
               sizeof(Impl_::data_));
}
CMsgPlayerAnimEvent::~CMsgPlayerAnimEvent() {
  // @@protoc_insertion_point(destructor:CMsgPlayerAnimEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgPlayerAnimEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgPlayerAnimEvent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_._cached_size_),
              false,
          },
          &CMsgPlayerAnimEvent::MergeImpl,
          &CMsgPlayerAnimEvent::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CMsgPlayerAnimEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgPlayerAnimEvent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgPlayerAnimEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed32 player = 1 [default = 16777215];
    {::_pbi::TcParser::FastF32S1,
     {13, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_.player_)}},
    // optional uint32 event = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPlayerAnimEvent, _impl_.event_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_.event_)}},
    // optional int32 data = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPlayerAnimEvent, _impl_.data_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed32 player = 1 [default = 16777215];
    {PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_.player_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional uint32 event = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_.event_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 data = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_.data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CMsgPlayerAnimEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPlayerAnimEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.event_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.data_) -
        reinterpret_cast<char*>(&_impl_.event_)) + sizeof(_impl_.data_));
    _impl_.player_ = 16777215u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgPlayerAnimEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPlayerAnimEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed32 player = 1 [default = 16777215];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        1, this->_internal_player(), target);
  }

  // optional uint32 event = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_event(), target);
  }

  // optional int32 data = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPlayerAnimEvent)
  return target;
}

::size_t CMsgPlayerAnimEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPlayerAnimEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 event = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_event());
    }

    // optional int32 data = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_data());
    }

    // optional fixed32 player = 1 [default = 16777215];
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgPlayerAnimEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgPlayerAnimEvent*>(&to_msg);
  auto& from = static_cast<const CMsgPlayerAnimEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgPlayerAnimEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.event_ = from._impl_.event_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.data_ = from._impl_.data_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.player_ = from._impl_.player_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgPlayerAnimEvent::CopyFrom(const CMsgPlayerAnimEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPlayerAnimEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgPlayerAnimEvent::InternalSwap(CMsgPlayerAnimEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_.player_)
      + sizeof(CMsgPlayerAnimEvent::_impl_.player_)
      - PROTOBUF_FIELD_OFFSET(CMsgPlayerAnimEvent, _impl_.event_)>(
          reinterpret_cast<char*>(&_impl_.event_),
          reinterpret_cast<char*>(&other->_impl_.event_));
}

::google::protobuf::Metadata CMsgPlayerAnimEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_CreateParticle::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_CreateParticle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_._has_bits_);
};

void CMsgParticleSystemManager_CreateParticle::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgParticleSystemManager_CreateParticle::clear_angles() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.angles_ != nullptr) _impl_.angles_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgParticleSystemManager_CreateParticle::CMsgParticleSystemManager_CreateParticle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.CreateParticle)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_CreateParticle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgParticleSystemManager_CreateParticle& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgParticleSystemManager_CreateParticle::CMsgParticleSystemManager_CreateParticle(
    ::google::protobuf::Arena* arena,
    const CMsgParticleSystemManager_CreateParticle& from)
    : ::google::protobuf::Message(arena) {
  CMsgParticleSystemManager_CreateParticle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.angles_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::CMsgQAngle>(
                              arena, *from._impl_.angles_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, particle_name_index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, particle_name_index_),
           offsetof(Impl_, entity_handle_) -
               offsetof(Impl_, particle_name_index_) +
               sizeof(Impl_::entity_handle_));

  // @@protoc_insertion_point(copy_constructor:CMsgParticleSystemManager.CreateParticle)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_CreateParticle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entity_handle_{16777215u} {}

inline void CMsgParticleSystemManager_CreateParticle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, attach_type_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::attach_type_));
}
CMsgParticleSystemManager_CreateParticle::~CMsgParticleSystemManager_CreateParticle() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.CreateParticle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_CreateParticle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  delete _impl_.angles_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_CreateParticle::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_CreateParticle::MergeImpl,
          &CMsgParticleSystemManager_CreateParticle::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> CMsgParticleSystemManager_CreateParticle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgParticleSystemManager_CreateParticle_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_CreateParticle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional fixed64 particle_name_index = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.particle_name_index_)}},
    // optional int32 attach_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_CreateParticle, _impl_.attach_type_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.attach_type_)}},
    // optional uint32 entity_handle = 3 [default = 16777215];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_CreateParticle, _impl_.entity_handle_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.entity_handle_)}},
    // optional .CMsgVector position = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.position_)}},
    // optional .CMsgQAngle angles = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.angles_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional fixed64 particle_name_index = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.particle_name_index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed64)},
    // optional int32 attach_type = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.attach_type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 entity_handle = 3 [default = 16777215];
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.entity_handle_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgVector position = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgQAngle angles = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.angles_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgQAngle>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_CreateParticle::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.CreateParticle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.angles_ != nullptr);
      _impl_.angles_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&_impl_.particle_name_index_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.attach_type_) -
        reinterpret_cast<char*>(&_impl_.particle_name_index_)) + sizeof(_impl_.attach_type_));
    _impl_.entity_handle_ = 16777215u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_CreateParticle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.CreateParticle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional fixed64 particle_name_index = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(
        1, this->_internal_particle_name_index(), target);
  }

  // optional int32 attach_type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_attach_type(), target);
  }

  // optional uint32 entity_handle = 3 [default = 16777215];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_entity_handle(), target);
  }

  // optional .CMsgVector position = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.position_, _impl_.position_->GetCachedSize(), target, stream);
  }

  // optional .CMsgQAngle angles = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.angles_, _impl_.angles_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.CreateParticle)
  return target;
}

::size_t CMsgParticleSystemManager_CreateParticle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.CreateParticle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .CMsgVector position = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // optional .CMsgQAngle angles = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.angles_);
    }

    // optional fixed64 particle_name_index = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 9;
    }

    // optional int32 attach_type = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_attach_type());
    }

    // optional uint32 entity_handle = 3 [default = 16777215];
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_entity_handle());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_CreateParticle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_CreateParticle*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_CreateParticle&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.CreateParticle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.angles_ != nullptr);
      if (_this->_impl_.angles_ == nullptr) {
        _this->_impl_.angles_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgQAngle>(arena, *from._impl_.angles_);
      } else {
        _this->_impl_.angles_->MergeFrom(*from._impl_.angles_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.particle_name_index_ = from._impl_.particle_name_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.attach_type_ = from._impl_.attach_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.entity_handle_ = from._impl_.entity_handle_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_CreateParticle::CopyFrom(const CMsgParticleSystemManager_CreateParticle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.CreateParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_CreateParticle::InternalSwap(CMsgParticleSystemManager_CreateParticle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.entity_handle_)
      + sizeof(CMsgParticleSystemManager_CreateParticle::_impl_.entity_handle_)
      - PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_CreateParticle, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata CMsgParticleSystemManager_CreateParticle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_DestroyParticle::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_DestroyParticle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticle, _impl_._has_bits_);
};

CMsgParticleSystemManager_DestroyParticle::CMsgParticleSystemManager_DestroyParticle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.DestroyParticle)
}
CMsgParticleSystemManager_DestroyParticle::CMsgParticleSystemManager_DestroyParticle(
    ::google::protobuf::Arena* arena, const CMsgParticleSystemManager_DestroyParticle& from)
    : CMsgParticleSystemManager_DestroyParticle(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_DestroyParticle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgParticleSystemManager_DestroyParticle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.destroy_immediately_ = {};
}
CMsgParticleSystemManager_DestroyParticle::~CMsgParticleSystemManager_DestroyParticle() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.DestroyParticle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_DestroyParticle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_DestroyParticle::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticle, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_DestroyParticle::MergeImpl,
          &CMsgParticleSystemManager_DestroyParticle::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgParticleSystemManager_DestroyParticle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticle, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgParticleSystemManager_DestroyParticle_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_DestroyParticle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool destroy_immediately = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgParticleSystemManager_DestroyParticle, _impl_.destroy_immediately_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticle, _impl_.destroy_immediately_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool destroy_immediately = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticle, _impl_.destroy_immediately_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_DestroyParticle::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.DestroyParticle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.destroy_immediately_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_DestroyParticle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.DestroyParticle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool destroy_immediately = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_destroy_immediately(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.DestroyParticle)
  return target;
}

::size_t CMsgParticleSystemManager_DestroyParticle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.DestroyParticle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool destroy_immediately = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_DestroyParticle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_DestroyParticle*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_DestroyParticle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.DestroyParticle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.destroy_immediately_ = from._impl_.destroy_immediately_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_DestroyParticle::CopyFrom(const CMsgParticleSystemManager_DestroyParticle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.DestroyParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_DestroyParticle::InternalSwap(CMsgParticleSystemManager_DestroyParticle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.destroy_immediately_, other->_impl_.destroy_immediately_);
}

::google::protobuf::Metadata CMsgParticleSystemManager_DestroyParticle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_DestroyParticleInvolving::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_DestroyParticleInvolving>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_._has_bits_);
};

CMsgParticleSystemManager_DestroyParticleInvolving::CMsgParticleSystemManager_DestroyParticleInvolving(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.DestroyParticleInvolving)
}
CMsgParticleSystemManager_DestroyParticleInvolving::CMsgParticleSystemManager_DestroyParticleInvolving(
    ::google::protobuf::Arena* arena, const CMsgParticleSystemManager_DestroyParticleInvolving& from)
    : CMsgParticleSystemManager_DestroyParticleInvolving(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_DestroyParticleInvolving::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entity_handle_{16777215u} {}

inline void CMsgParticleSystemManager_DestroyParticleInvolving::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.destroy_immediately_ = {};
}
CMsgParticleSystemManager_DestroyParticleInvolving::~CMsgParticleSystemManager_DestroyParticleInvolving() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.DestroyParticleInvolving)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_DestroyParticleInvolving::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_DestroyParticleInvolving::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_DestroyParticleInvolving::MergeImpl,
          &CMsgParticleSystemManager_DestroyParticleInvolving::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 0, 2> CMsgParticleSystemManager_DestroyParticleInvolving::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgParticleSystemManager_DestroyParticleInvolving_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_DestroyParticleInvolving>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional bool destroy_immediately = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.destroy_immediately_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.destroy_immediately_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 entity_handle = 3 [default = 16777215];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.entity_handle_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.entity_handle_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool destroy_immediately = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.destroy_immediately_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional uint32 entity_handle = 3 [default = 16777215];
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.entity_handle_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_DestroyParticleInvolving::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.DestroyParticleInvolving)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.destroy_immediately_ = false;
    _impl_.entity_handle_ = 16777215u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_DestroyParticleInvolving::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.DestroyParticleInvolving)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool destroy_immediately = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_destroy_immediately(), target);
  }

  // optional uint32 entity_handle = 3 [default = 16777215];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_entity_handle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.DestroyParticleInvolving)
  return target;
}

::size_t CMsgParticleSystemManager_DestroyParticleInvolving::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.DestroyParticleInvolving)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool destroy_immediately = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional uint32 entity_handle = 3 [default = 16777215];
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_entity_handle());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_DestroyParticleInvolving::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_DestroyParticleInvolving*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_DestroyParticleInvolving&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.DestroyParticleInvolving)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.destroy_immediately_ = from._impl_.destroy_immediately_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.entity_handle_ = from._impl_.entity_handle_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_DestroyParticleInvolving::CopyFrom(const CMsgParticleSystemManager_DestroyParticleInvolving& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.DestroyParticleInvolving)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_DestroyParticleInvolving::InternalSwap(CMsgParticleSystemManager_DestroyParticleInvolving* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.entity_handle_)
      + sizeof(CMsgParticleSystemManager_DestroyParticleInvolving::_impl_.entity_handle_)
      - PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_DestroyParticleInvolving, _impl_.destroy_immediately_)>(
          reinterpret_cast<char*>(&_impl_.destroy_immediately_),
          reinterpret_cast<char*>(&other->_impl_.destroy_immediately_));
}

::google::protobuf::Metadata CMsgParticleSystemManager_DestroyParticleInvolving::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_ReleaseParticleIndex::_Internal {
 public:
};

CMsgParticleSystemManager_ReleaseParticleIndex::CMsgParticleSystemManager_ReleaseParticleIndex(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.ReleaseParticleIndex)
}
CMsgParticleSystemManager_ReleaseParticleIndex::CMsgParticleSystemManager_ReleaseParticleIndex(
    ::google::protobuf::Arena* arena,
    const CMsgParticleSystemManager_ReleaseParticleIndex& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CMsgParticleSystemManager_ReleaseParticleIndex* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgParticleSystemManager.ReleaseParticleIndex)
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_ReleaseParticleIndex::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_ReleaseParticleIndex, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_ReleaseParticleIndex::MergeImpl,
          &CMsgParticleSystemManager_ReleaseParticleIndex::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> CMsgParticleSystemManager_ReleaseParticleIndex::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgParticleSystemManager_ReleaseParticleIndex_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_ReleaseParticleIndex>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata CMsgParticleSystemManager_ReleaseParticleIndex::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_UpdateParticle::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_UpdateParticle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticle, _impl_._has_bits_);
};

void CMsgParticleSystemManager_UpdateParticle::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgParticleSystemManager_UpdateParticle::CMsgParticleSystemManager_UpdateParticle(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.UpdateParticle)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgParticleSystemManager_UpdateParticle& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgParticleSystemManager_UpdateParticle::CMsgParticleSystemManager_UpdateParticle(
    ::google::protobuf::Arena* arena,
    const CMsgParticleSystemManager_UpdateParticle& from)
    : ::google::protobuf::Message(arena) {
  CMsgParticleSystemManager_UpdateParticle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.control_point_ = from._impl_.control_point_;

  // @@protoc_insertion_point(copy_constructor:CMsgParticleSystemManager.UpdateParticle)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgParticleSystemManager_UpdateParticle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, control_point_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::control_point_));
}
CMsgParticleSystemManager_UpdateParticle::~CMsgParticleSystemManager_UpdateParticle() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.UpdateParticle)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_UpdateParticle::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_UpdateParticle::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticle, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_UpdateParticle::MergeImpl,
          &CMsgParticleSystemManager_UpdateParticle::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CMsgParticleSystemManager_UpdateParticle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticle, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgParticleSystemManager_UpdateParticle_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgVector position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticle, _impl_.position_)}},
    // optional int32 control_point = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_UpdateParticle, _impl_.control_point_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticle, _impl_.control_point_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 control_point = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticle, _impl_.control_point_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CMsgVector position = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticle, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_UpdateParticle::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.UpdateParticle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_ != nullptr);
    _impl_.position_->Clear();
  }
  _impl_.control_point_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_UpdateParticle::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.UpdateParticle)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_control_point(), target);
  }

  // optional .CMsgVector position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.position_, _impl_.position_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.UpdateParticle)
  return target;
}

::size_t CMsgParticleSystemManager_UpdateParticle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.UpdateParticle)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgVector position = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // optional int32 control_point = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_control_point());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_UpdateParticle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_UpdateParticle*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_UpdateParticle&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.UpdateParticle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.control_point_ = from._impl_.control_point_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_UpdateParticle::CopyFrom(const CMsgParticleSystemManager_UpdateParticle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.UpdateParticle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_UpdateParticle::InternalSwap(CMsgParticleSystemManager_UpdateParticle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticle, _impl_.control_point_)
      + sizeof(CMsgParticleSystemManager_UpdateParticle::_impl_.control_point_)
      - PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticle, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata CMsgParticleSystemManager_UpdateParticle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_UpdateParticleFwd::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_UpdateParticleFwd>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFwd, _impl_._has_bits_);
};

void CMsgParticleSystemManager_UpdateParticleFwd::clear_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.forward_ != nullptr) _impl_.forward_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgParticleSystemManager_UpdateParticleFwd::CMsgParticleSystemManager_UpdateParticleFwd(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.UpdateParticleFwd)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleFwd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgParticleSystemManager_UpdateParticleFwd& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgParticleSystemManager_UpdateParticleFwd::CMsgParticleSystemManager_UpdateParticleFwd(
    ::google::protobuf::Arena* arena,
    const CMsgParticleSystemManager_UpdateParticleFwd& from)
    : ::google::protobuf::Message(arena) {
  CMsgParticleSystemManager_UpdateParticleFwd* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.forward_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.forward_)
                        : nullptr;
  _impl_.control_point_ = from._impl_.control_point_;

  // @@protoc_insertion_point(copy_constructor:CMsgParticleSystemManager.UpdateParticleFwd)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleFwd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgParticleSystemManager_UpdateParticleFwd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, forward_),
           0,
           offsetof(Impl_, control_point_) -
               offsetof(Impl_, forward_) +
               sizeof(Impl_::control_point_));
}
CMsgParticleSystemManager_UpdateParticleFwd::~CMsgParticleSystemManager_UpdateParticleFwd() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.UpdateParticleFwd)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_UpdateParticleFwd::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.forward_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_UpdateParticleFwd::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFwd, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_UpdateParticleFwd::MergeImpl,
          &CMsgParticleSystemManager_UpdateParticleFwd::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CMsgParticleSystemManager_UpdateParticleFwd::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFwd, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgParticleSystemManager_UpdateParticleFwd_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleFwd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgVector forward = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFwd, _impl_.forward_)}},
    // optional int32 control_point = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_UpdateParticleFwd, _impl_.control_point_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFwd, _impl_.control_point_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 control_point = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFwd, _impl_.control_point_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CMsgVector forward = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFwd, _impl_.forward_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_UpdateParticleFwd::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.UpdateParticleFwd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.forward_ != nullptr);
    _impl_.forward_->Clear();
  }
  _impl_.control_point_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_UpdateParticleFwd::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.UpdateParticleFwd)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_control_point(), target);
  }

  // optional .CMsgVector forward = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.forward_, _impl_.forward_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.UpdateParticleFwd)
  return target;
}

::size_t CMsgParticleSystemManager_UpdateParticleFwd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.UpdateParticleFwd)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgVector forward = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.forward_);
    }

    // optional int32 control_point = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_control_point());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_UpdateParticleFwd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_UpdateParticleFwd*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_UpdateParticleFwd&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.UpdateParticleFwd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.forward_ != nullptr);
      if (_this->_impl_.forward_ == nullptr) {
        _this->_impl_.forward_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.forward_);
      } else {
        _this->_impl_.forward_->MergeFrom(*from._impl_.forward_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.control_point_ = from._impl_.control_point_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_UpdateParticleFwd::CopyFrom(const CMsgParticleSystemManager_UpdateParticleFwd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.UpdateParticleFwd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_UpdateParticleFwd::InternalSwap(CMsgParticleSystemManager_UpdateParticleFwd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFwd, _impl_.control_point_)
      + sizeof(CMsgParticleSystemManager_UpdateParticleFwd::_impl_.control_point_)
      - PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFwd, _impl_.forward_)>(
          reinterpret_cast<char*>(&_impl_.forward_),
          reinterpret_cast<char*>(&other->_impl_.forward_));
}

::google::protobuf::Metadata CMsgParticleSystemManager_UpdateParticleFwd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_UpdateParticleOrient::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_UpdateParticleOrient>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_._has_bits_);
};

void CMsgParticleSystemManager_UpdateParticleOrient::clear_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.forward_ != nullptr) _impl_.forward_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgParticleSystemManager_UpdateParticleOrient::clear_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.left_ != nullptr) _impl_.left_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void CMsgParticleSystemManager_UpdateParticleOrient::clear_up() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.up_ != nullptr) _impl_.up_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
CMsgParticleSystemManager_UpdateParticleOrient::CMsgParticleSystemManager_UpdateParticleOrient(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.UpdateParticleOrient)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleOrient::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgParticleSystemManager_UpdateParticleOrient& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgParticleSystemManager_UpdateParticleOrient::CMsgParticleSystemManager_UpdateParticleOrient(
    ::google::protobuf::Arena* arena,
    const CMsgParticleSystemManager_UpdateParticleOrient& from)
    : ::google::protobuf::Message(arena) {
  CMsgParticleSystemManager_UpdateParticleOrient* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.forward_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.forward_)
                        : nullptr;
  _impl_.left_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.left_)
                        : nullptr;
  _impl_.up_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.up_)
                        : nullptr;
  _impl_.control_point_ = from._impl_.control_point_;

  // @@protoc_insertion_point(copy_constructor:CMsgParticleSystemManager.UpdateParticleOrient)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleOrient::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgParticleSystemManager_UpdateParticleOrient::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, forward_),
           0,
           offsetof(Impl_, control_point_) -
               offsetof(Impl_, forward_) +
               sizeof(Impl_::control_point_));
}
CMsgParticleSystemManager_UpdateParticleOrient::~CMsgParticleSystemManager_UpdateParticleOrient() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.UpdateParticleOrient)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_UpdateParticleOrient::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.forward_;
  delete _impl_.left_;
  delete _impl_.up_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_UpdateParticleOrient::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_UpdateParticleOrient::MergeImpl,
          &CMsgParticleSystemManager_UpdateParticleOrient::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> CMsgParticleSystemManager_UpdateParticleOrient::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgParticleSystemManager_UpdateParticleOrient_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleOrient>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgVector up = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.up_)}},
    // optional int32 control_point = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.control_point_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.control_point_)}},
    // optional .CMsgVector forward = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.forward_)}},
    // optional .CMsgVector left = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.left_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 control_point = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.control_point_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CMsgVector forward = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.forward_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector left = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.left_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector up = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.up_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_UpdateParticleOrient::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.UpdateParticleOrient)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.forward_ != nullptr);
      _impl_.forward_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.left_ != nullptr);
      _impl_.left_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.up_ != nullptr);
      _impl_.up_->Clear();
    }
  }
  _impl_.control_point_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_UpdateParticleOrient::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.UpdateParticleOrient)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_control_point(), target);
  }

  // optional .CMsgVector forward = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.forward_, _impl_.forward_->GetCachedSize(), target, stream);
  }

  // optional .CMsgVector left = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.left_, _impl_.left_->GetCachedSize(), target, stream);
  }

  // optional .CMsgVector up = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.up_, _impl_.up_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.UpdateParticleOrient)
  return target;
}

::size_t CMsgParticleSystemManager_UpdateParticleOrient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.UpdateParticleOrient)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .CMsgVector forward = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.forward_);
    }

    // optional .CMsgVector left = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.left_);
    }

    // optional .CMsgVector up = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.up_);
    }

    // optional int32 control_point = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_control_point());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_UpdateParticleOrient::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_UpdateParticleOrient*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_UpdateParticleOrient&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.UpdateParticleOrient)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.forward_ != nullptr);
      if (_this->_impl_.forward_ == nullptr) {
        _this->_impl_.forward_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.forward_);
      } else {
        _this->_impl_.forward_->MergeFrom(*from._impl_.forward_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.left_ != nullptr);
      if (_this->_impl_.left_ == nullptr) {
        _this->_impl_.left_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.left_);
      } else {
        _this->_impl_.left_->MergeFrom(*from._impl_.left_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.up_ != nullptr);
      if (_this->_impl_.up_ == nullptr) {
        _this->_impl_.up_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.up_);
      } else {
        _this->_impl_.up_->MergeFrom(*from._impl_.up_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.control_point_ = from._impl_.control_point_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_UpdateParticleOrient::CopyFrom(const CMsgParticleSystemManager_UpdateParticleOrient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.UpdateParticleOrient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_UpdateParticleOrient::InternalSwap(CMsgParticleSystemManager_UpdateParticleOrient* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.control_point_)
      + sizeof(CMsgParticleSystemManager_UpdateParticleOrient::_impl_.control_point_)
      - PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOrient, _impl_.forward_)>(
          reinterpret_cast<char*>(&_impl_.forward_),
          reinterpret_cast<char*>(&other->_impl_.forward_));
}

::google::protobuf::Metadata CMsgParticleSystemManager_UpdateParticleOrient::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_UpdateParticleFallback::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_UpdateParticleFallback>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFallback, _impl_._has_bits_);
};

void CMsgParticleSystemManager_UpdateParticleFallback::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgParticleSystemManager_UpdateParticleFallback::CMsgParticleSystemManager_UpdateParticleFallback(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.UpdateParticleFallback)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleFallback::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgParticleSystemManager_UpdateParticleFallback& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgParticleSystemManager_UpdateParticleFallback::CMsgParticleSystemManager_UpdateParticleFallback(
    ::google::protobuf::Arena* arena,
    const CMsgParticleSystemManager_UpdateParticleFallback& from)
    : ::google::protobuf::Message(arena) {
  CMsgParticleSystemManager_UpdateParticleFallback* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.control_point_ = from._impl_.control_point_;

  // @@protoc_insertion_point(copy_constructor:CMsgParticleSystemManager.UpdateParticleFallback)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleFallback::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgParticleSystemManager_UpdateParticleFallback::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, control_point_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::control_point_));
}
CMsgParticleSystemManager_UpdateParticleFallback::~CMsgParticleSystemManager_UpdateParticleFallback() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.UpdateParticleFallback)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_UpdateParticleFallback::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_UpdateParticleFallback::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFallback, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_UpdateParticleFallback::MergeImpl,
          &CMsgParticleSystemManager_UpdateParticleFallback::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CMsgParticleSystemManager_UpdateParticleFallback::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFallback, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgParticleSystemManager_UpdateParticleFallback_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleFallback>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgVector position = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFallback, _impl_.position_)}},
    // optional int32 control_point = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_UpdateParticleFallback, _impl_.control_point_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFallback, _impl_.control_point_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 control_point = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFallback, _impl_.control_point_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CMsgVector position = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFallback, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_UpdateParticleFallback::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.UpdateParticleFallback)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.position_ != nullptr);
    _impl_.position_->Clear();
  }
  _impl_.control_point_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_UpdateParticleFallback::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.UpdateParticleFallback)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_control_point(), target);
  }

  // optional .CMsgVector position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.position_, _impl_.position_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.UpdateParticleFallback)
  return target;
}

::size_t CMsgParticleSystemManager_UpdateParticleFallback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.UpdateParticleFallback)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgVector position = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // optional int32 control_point = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_control_point());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_UpdateParticleFallback::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_UpdateParticleFallback*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_UpdateParticleFallback&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.UpdateParticleFallback)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.control_point_ = from._impl_.control_point_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_UpdateParticleFallback::CopyFrom(const CMsgParticleSystemManager_UpdateParticleFallback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.UpdateParticleFallback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_UpdateParticleFallback::InternalSwap(CMsgParticleSystemManager_UpdateParticleFallback* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFallback, _impl_.control_point_)
      + sizeof(CMsgParticleSystemManager_UpdateParticleFallback::_impl_.control_point_)
      - PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFallback, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata CMsgParticleSystemManager_UpdateParticleFallback::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_UpdateParticleEnt::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_UpdateParticleEnt>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_._has_bits_);
};

void CMsgParticleSystemManager_UpdateParticleEnt::clear_fallback_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fallback_position_ != nullptr) _impl_.fallback_position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgParticleSystemManager_UpdateParticleEnt::CMsgParticleSystemManager_UpdateParticleEnt(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.UpdateParticleEnt)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleEnt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgParticleSystemManager_UpdateParticleEnt& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgParticleSystemManager_UpdateParticleEnt::CMsgParticleSystemManager_UpdateParticleEnt(
    ::google::protobuf::Arena* arena,
    const CMsgParticleSystemManager_UpdateParticleEnt& from)
    : ::google::protobuf::Message(arena) {
  CMsgParticleSystemManager_UpdateParticleEnt* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.fallback_position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.fallback_position_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, control_point_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, control_point_),
           offsetof(Impl_, entity_handle_) -
               offsetof(Impl_, control_point_) +
               sizeof(Impl_::entity_handle_));

  // @@protoc_insertion_point(copy_constructor:CMsgParticleSystemManager.UpdateParticleEnt)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleEnt::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entity_handle_{16777215u} {}

inline void CMsgParticleSystemManager_UpdateParticleEnt::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fallback_position_),
           0,
           offsetof(Impl_, attachment_) -
               offsetof(Impl_, fallback_position_) +
               sizeof(Impl_::attachment_));
}
CMsgParticleSystemManager_UpdateParticleEnt::~CMsgParticleSystemManager_UpdateParticleEnt() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.UpdateParticleEnt)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_UpdateParticleEnt::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.fallback_position_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_UpdateParticleEnt::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_UpdateParticleEnt::MergeImpl,
          &CMsgParticleSystemManager_UpdateParticleEnt::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> CMsgParticleSystemManager_UpdateParticleEnt::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgParticleSystemManager_UpdateParticleEnt_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleEnt>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 control_point = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.control_point_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.control_point_)}},
    // optional uint32 entity_handle = 2 [default = 16777215];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.entity_handle_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.entity_handle_)}},
    // optional int32 attach_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.attach_type_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.attach_type_)}},
    // optional int32 attachment = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.attachment_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.attachment_)}},
    // optional .CMsgVector fallback_position = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.fallback_position_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 control_point = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.control_point_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 entity_handle = 2 [default = 16777215];
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.entity_handle_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 attach_type = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.attach_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 attachment = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.attachment_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CMsgVector fallback_position = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.fallback_position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_UpdateParticleEnt::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.UpdateParticleEnt)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.fallback_position_ != nullptr);
    _impl_.fallback_position_->Clear();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.control_point_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.attachment_) -
        reinterpret_cast<char*>(&_impl_.control_point_)) + sizeof(_impl_.attachment_));
    _impl_.entity_handle_ = 16777215u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_UpdateParticleEnt::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.UpdateParticleEnt)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_control_point(), target);
  }

  // optional uint32 entity_handle = 2 [default = 16777215];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_entity_handle(), target);
  }

  // optional int32 attach_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_attach_type(), target);
  }

  // optional int32 attachment = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_attachment(), target);
  }

  // optional .CMsgVector fallback_position = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.fallback_position_, _impl_.fallback_position_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.UpdateParticleEnt)
  return target;
}

::size_t CMsgParticleSystemManager_UpdateParticleEnt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.UpdateParticleEnt)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .CMsgVector fallback_position = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.fallback_position_);
    }

    // optional int32 control_point = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_control_point());
    }

    // optional int32 attach_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_attach_type());
    }

    // optional int32 attachment = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_attachment());
    }

    // optional uint32 entity_handle = 2 [default = 16777215];
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_entity_handle());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_UpdateParticleEnt::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_UpdateParticleEnt*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_UpdateParticleEnt&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.UpdateParticleEnt)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.fallback_position_ != nullptr);
      if (_this->_impl_.fallback_position_ == nullptr) {
        _this->_impl_.fallback_position_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.fallback_position_);
      } else {
        _this->_impl_.fallback_position_->MergeFrom(*from._impl_.fallback_position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.control_point_ = from._impl_.control_point_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.attach_type_ = from._impl_.attach_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.attachment_ = from._impl_.attachment_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.entity_handle_ = from._impl_.entity_handle_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_UpdateParticleEnt::CopyFrom(const CMsgParticleSystemManager_UpdateParticleEnt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.UpdateParticleEnt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_UpdateParticleEnt::InternalSwap(CMsgParticleSystemManager_UpdateParticleEnt* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.entity_handle_)
      + sizeof(CMsgParticleSystemManager_UpdateParticleEnt::_impl_.entity_handle_)
      - PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleEnt, _impl_.fallback_position_)>(
          reinterpret_cast<char*>(&_impl_.fallback_position_),
          reinterpret_cast<char*>(&other->_impl_.fallback_position_));
}

::google::protobuf::Metadata CMsgParticleSystemManager_UpdateParticleEnt::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_UpdateParticleOffset::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_UpdateParticleOffset>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOffset, _impl_._has_bits_);
};

void CMsgParticleSystemManager_UpdateParticleOffset::clear_origin_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_offset_ != nullptr) _impl_.origin_offset_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CMsgParticleSystemManager_UpdateParticleOffset::CMsgParticleSystemManager_UpdateParticleOffset(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.UpdateParticleOffset)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleOffset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgParticleSystemManager_UpdateParticleOffset& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgParticleSystemManager_UpdateParticleOffset::CMsgParticleSystemManager_UpdateParticleOffset(
    ::google::protobuf::Arena* arena,
    const CMsgParticleSystemManager_UpdateParticleOffset& from)
    : ::google::protobuf::Message(arena) {
  CMsgParticleSystemManager_UpdateParticleOffset* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_offset_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.origin_offset_)
                        : nullptr;
  _impl_.control_point_ = from._impl_.control_point_;

  // @@protoc_insertion_point(copy_constructor:CMsgParticleSystemManager.UpdateParticleOffset)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleOffset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgParticleSystemManager_UpdateParticleOffset::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_offset_),
           0,
           offsetof(Impl_, control_point_) -
               offsetof(Impl_, origin_offset_) +
               sizeof(Impl_::control_point_));
}
CMsgParticleSystemManager_UpdateParticleOffset::~CMsgParticleSystemManager_UpdateParticleOffset() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.UpdateParticleOffset)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_UpdateParticleOffset::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.origin_offset_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_UpdateParticleOffset::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOffset, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_UpdateParticleOffset::MergeImpl,
          &CMsgParticleSystemManager_UpdateParticleOffset::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CMsgParticleSystemManager_UpdateParticleOffset::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOffset, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgParticleSystemManager_UpdateParticleOffset_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleOffset>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .CMsgVector origin_offset = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOffset, _impl_.origin_offset_)}},
    // optional int32 control_point = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager_UpdateParticleOffset, _impl_.control_point_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOffset, _impl_.control_point_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 control_point = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOffset, _impl_.control_point_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .CMsgVector origin_offset = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOffset, _impl_.origin_offset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_UpdateParticleOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.UpdateParticleOffset)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.origin_offset_ != nullptr);
    _impl_.origin_offset_->Clear();
  }
  _impl_.control_point_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_UpdateParticleOffset::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.UpdateParticleOffset)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 control_point = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_control_point(), target);
  }

  // optional .CMsgVector origin_offset = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.origin_offset_, _impl_.origin_offset_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.UpdateParticleOffset)
  return target;
}

::size_t CMsgParticleSystemManager_UpdateParticleOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.UpdateParticleOffset)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgVector origin_offset = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.origin_offset_);
    }

    // optional int32 control_point = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_control_point());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_UpdateParticleOffset::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_UpdateParticleOffset*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_UpdateParticleOffset&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.UpdateParticleOffset)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.origin_offset_ != nullptr);
      if (_this->_impl_.origin_offset_ == nullptr) {
        _this->_impl_.origin_offset_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.origin_offset_);
      } else {
        _this->_impl_.origin_offset_->MergeFrom(*from._impl_.origin_offset_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.control_point_ = from._impl_.control_point_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_UpdateParticleOffset::CopyFrom(const CMsgParticleSystemManager_UpdateParticleOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.UpdateParticleOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_UpdateParticleOffset::InternalSwap(CMsgParticleSystemManager_UpdateParticleOffset* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOffset, _impl_.control_point_)
      + sizeof(CMsgParticleSystemManager_UpdateParticleOffset::_impl_.control_point_)
      - PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleOffset, _impl_.origin_offset_)>(
          reinterpret_cast<char*>(&_impl_.origin_offset_),
          reinterpret_cast<char*>(&other->_impl_.origin_offset_));
}

::google::protobuf::Metadata CMsgParticleSystemManager_UpdateParticleOffset::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_UpdateParticleFrozen::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_UpdateParticleFrozen>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFrozen, _impl_._has_bits_);
};

CMsgParticleSystemManager_UpdateParticleFrozen::CMsgParticleSystemManager_UpdateParticleFrozen(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.UpdateParticleFrozen)
}
CMsgParticleSystemManager_UpdateParticleFrozen::CMsgParticleSystemManager_UpdateParticleFrozen(
    ::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticleFrozen& from)
    : CMsgParticleSystemManager_UpdateParticleFrozen(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleFrozen::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgParticleSystemManager_UpdateParticleFrozen::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.set_frozen_ = {};
}
CMsgParticleSystemManager_UpdateParticleFrozen::~CMsgParticleSystemManager_UpdateParticleFrozen() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.UpdateParticleFrozen)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_UpdateParticleFrozen::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_UpdateParticleFrozen::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFrozen, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_UpdateParticleFrozen::MergeImpl,
          &CMsgParticleSystemManager_UpdateParticleFrozen::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgParticleSystemManager_UpdateParticleFrozen::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFrozen, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgParticleSystemManager_UpdateParticleFrozen_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleFrozen>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool set_frozen = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgParticleSystemManager_UpdateParticleFrozen, _impl_.set_frozen_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFrozen, _impl_.set_frozen_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool set_frozen = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleFrozen, _impl_.set_frozen_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_UpdateParticleFrozen::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.UpdateParticleFrozen)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.set_frozen_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_UpdateParticleFrozen::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.UpdateParticleFrozen)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool set_frozen = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_set_frozen(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.UpdateParticleFrozen)
  return target;
}

::size_t CMsgParticleSystemManager_UpdateParticleFrozen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.UpdateParticleFrozen)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool set_frozen = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_UpdateParticleFrozen::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_UpdateParticleFrozen*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_UpdateParticleFrozen&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.UpdateParticleFrozen)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.set_frozen_ = from._impl_.set_frozen_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_UpdateParticleFrozen::CopyFrom(const CMsgParticleSystemManager_UpdateParticleFrozen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.UpdateParticleFrozen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_UpdateParticleFrozen::InternalSwap(CMsgParticleSystemManager_UpdateParticleFrozen* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.set_frozen_, other->_impl_.set_frozen_);
}

::google::protobuf::Metadata CMsgParticleSystemManager_UpdateParticleFrozen::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager_UpdateParticleShouldDraw::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager_UpdateParticleShouldDraw>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleShouldDraw, _impl_._has_bits_);
};

CMsgParticleSystemManager_UpdateParticleShouldDraw::CMsgParticleSystemManager_UpdateParticleShouldDraw(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager.UpdateParticleShouldDraw)
}
CMsgParticleSystemManager_UpdateParticleShouldDraw::CMsgParticleSystemManager_UpdateParticleShouldDraw(
    ::google::protobuf::Arena* arena, const CMsgParticleSystemManager_UpdateParticleShouldDraw& from)
    : CMsgParticleSystemManager_UpdateParticleShouldDraw(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager_UpdateParticleShouldDraw::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgParticleSystemManager_UpdateParticleShouldDraw::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.should_draw_ = {};
}
CMsgParticleSystemManager_UpdateParticleShouldDraw::~CMsgParticleSystemManager_UpdateParticleShouldDraw() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager.UpdateParticleShouldDraw)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager_UpdateParticleShouldDraw::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager_UpdateParticleShouldDraw::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleShouldDraw, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager_UpdateParticleShouldDraw::MergeImpl,
          &CMsgParticleSystemManager_UpdateParticleShouldDraw::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgParticleSystemManager_UpdateParticleShouldDraw::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleShouldDraw, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgParticleSystemManager_UpdateParticleShouldDraw_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleShouldDraw>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bool should_draw = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgParticleSystemManager_UpdateParticleShouldDraw, _impl_.should_draw_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleShouldDraw, _impl_.should_draw_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool should_draw = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager_UpdateParticleShouldDraw, _impl_.should_draw_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager_UpdateParticleShouldDraw::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager.UpdateParticleShouldDraw)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.should_draw_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager_UpdateParticleShouldDraw::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager.UpdateParticleShouldDraw)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool should_draw = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_should_draw(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager.UpdateParticleShouldDraw)
  return target;
}

::size_t CMsgParticleSystemManager_UpdateParticleShouldDraw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager.UpdateParticleShouldDraw)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bool should_draw = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager_UpdateParticleShouldDraw::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager_UpdateParticleShouldDraw*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager_UpdateParticleShouldDraw&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager.UpdateParticleShouldDraw)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.should_draw_ = from._impl_.should_draw_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager_UpdateParticleShouldDraw::CopyFrom(const CMsgParticleSystemManager_UpdateParticleShouldDraw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager.UpdateParticleShouldDraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgParticleSystemManager_UpdateParticleShouldDraw::InternalSwap(CMsgParticleSystemManager_UpdateParticleShouldDraw* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.should_draw_, other->_impl_.should_draw_);
}

::google::protobuf::Metadata CMsgParticleSystemManager_UpdateParticleShouldDraw::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgParticleSystemManager::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgParticleSystemManager>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00003000) ^ 0x00003000) != 0;
  }
};

CMsgParticleSystemManager::CMsgParticleSystemManager(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgParticleSystemManager)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgParticleSystemManager& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgParticleSystemManager::CMsgParticleSystemManager(
    ::google::protobuf::Arena* arena,
    const CMsgParticleSystemManager& from)
    : ::google::protobuf::Message(arena) {
  CMsgParticleSystemManager* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.create_particle_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_CreateParticle>(
                              arena, *from._impl_.create_particle_)
                        : nullptr;
  _impl_.destroy_particle_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_DestroyParticle>(
                              arena, *from._impl_.destroy_particle_)
                        : nullptr;
  _impl_.destroy_particle_involving_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_DestroyParticleInvolving>(
                              arena, *from._impl_.destroy_particle_involving_)
                        : nullptr;
  _impl_.release_particle_index_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_ReleaseParticleIndex>(
                              arena, *from._impl_.release_particle_index_)
                        : nullptr;
  _impl_.update_particle_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticle>(
                              arena, *from._impl_.update_particle_)
                        : nullptr;
  _impl_.update_particle_fwd_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleFwd>(
                              arena, *from._impl_.update_particle_fwd_)
                        : nullptr;
  _impl_.update_particle_orient_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleOrient>(
                              arena, *from._impl_.update_particle_orient_)
                        : nullptr;
  _impl_.update_particle_fallback_ = (cached_has_bits & 0x00000080u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleFallback>(
                              arena, *from._impl_.update_particle_fallback_)
                        : nullptr;
  _impl_.update_particle_offset_ = (cached_has_bits & 0x00000100u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleOffset>(
                              arena, *from._impl_.update_particle_offset_)
                        : nullptr;
  _impl_.update_particle_ent_ = (cached_has_bits & 0x00000200u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleEnt>(
                              arena, *from._impl_.update_particle_ent_)
                        : nullptr;
  _impl_.update_particle_frozen_ = (cached_has_bits & 0x00000400u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleFrozen>(
                              arena, *from._impl_.update_particle_frozen_)
                        : nullptr;
  _impl_.update_particle_should_draw_ = (cached_has_bits & 0x00000800u) ? ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleShouldDraw>(
                              arena, *from._impl_.update_particle_should_draw_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, index_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::index_));

  // @@protoc_insertion_point(copy_constructor:CMsgParticleSystemManager)
}
inline PROTOBUF_NDEBUG_INLINE CMsgParticleSystemManager::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgParticleSystemManager::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, create_particle_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, create_particle_) +
               sizeof(Impl_::index_));
}
CMsgParticleSystemManager::~CMsgParticleSystemManager() {
  // @@protoc_insertion_point(destructor:CMsgParticleSystemManager)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgParticleSystemManager::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.create_particle_;
  delete _impl_.destroy_particle_;
  delete _impl_.destroy_particle_involving_;
  delete _impl_.release_particle_index_;
  delete _impl_.update_particle_;
  delete _impl_.update_particle_fwd_;
  delete _impl_.update_particle_orient_;
  delete _impl_.update_particle_fallback_;
  delete _impl_.update_particle_offset_;
  delete _impl_.update_particle_ent_;
  delete _impl_.update_particle_frozen_;
  delete _impl_.update_particle_should_draw_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgParticleSystemManager::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              CMsgParticleSystemManager::IsInitializedImpl,
              PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_._cached_size_),
              false,
          },
          &CMsgParticleSystemManager::MergeImpl,
          &CMsgParticleSystemManager::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 13, 0, 2> CMsgParticleSystemManager::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    13,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgParticleSystemManager_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgParticleSystemManager>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .PARTICLE_SYSTEM_MANAGER_MESSAGE type = 1 [default = PARTICLE_SYSTEM_MANAGER_EVENT_CREATE];
    {::_pbi::TcParser::FastEr0S1,
     {8, 12, 11, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.type_)}},
    // required uint32 index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgParticleSystemManager, _impl_.index_), 13>(),
     {16, 13, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.index_)}},
    // optional .CMsgParticleSystemManager.CreateParticle create_particle = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.create_particle_)}},
    // optional .CMsgParticleSystemManager.DestroyParticle destroy_particle = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.destroy_particle_)}},
    // optional .CMsgParticleSystemManager.DestroyParticleInvolving destroy_particle_involving = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.destroy_particle_involving_)}},
    // optional .CMsgParticleSystemManager.ReleaseParticleIndex release_particle_index = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.release_particle_index_)}},
    // optional .CMsgParticleSystemManager.UpdateParticle update_particle = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 4, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_)}},
    // optional .CMsgParticleSystemManager.UpdateParticleFwd update_particle_fwd = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 5, 5, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_fwd_)}},
    // optional .CMsgParticleSystemManager.UpdateParticleOrient update_particle_orient = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 6, 6, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_orient_)}},
    // optional .CMsgParticleSystemManager.UpdateParticleFallback update_particle_fallback = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 7, 7, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_fallback_)}},
    // optional .CMsgParticleSystemManager.UpdateParticleOffset update_particle_offset = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 8, 8, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_offset_)}},
    // optional .CMsgParticleSystemManager.UpdateParticleEnt update_particle_ent = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 9, 9, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_ent_)}},
    // optional .CMsgParticleSystemManager.UpdateParticleFrozen update_particle_frozen = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 10, 10, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_frozen_)}},
    // optional .CMsgParticleSystemManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 11, 11, PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_should_draw_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .PARTICLE_SYSTEM_MANAGER_MESSAGE type = 1 [default = PARTICLE_SYSTEM_MANAGER_EVENT_CREATE];
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.type_), _Internal::kHasBitsOffset + 12, 12,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required uint32 index = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.index_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .CMsgParticleSystemManager.CreateParticle create_particle = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.create_particle_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.DestroyParticle destroy_particle = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.destroy_particle_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.DestroyParticleInvolving destroy_particle_involving = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.destroy_particle_involving_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.ReleaseParticleIndex release_particle_index = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.release_particle_index_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.UpdateParticle update_particle = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.UpdateParticleFwd update_particle_fwd = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_fwd_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.UpdateParticleOrient update_particle_orient = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_orient_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.UpdateParticleFallback update_particle_fallback = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_fallback_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.UpdateParticleOffset update_particle_offset = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_offset_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.UpdateParticleEnt update_particle_ent = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_ent_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.UpdateParticleFrozen update_particle_frozen = 13;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_frozen_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgParticleSystemManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
    {PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.update_particle_should_draw_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_CreateParticle>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_DestroyParticle>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_DestroyParticleInvolving>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_ReleaseParticleIndex>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticle>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleFwd>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleOrient>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleFallback>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleOffset>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleEnt>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleFrozen>()},
    {::_pbi::TcParser::GetTable<::CMsgParticleSystemManager_UpdateParticleShouldDraw>()},
    {0, 12},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgParticleSystemManager::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgParticleSystemManager)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.create_particle_ != nullptr);
      _impl_.create_particle_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.destroy_particle_ != nullptr);
      _impl_.destroy_particle_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.destroy_particle_involving_ != nullptr);
      _impl_.destroy_particle_involving_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.release_particle_index_ != nullptr);
      _impl_.release_particle_index_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.update_particle_ != nullptr);
      _impl_.update_particle_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.update_particle_fwd_ != nullptr);
      _impl_.update_particle_fwd_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.update_particle_orient_ != nullptr);
      _impl_.update_particle_orient_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.update_particle_fallback_ != nullptr);
      _impl_.update_particle_fallback_->Clear();
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.update_particle_offset_ != nullptr);
      _impl_.update_particle_offset_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.update_particle_ent_ != nullptr);
      _impl_.update_particle_ent_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.update_particle_frozen_ != nullptr);
      _impl_.update_particle_frozen_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.update_particle_should_draw_ != nullptr);
      _impl_.update_particle_should_draw_->Clear();
    }
  }
  if (cached_has_bits & 0x00003000u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.index_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgParticleSystemManager::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgParticleSystemManager)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .PARTICLE_SYSTEM_MANAGER_MESSAGE type = 1 [default = PARTICLE_SYSTEM_MANAGER_EVENT_CREATE];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // required uint32 index = 2;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_index(), target);
  }

  // optional .CMsgParticleSystemManager.CreateParticle create_particle = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.create_particle_, _impl_.create_particle_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.DestroyParticle destroy_particle = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.destroy_particle_, _impl_.destroy_particle_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.DestroyParticleInvolving destroy_particle_involving = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.destroy_particle_involving_, _impl_.destroy_particle_involving_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.ReleaseParticleIndex release_particle_index = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.release_particle_index_, _impl_.release_particle_index_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.UpdateParticle update_particle = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.update_particle_, _impl_.update_particle_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.UpdateParticleFwd update_particle_fwd = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.update_particle_fwd_, _impl_.update_particle_fwd_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.UpdateParticleOrient update_particle_orient = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *_impl_.update_particle_orient_, _impl_.update_particle_orient_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.UpdateParticleFallback update_particle_fallback = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *_impl_.update_particle_fallback_, _impl_.update_particle_fallback_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.UpdateParticleOffset update_particle_offset = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *_impl_.update_particle_offset_, _impl_.update_particle_offset_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.UpdateParticleEnt update_particle_ent = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *_impl_.update_particle_ent_, _impl_.update_particle_ent_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.UpdateParticleFrozen update_particle_frozen = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *_impl_.update_particle_frozen_, _impl_.update_particle_frozen_->GetCachedSize(), target, stream);
  }

  // optional .CMsgParticleSystemManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        14, *_impl_.update_particle_should_draw_, _impl_.update_particle_should_draw_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgParticleSystemManager)
  return target;
}

::size_t CMsgParticleSystemManager::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgParticleSystemManager)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .CMsgParticleSystemManager.CreateParticle create_particle = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.create_particle_);
    }

    // optional .CMsgParticleSystemManager.DestroyParticle destroy_particle = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.destroy_particle_);
    }

    // optional .CMsgParticleSystemManager.DestroyParticleInvolving destroy_particle_involving = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.destroy_particle_involving_);
    }

    // optional .CMsgParticleSystemManager.ReleaseParticleIndex release_particle_index = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.release_particle_index_);
    }

    // optional .CMsgParticleSystemManager.UpdateParticle update_particle = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_particle_);
    }

    // optional .CMsgParticleSystemManager.UpdateParticleFwd update_particle_fwd = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_particle_fwd_);
    }

    // optional .CMsgParticleSystemManager.UpdateParticleOrient update_particle_orient = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_particle_orient_);
    }

    // optional .CMsgParticleSystemManager.UpdateParticleFallback update_particle_fallback = 10;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_particle_fallback_);
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional .CMsgParticleSystemManager.UpdateParticleOffset update_particle_offset = 11;
    if (cached_has_bits & 0x00000100u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_particle_offset_);
    }

    // optional .CMsgParticleSystemManager.UpdateParticleEnt update_particle_ent = 12;
    if (cached_has_bits & 0x00000200u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_particle_ent_);
    }

    // optional .CMsgParticleSystemManager.UpdateParticleFrozen update_particle_frozen = 13;
    if (cached_has_bits & 0x00000400u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_particle_frozen_);
    }

    // optional .CMsgParticleSystemManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
    if (cached_has_bits & 0x00000800u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_particle_should_draw_);
    }

  }
  if (cached_has_bits & 0x00003000u) {
    // required .PARTICLE_SYSTEM_MANAGER_MESSAGE type = 1 [default = PARTICLE_SYSTEM_MANAGER_EVENT_CREATE];
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // required uint32 index = 2;
    if (cached_has_bits & 0x00002000u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_index());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgParticleSystemManager::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgParticleSystemManager*>(&to_msg);
  auto& from = static_cast<const CMsgParticleSystemManager&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgParticleSystemManager)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.create_particle_ != nullptr);
      if (_this->_impl_.create_particle_ == nullptr) {
        _this->_impl_.create_particle_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_CreateParticle>(arena, *from._impl_.create_particle_);
      } else {
        _this->_impl_.create_particle_->MergeFrom(*from._impl_.create_particle_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.destroy_particle_ != nullptr);
      if (_this->_impl_.destroy_particle_ == nullptr) {
        _this->_impl_.destroy_particle_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_DestroyParticle>(arena, *from._impl_.destroy_particle_);
      } else {
        _this->_impl_.destroy_particle_->MergeFrom(*from._impl_.destroy_particle_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.destroy_particle_involving_ != nullptr);
      if (_this->_impl_.destroy_particle_involving_ == nullptr) {
        _this->_impl_.destroy_particle_involving_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_DestroyParticleInvolving>(arena, *from._impl_.destroy_particle_involving_);
      } else {
        _this->_impl_.destroy_particle_involving_->MergeFrom(*from._impl_.destroy_particle_involving_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.release_particle_index_ != nullptr);
      if (_this->_impl_.release_particle_index_ == nullptr) {
        _this->_impl_.release_particle_index_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_ReleaseParticleIndex>(arena, *from._impl_.release_particle_index_);
      } else {
        _this->_impl_.release_particle_index_->MergeFrom(*from._impl_.release_particle_index_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.update_particle_ != nullptr);
      if (_this->_impl_.update_particle_ == nullptr) {
        _this->_impl_.update_particle_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticle>(arena, *from._impl_.update_particle_);
      } else {
        _this->_impl_.update_particle_->MergeFrom(*from._impl_.update_particle_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.update_particle_fwd_ != nullptr);
      if (_this->_impl_.update_particle_fwd_ == nullptr) {
        _this->_impl_.update_particle_fwd_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleFwd>(arena, *from._impl_.update_particle_fwd_);
      } else {
        _this->_impl_.update_particle_fwd_->MergeFrom(*from._impl_.update_particle_fwd_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.update_particle_orient_ != nullptr);
      if (_this->_impl_.update_particle_orient_ == nullptr) {
        _this->_impl_.update_particle_orient_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleOrient>(arena, *from._impl_.update_particle_orient_);
      } else {
        _this->_impl_.update_particle_orient_->MergeFrom(*from._impl_.update_particle_orient_);
      }
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(from._impl_.update_particle_fallback_ != nullptr);
      if (_this->_impl_.update_particle_fallback_ == nullptr) {
        _this->_impl_.update_particle_fallback_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleFallback>(arena, *from._impl_.update_particle_fallback_);
      } else {
        _this->_impl_.update_particle_fallback_->MergeFrom(*from._impl_.update_particle_fallback_);
      }
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(from._impl_.update_particle_offset_ != nullptr);
      if (_this->_impl_.update_particle_offset_ == nullptr) {
        _this->_impl_.update_particle_offset_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleOffset>(arena, *from._impl_.update_particle_offset_);
      } else {
        _this->_impl_.update_particle_offset_->MergeFrom(*from._impl_.update_particle_offset_);
      }
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(from._impl_.update_particle_ent_ != nullptr);
      if (_this->_impl_.update_particle_ent_ == nullptr) {
        _this->_impl_.update_particle_ent_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleEnt>(arena, *from._impl_.update_particle_ent_);
      } else {
        _this->_impl_.update_particle_ent_->MergeFrom(*from._impl_.update_particle_ent_);
      }
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(from._impl_.update_particle_frozen_ != nullptr);
      if (_this->_impl_.update_particle_frozen_ == nullptr) {
        _this->_impl_.update_particle_frozen_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleFrozen>(arena, *from._impl_.update_particle_frozen_);
      } else {
        _this->_impl_.update_particle_frozen_->MergeFrom(*from._impl_.update_particle_frozen_);
      }
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(from._impl_.update_particle_should_draw_ != nullptr);
      if (_this->_impl_.update_particle_should_draw_ == nullptr) {
        _this->_impl_.update_particle_should_draw_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgParticleSystemManager_UpdateParticleShouldDraw>(arena, *from._impl_.update_particle_should_draw_);
      } else {
        _this->_impl_.update_particle_should_draw_->MergeFrom(*from._impl_.update_particle_should_draw_);
      }
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.index_ = from._impl_.index_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgParticleSystemManager::CopyFrom(const CMsgParticleSystemManager& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgParticleSystemManager)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CMsgParticleSystemManager::IsInitializedImpl(
    const MessageLite& msg) {
  auto& this_ = static_cast<const CMsgParticleSystemManager&>(msg);
  if (_Internal::MissingRequiredFields(this_._impl_._has_bits_)) {
    return false;
  }
  return true;
}

void CMsgParticleSystemManager::InternalSwap(CMsgParticleSystemManager* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.index_)
      + sizeof(CMsgParticleSystemManager::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(CMsgParticleSystemManager, _impl_.create_particle_)>(
          reinterpret_cast<char*>(&_impl_.create_particle_),
          reinterpret_cast<char*>(&other->_impl_.create_particle_));
}

::google::protobuf::Metadata CMsgParticleSystemManager::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgScreenTextPretty::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgScreenTextPretty>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_._has_bits_);
};

CMsgScreenTextPretty::CMsgScreenTextPretty(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgScreenTextPretty)
}
inline PROTOBUF_NDEBUG_INLINE CMsgScreenTextPretty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgScreenTextPretty& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        text_(arena, from.text_),
        font_name_(arena, from.font_name_) {}

CMsgScreenTextPretty::CMsgScreenTextPretty(
    ::google::protobuf::Arena* arena,
    const CMsgScreenTextPretty& from)
    : ::google::protobuf::Message(arena) {
  CMsgScreenTextPretty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_pos_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_pos_),
           offsetof(Impl_, bold_font_) -
               offsetof(Impl_, x_pos_) +
               sizeof(Impl_::bold_font_));

  // @@protoc_insertion_point(copy_constructor:CMsgScreenTextPretty)
}
inline PROTOBUF_NDEBUG_INLINE CMsgScreenTextPretty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        text_(arena),
        font_name_(arena) {}

inline void CMsgScreenTextPretty::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_pos_),
           0,
           offsetof(Impl_, bold_font_) -
               offsetof(Impl_, x_pos_) +
               sizeof(Impl_::bold_font_));
}
CMsgScreenTextPretty::~CMsgScreenTextPretty() {
  // @@protoc_insertion_point(destructor:CMsgScreenTextPretty)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgScreenTextPretty::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.font_name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgScreenTextPretty::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_._cached_size_),
              false,
          },
          &CMsgScreenTextPretty::MergeImpl,
          &CMsgScreenTextPretty::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 50, 2> CMsgScreenTextPretty::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgScreenTextPretty_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgScreenTextPretty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional float x_pos = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.x_pos_)}},
    // optional float y_pos = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.y_pos_)}},
    // optional int32 line = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgScreenTextPretty, _impl_.line_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.line_)}},
    // optional string text = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.text_)}},
    // optional int32 r = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgScreenTextPretty, _impl_.r_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.r_)}},
    // optional int32 g = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgScreenTextPretty, _impl_.g_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.g_)}},
    // optional int32 b = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgScreenTextPretty, _impl_.b_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.b_)}},
    // optional int32 a = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgScreenTextPretty, _impl_.a_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.a_)}},
    // optional float duration = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.duration_)}},
    // optional string font_name = 10;
    {::_pbi::TcParser::FastSS1,
     {82, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.font_name_)}},
    // optional int32 font_size = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgScreenTextPretty, _impl_.font_size_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.font_size_)}},
    // optional bool bold_font = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CMsgScreenTextPretty, _impl_.bold_font_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.bold_font_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float x_pos = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.x_pos_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y_pos = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.y_pos_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 line = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.line_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string text = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.text_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 r = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.r_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 g = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.g_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 b = 7;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.b_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 a = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.a_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float duration = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.duration_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string font_name = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.font_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 font_size = 11;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.font_size_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool bold_font = 12;
    {PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.bold_font_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\24\0\0\0\4\0\0\0\0\0\11\0\0\0\0\0"
    "CMsgScreenTextPretty"
    "text"
    "font_name"
  }},
};

PROTOBUF_NOINLINE void CMsgScreenTextPretty::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgScreenTextPretty)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.font_name_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.x_pos_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.b_) -
        reinterpret_cast<char*>(&_impl_.x_pos_)) + sizeof(_impl_.b_));
  }
  if (cached_has_bits & 0x00000f00u) {
    ::memset(&_impl_.a_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.bold_font_) -
        reinterpret_cast<char*>(&_impl_.a_)) + sizeof(_impl_.bold_font_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgScreenTextPretty::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgScreenTextPretty)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional float x_pos = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x_pos(), target);
  }

  // optional float y_pos = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y_pos(), target);
  }

  // optional int32 line = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_line(), target);
  }

  // optional string text = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgScreenTextPretty.text");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional int32 r = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_r(), target);
  }

  // optional int32 g = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_g(), target);
  }

  // optional int32 b = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_b(), target);
  }

  // optional int32 a = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_a(), target);
  }

  // optional float duration = 9;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        9, this->_internal_duration(), target);
  }

  // optional string font_name = 10;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_font_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "CMsgScreenTextPretty.font_name");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional int32 font_size = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_font_size(), target);
  }

  // optional bool bold_font = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        12, this->_internal_bold_font(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgScreenTextPretty)
  return target;
}

::size_t CMsgScreenTextPretty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgScreenTextPretty)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string text = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_text());
    }

    // optional string font_name = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_font_name());
    }

    // optional float x_pos = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float y_pos = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional int32 line = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_line());
    }

    // optional int32 r = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_r());
    }

    // optional int32 g = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_g());
    }

    // optional int32 b = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_b());
    }

  }
  if (cached_has_bits & 0x00000f00u) {
    // optional int32 a = 8;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_a());
    }

    // optional float duration = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += 5;
    }

    // optional int32 font_size = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_font_size());
    }

    // optional bool bold_font = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgScreenTextPretty::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgScreenTextPretty*>(&to_msg);
  auto& from = static_cast<const CMsgScreenTextPretty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgScreenTextPretty)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_text(from._internal_text());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_font_name(from._internal_font_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.x_pos_ = from._impl_.x_pos_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.y_pos_ = from._impl_.y_pos_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.line_ = from._impl_.line_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.r_ = from._impl_.r_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.g_ = from._impl_.g_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.b_ = from._impl_.b_;
    }
  }
  if (cached_has_bits & 0x00000f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.a_ = from._impl_.a_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.duration_ = from._impl_.duration_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.font_size_ = from._impl_.font_size_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.bold_font_ = from._impl_.bold_font_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgScreenTextPretty::CopyFrom(const CMsgScreenTextPretty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgScreenTextPretty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgScreenTextPretty::InternalSwap(CMsgScreenTextPretty* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.font_name_, &other->_impl_.font_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.bold_font_)
      + sizeof(CMsgScreenTextPretty::_impl_.bold_font_)
      - PROTOBUF_FIELD_OFFSET(CMsgScreenTextPretty, _impl_.x_pos_)>(
          reinterpret_cast<char*>(&_impl_.x_pos_),
          reinterpret_cast<char*>(&other->_impl_.x_pos_));
}

::google::protobuf::Metadata CMsgScreenTextPretty::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgServerRequestedTracer::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgServerRequestedTracer>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_._has_bits_);
};

void CMsgServerRequestedTracer::clear_origin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.origin_ != nullptr) _impl_.origin_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgServerRequestedTracer::clear_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_ != nullptr) _impl_.end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgServerRequestedTracer::CMsgServerRequestedTracer(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgServerRequestedTracer)
}
inline PROTOBUF_NDEBUG_INLINE CMsgServerRequestedTracer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgServerRequestedTracer& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgServerRequestedTracer::CMsgServerRequestedTracer(
    ::google::protobuf::Arena* arena,
    const CMsgServerRequestedTracer& from)
    : ::google::protobuf::Message(arena) {
  CMsgServerRequestedTracer* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.origin_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.origin_)
                        : nullptr;
  _impl_.end_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.end_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dps_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, dps_),
           offsetof(Impl_, entity_handle_) -
               offsetof(Impl_, dps_) +
               sizeof(Impl_::entity_handle_));

  // @@protoc_insertion_point(copy_constructor:CMsgServerRequestedTracer)
}
inline PROTOBUF_NDEBUG_INLINE CMsgServerRequestedTracer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        weaponid_{-1},
        entity_handle_{16777215u} {}

inline void CMsgServerRequestedTracer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, origin_),
           0,
           offsetof(Impl_, dps_) -
               offsetof(Impl_, origin_) +
               sizeof(Impl_::dps_));
}
CMsgServerRequestedTracer::~CMsgServerRequestedTracer() {
  // @@protoc_insertion_point(destructor:CMsgServerRequestedTracer)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgServerRequestedTracer::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.origin_;
  delete _impl_.end_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgServerRequestedTracer::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_._cached_size_),
              false,
          },
          &CMsgServerRequestedTracer::MergeImpl,
          &CMsgServerRequestedTracer::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> CMsgServerRequestedTracer::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgServerRequestedTracer_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgServerRequestedTracer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector origin = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.origin_)}},
    // optional .CMsgVector end = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.end_)}},
    // optional int32 weaponid = 3 [default = -1];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerRequestedTracer, _impl_.weaponid_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.weaponid_)}},
    // optional uint32 entity_handle = 4 [default = 16777215];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgServerRequestedTracer, _impl_.entity_handle_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.entity_handle_)}},
    // optional float dps = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.dps_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector origin = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.origin_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector end = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.end_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 weaponid = 3 [default = -1];
    {PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.weaponid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional uint32 entity_handle = 4 [default = 16777215];
    {PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.entity_handle_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float dps = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.dps_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgServerRequestedTracer::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgServerRequestedTracer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.origin_ != nullptr);
      _impl_.origin_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.end_ != nullptr);
      _impl_.end_->Clear();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    _impl_.dps_ = 0;
    _impl_.weaponid_ = -1;
    _impl_.entity_handle_ = 16777215u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgServerRequestedTracer::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgServerRequestedTracer)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgVector origin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.origin_, _impl_.origin_->GetCachedSize(), target, stream);
  }

  // optional .CMsgVector end = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.end_, _impl_.end_->GetCachedSize(), target, stream);
  }

  // optional int32 weaponid = 3 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_weaponid(), target);
  }

  // optional uint32 entity_handle = 4 [default = 16777215];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_entity_handle(), target);
  }

  // optional float dps = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_dps(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgServerRequestedTracer)
  return target;
}

::size_t CMsgServerRequestedTracer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgServerRequestedTracer)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .CMsgVector origin = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.origin_);
    }

    // optional .CMsgVector end = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.end_);
    }

    // optional float dps = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional int32 weaponid = 3 [default = -1];
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_weaponid());
    }

    // optional uint32 entity_handle = 4 [default = 16777215];
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_entity_handle());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgServerRequestedTracer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgServerRequestedTracer*>(&to_msg);
  auto& from = static_cast<const CMsgServerRequestedTracer&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgServerRequestedTracer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.origin_ != nullptr);
      if (_this->_impl_.origin_ == nullptr) {
        _this->_impl_.origin_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.origin_);
      } else {
        _this->_impl_.origin_->MergeFrom(*from._impl_.origin_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.end_ != nullptr);
      if (_this->_impl_.end_ == nullptr) {
        _this->_impl_.end_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.end_);
      } else {
        _this->_impl_.end_->MergeFrom(*from._impl_.end_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.dps_ = from._impl_.dps_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.weaponid_ = from._impl_.weaponid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.entity_handle_ = from._impl_.entity_handle_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgServerRequestedTracer::CopyFrom(const CMsgServerRequestedTracer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgServerRequestedTracer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgServerRequestedTracer::InternalSwap(CMsgServerRequestedTracer* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.entity_handle_)
      + sizeof(CMsgServerRequestedTracer::_impl_.entity_handle_)
      - PROTOBUF_FIELD_OFFSET(CMsgServerRequestedTracer, _impl_.origin_)>(
          reinterpret_cast<char*>(&_impl_.origin_),
          reinterpret_cast<char*>(&other->_impl_.origin_));
}

::google::protobuf::Metadata CMsgServerRequestedTracer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgEnableSatVolumesEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgEnableSatVolumesEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_._has_bits_);
};

CMsgEnableSatVolumesEvent::CMsgEnableSatVolumesEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgEnableSatVolumesEvent)
}
CMsgEnableSatVolumesEvent::CMsgEnableSatVolumesEvent(
    ::google::protobuf::Arena* arena, const CMsgEnableSatVolumesEvent& from)
    : CMsgEnableSatVolumesEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CMsgEnableSatVolumesEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgEnableSatVolumesEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mode_),
           0,
           offsetof(Impl_, outline_color_) -
               offsetof(Impl_, mode_) +
               sizeof(Impl_::outline_color_));
}
CMsgEnableSatVolumesEvent::~CMsgEnableSatVolumesEvent() {
  // @@protoc_insertion_point(destructor:CMsgEnableSatVolumesEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgEnableSatVolumesEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgEnableSatVolumesEvent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_._cached_size_),
              false,
          },
          &CMsgEnableSatVolumesEvent::MergeImpl,
          &CMsgEnableSatVolumesEvent::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> CMsgEnableSatVolumesEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgEnableSatVolumesEvent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgEnableSatVolumesEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgEnableSatVolumesEvent, _impl_.mode_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.mode_)}},
    // optional float desat_amount = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.desat_amount_)}},
    // optional fixed32 sat_tint = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.sat_tint_)}},
    // optional fixed32 desat_tint = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.desat_tint_)}},
    // optional fixed32 outline_color = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.outline_color_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 mode = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.mode_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional float desat_amount = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.desat_amount_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional fixed32 sat_tint = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.sat_tint_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed32 desat_tint = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.desat_tint_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
    // optional fixed32 outline_color = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.outline_color_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFixed32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CMsgEnableSatVolumesEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgEnableSatVolumesEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.mode_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.outline_color_) -
        reinterpret_cast<char*>(&_impl_.mode_)) + sizeof(_impl_.outline_color_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgEnableSatVolumesEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgEnableSatVolumesEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 mode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_mode(), target);
  }

  // optional float desat_amount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_desat_amount(), target);
  }

  // optional fixed32 sat_tint = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        3, this->_internal_sat_tint(), target);
  }

  // optional fixed32 desat_tint = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        4, this->_internal_desat_tint(), target);
  }

  // optional fixed32 outline_color = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed32ToArray(
        5, this->_internal_outline_color(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgEnableSatVolumesEvent)
  return target;
}

::size_t CMsgEnableSatVolumesEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgEnableSatVolumesEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 mode = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_mode());
    }

    // optional float desat_amount = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional fixed32 sat_tint = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional fixed32 desat_tint = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional fixed32 outline_color = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgEnableSatVolumesEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgEnableSatVolumesEvent*>(&to_msg);
  auto& from = static_cast<const CMsgEnableSatVolumesEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgEnableSatVolumesEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.mode_ = from._impl_.mode_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.desat_amount_ = from._impl_.desat_amount_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.sat_tint_ = from._impl_.sat_tint_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.desat_tint_ = from._impl_.desat_tint_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.outline_color_ = from._impl_.outline_color_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgEnableSatVolumesEvent::CopyFrom(const CMsgEnableSatVolumesEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgEnableSatVolumesEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgEnableSatVolumesEvent::InternalSwap(CMsgEnableSatVolumesEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.outline_color_)
      + sizeof(CMsgEnableSatVolumesEvent::_impl_.outline_color_)
      - PROTOBUF_FIELD_OFFSET(CMsgEnableSatVolumesEvent, _impl_.mode_)>(
          reinterpret_cast<char*>(&_impl_.mode_),
          reinterpret_cast<char*>(&other->_impl_.mode_));
}

::google::protobuf::Metadata CMsgEnableSatVolumesEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgPlaceSatVolumeEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgPlaceSatVolumeEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_._has_bits_);
};

void CMsgPlaceSatVolumeEvent::clear_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ != nullptr) _impl_.position_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void CMsgPlaceSatVolumeEvent::clear_direction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.direction_ != nullptr) _impl_.direction_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CMsgPlaceSatVolumeEvent::CMsgPlaceSatVolumeEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgPlaceSatVolumeEvent)
}
inline PROTOBUF_NDEBUG_INLINE CMsgPlaceSatVolumeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::CMsgPlaceSatVolumeEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CMsgPlaceSatVolumeEvent::CMsgPlaceSatVolumeEvent(
    ::google::protobuf::Arena* arena,
    const CMsgPlaceSatVolumeEvent& from)
    : ::google::protobuf::Message(arena) {
  CMsgPlaceSatVolumeEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.position_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.position_)
                        : nullptr;
  _impl_.direction_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::CMsgVector>(
                              arena, *from._impl_.direction_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, radius_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, radius_),
           offsetof(Impl_, entity_handle_) -
               offsetof(Impl_, radius_) +
               sizeof(Impl_::entity_handle_));

  // @@protoc_insertion_point(copy_constructor:CMsgPlaceSatVolumeEvent)
}
inline PROTOBUF_NDEBUG_INLINE CMsgPlaceSatVolumeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entity_handle_{16777215u} {}

inline void CMsgPlaceSatVolumeEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, volume_id_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::volume_id_));
}
CMsgPlaceSatVolumeEvent::~CMsgPlaceSatVolumeEvent() {
  // @@protoc_insertion_point(destructor:CMsgPlaceSatVolumeEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgPlaceSatVolumeEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.position_;
  delete _impl_.direction_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgPlaceSatVolumeEvent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_._cached_size_),
              false,
          },
          &CMsgPlaceSatVolumeEvent::MergeImpl,
          &CMsgPlaceSatVolumeEvent::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 0, 2> CMsgPlaceSatVolumeEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CMsgPlaceSatVolumeEvent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgPlaceSatVolumeEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .CMsgVector position = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.position_)}},
    // optional .CMsgVector direction = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.direction_)}},
    // optional float radius = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.radius_)}},
    // optional float falloff_distance = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.falloff_distance_)}},
    // optional float theta_dot = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.theta_dot_)}},
    // optional float phi_dot = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.phi_dot_)}},
    // optional uint32 entity_handle = 7 [default = 16777215];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPlaceSatVolumeEvent, _impl_.entity_handle_), 9>(),
     {56, 9, 0, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.entity_handle_)}},
    // optional uint32 attachment_handle = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPlaceSatVolumeEvent, _impl_.attachment_handle_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.attachment_handle_)}},
    // optional uint32 type = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPlaceSatVolumeEvent, _impl_.type_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.type_)}},
    // optional int32 volume_id = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgPlaceSatVolumeEvent, _impl_.volume_id_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.volume_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .CMsgVector position = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.position_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .CMsgVector direction = 2;
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.direction_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional float radius = 3;
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.radius_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float falloff_distance = 4;
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.falloff_distance_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float theta_dot = 5;
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.theta_dot_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float phi_dot = 6;
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.phi_dot_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional uint32 entity_handle = 7 [default = 16777215];
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.entity_handle_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 attachment_handle = 8;
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.attachment_handle_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 type = 9;
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.type_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 volume_id = 10;
    {PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.volume_id_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
    {::_pbi::TcParser::GetTable<::CMsgVector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CMsgPlaceSatVolumeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPlaceSatVolumeEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.position_ != nullptr);
      _impl_.position_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.direction_ != nullptr);
      _impl_.direction_->Clear();
    }
  }
  if (cached_has_bits & 0x000000fcu) {
    ::memset(&_impl_.radius_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.radius_)) + sizeof(_impl_.type_));
  }
  if (cached_has_bits & 0x00000300u) {
    _impl_.volume_id_ = 0;
    _impl_.entity_handle_ = 16777215u;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgPlaceSatVolumeEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPlaceSatVolumeEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .CMsgVector position = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.position_, _impl_.position_->GetCachedSize(), target, stream);
  }

  // optional .CMsgVector direction = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.direction_, _impl_.direction_->GetCachedSize(), target, stream);
  }

  // optional float radius = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_radius(), target);
  }

  // optional float falloff_distance = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_falloff_distance(), target);
  }

  // optional float theta_dot = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_theta_dot(), target);
  }

  // optional float phi_dot = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_phi_dot(), target);
  }

  // optional uint32 entity_handle = 7 [default = 16777215];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_entity_handle(), target);
  }

  // optional uint32 attachment_handle = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_attachment_handle(), target);
  }

  // optional uint32 type = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_type(), target);
  }

  // optional int32 volume_id = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_volume_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPlaceSatVolumeEvent)
  return target;
}

::size_t CMsgPlaceSatVolumeEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPlaceSatVolumeEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .CMsgVector position = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.position_);
    }

    // optional .CMsgVector direction = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.direction_);
    }

    // optional float radius = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

    // optional float falloff_distance = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 5;
    }

    // optional float theta_dot = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 5;
    }

    // optional float phi_dot = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 5;
    }

    // optional uint32 attachment_handle = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_attachment_handle());
    }

    // optional uint32 type = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_type());
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional int32 volume_id = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_volume_id());
    }

    // optional uint32 entity_handle = 7 [default = 16777215];
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_entity_handle());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgPlaceSatVolumeEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgPlaceSatVolumeEvent*>(&to_msg);
  auto& from = static_cast<const CMsgPlaceSatVolumeEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgPlaceSatVolumeEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.position_ != nullptr);
      if (_this->_impl_.position_ == nullptr) {
        _this->_impl_.position_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.position_);
      } else {
        _this->_impl_.position_->MergeFrom(*from._impl_.position_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.direction_ != nullptr);
      if (_this->_impl_.direction_ == nullptr) {
        _this->_impl_.direction_ =
            ::google::protobuf::Message::CopyConstruct<::CMsgVector>(arena, *from._impl_.direction_);
      } else {
        _this->_impl_.direction_->MergeFrom(*from._impl_.direction_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.radius_ = from._impl_.radius_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.falloff_distance_ = from._impl_.falloff_distance_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.theta_dot_ = from._impl_.theta_dot_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.phi_dot_ = from._impl_.phi_dot_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.attachment_handle_ = from._impl_.attachment_handle_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.volume_id_ = from._impl_.volume_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.entity_handle_ = from._impl_.entity_handle_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgPlaceSatVolumeEvent::CopyFrom(const CMsgPlaceSatVolumeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPlaceSatVolumeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgPlaceSatVolumeEvent::InternalSwap(CMsgPlaceSatVolumeEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.entity_handle_)
      + sizeof(CMsgPlaceSatVolumeEvent::_impl_.entity_handle_)
      - PROTOBUF_FIELD_OFFSET(CMsgPlaceSatVolumeEvent, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata CMsgPlaceSatVolumeEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgRemoveSatVolumeEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<CMsgRemoveSatVolumeEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CMsgRemoveSatVolumeEvent, _impl_._has_bits_);
};

CMsgRemoveSatVolumeEvent::CMsgRemoveSatVolumeEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgRemoveSatVolumeEvent)
}
CMsgRemoveSatVolumeEvent::CMsgRemoveSatVolumeEvent(
    ::google::protobuf::Arena* arena, const CMsgRemoveSatVolumeEvent& from)
    : CMsgRemoveSatVolumeEvent(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CMsgRemoveSatVolumeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CMsgRemoveSatVolumeEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.volume_id_ = {};
}
CMsgRemoveSatVolumeEvent::~CMsgRemoveSatVolumeEvent() {
  // @@protoc_insertion_point(destructor:CMsgRemoveSatVolumeEvent)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CMsgRemoveSatVolumeEvent::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CMsgRemoveSatVolumeEvent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgRemoveSatVolumeEvent, _impl_._cached_size_),
              false,
          },
          &CMsgRemoveSatVolumeEvent::MergeImpl,
          &CMsgRemoveSatVolumeEvent::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CMsgRemoveSatVolumeEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CMsgRemoveSatVolumeEvent, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgRemoveSatVolumeEvent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgRemoveSatVolumeEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int32 volume_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CMsgRemoveSatVolumeEvent, _impl_.volume_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CMsgRemoveSatVolumeEvent, _impl_.volume_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 volume_id = 1;
    {PROTOBUF_FIELD_OFFSET(CMsgRemoveSatVolumeEvent, _impl_.volume_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CMsgRemoveSatVolumeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgRemoveSatVolumeEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.volume_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CMsgRemoveSatVolumeEvent::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgRemoveSatVolumeEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 volume_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_volume_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgRemoveSatVolumeEvent)
  return target;
}

::size_t CMsgRemoveSatVolumeEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgRemoveSatVolumeEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 volume_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_volume_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CMsgRemoveSatVolumeEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CMsgRemoveSatVolumeEvent*>(&to_msg);
  auto& from = static_cast<const CMsgRemoveSatVolumeEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CMsgRemoveSatVolumeEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.volume_id_ = from._impl_.volume_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CMsgRemoveSatVolumeEvent::CopyFrom(const CMsgRemoveSatVolumeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgRemoveSatVolumeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CMsgRemoveSatVolumeEvent::InternalSwap(CMsgRemoveSatVolumeEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.volume_id_, other->_impl_.volume_id_);
}

::google::protobuf::Metadata CMsgRemoveSatVolumeEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CMsgDisableSatVolumesEvent::_Internal {
 public:
};

CMsgDisableSatVolumesEvent::CMsgDisableSatVolumesEvent(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:CMsgDisableSatVolumesEvent)
}
CMsgDisableSatVolumesEvent::CMsgDisableSatVolumesEvent(
    ::google::protobuf::Arena* arena,
    const CMsgDisableSatVolumesEvent& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  CMsgDisableSatVolumesEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:CMsgDisableSatVolumesEvent)
}

const ::google::protobuf::MessageLite::ClassData*
CMsgDisableSatVolumesEvent::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CMsgDisableSatVolumesEvent, _impl_._cached_size_),
              false,
          },
          &CMsgDisableSatVolumesEvent::MergeImpl,
          &CMsgDisableSatVolumesEvent::kDescriptorMethods,
          &descriptor_table_citadel_5fgameevents_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> CMsgDisableSatVolumesEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CMsgDisableSatVolumesEvent_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CMsgDisableSatVolumesEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata CMsgDisableSatVolumesEvent::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_citadel_5fgameevents_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
