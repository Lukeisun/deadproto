// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steammessages.proto
// Protobuf C++ Version: 5.27.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_steammessages_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_steammessages_2eproto;
class CGCMsgGetIPLocationResponse;
struct CGCMsgGetIPLocationResponseDefaultTypeInternal;
extern CGCMsgGetIPLocationResponseDefaultTypeInternal _CGCMsgGetIPLocationResponse_default_instance_;
class CGCSystemMsg_GetAccountDetails;
struct CGCSystemMsg_GetAccountDetailsDefaultTypeInternal;
extern CGCSystemMsg_GetAccountDetailsDefaultTypeInternal _CGCSystemMsg_GetAccountDetails_default_instance_;
class CGCSystemMsg_GetAccountDetails_Response;
struct CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal;
extern CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal _CGCSystemMsg_GetAccountDetails_Response_default_instance_;
class CIPLocationInfo;
struct CIPLocationInfoDefaultTypeInternal;
extern CIPLocationInfoDefaultTypeInternal _CIPLocationInfo_default_instance_;
class CMsgProtoBufHeader;
struct CMsgProtoBufHeaderDefaultTypeInternal;
extern CMsgProtoBufHeaderDefaultTypeInternal _CMsgProtoBufHeader_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum EGCPlatform : int {
  k_eGCPlatform_None = 0,
  k_eGCPlatform_PC = 1,
  k_eGCPlatform_Mac = 2,
  k_eGCPlatform_Linux = 3,
  k_eGCPlatform_Android = 4,
  k_eGCPlatform_iOS = 5,
};

bool EGCPlatform_IsValid(int value);
extern const uint32_t EGCPlatform_internal_data_[];
constexpr EGCPlatform EGCPlatform_MIN = static_cast<EGCPlatform>(0);
constexpr EGCPlatform EGCPlatform_MAX = static_cast<EGCPlatform>(5);
constexpr int EGCPlatform_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
EGCPlatform_descriptor();
template <typename T>
const std::string& EGCPlatform_Name(T value) {
  static_assert(std::is_same<T, EGCPlatform>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EGCPlatform_Name().");
  return EGCPlatform_Name(static_cast<EGCPlatform>(value));
}
template <>
inline const std::string& EGCPlatform_Name(EGCPlatform value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EGCPlatform_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool EGCPlatform_Parse(absl::string_view name, EGCPlatform* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCPlatform>(
      EGCPlatform_descriptor(), name, value);
}
enum GCProtoBufMsgSrc : int {
  GCProtoBufMsgSrc_Unspecified = 0,
  GCProtoBufMsgSrc_FromSystem = 1,
  GCProtoBufMsgSrc_FromSteamID = 2,
  GCProtoBufMsgSrc_FromGC = 3,
  GCProtoBufMsgSrc_ReplySystem = 4,
  GCProtoBufMsgSrc_SpoofedSteamID = 5,
};

bool GCProtoBufMsgSrc_IsValid(int value);
extern const uint32_t GCProtoBufMsgSrc_internal_data_[];
constexpr GCProtoBufMsgSrc GCProtoBufMsgSrc_MIN = static_cast<GCProtoBufMsgSrc>(0);
constexpr GCProtoBufMsgSrc GCProtoBufMsgSrc_MAX = static_cast<GCProtoBufMsgSrc>(5);
constexpr int GCProtoBufMsgSrc_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
GCProtoBufMsgSrc_descriptor();
template <typename T>
const std::string& GCProtoBufMsgSrc_Name(T value) {
  static_assert(std::is_same<T, GCProtoBufMsgSrc>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to GCProtoBufMsgSrc_Name().");
  return GCProtoBufMsgSrc_Name(static_cast<GCProtoBufMsgSrc>(value));
}
template <>
inline const std::string& GCProtoBufMsgSrc_Name(GCProtoBufMsgSrc value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GCProtoBufMsgSrc_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool GCProtoBufMsgSrc_Parse(absl::string_view name, GCProtoBufMsgSrc* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GCProtoBufMsgSrc>(
      GCProtoBufMsgSrc_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class CMsgProtoBufHeader final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CMsgProtoBufHeader) */ {
 public:
  inline CMsgProtoBufHeader() : CMsgProtoBufHeader(nullptr) {}
  ~CMsgProtoBufHeader() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CMsgProtoBufHeader(
      ::google::protobuf::internal::ConstantInitialized);

  inline CMsgProtoBufHeader(const CMsgProtoBufHeader& from) : CMsgProtoBufHeader(nullptr, from) {}
  inline CMsgProtoBufHeader(CMsgProtoBufHeader&& from) noexcept
      : CMsgProtoBufHeader(nullptr, std::move(from)) {}
  inline CMsgProtoBufHeader& operator=(const CMsgProtoBufHeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgProtoBufHeader& operator=(CMsgProtoBufHeader&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CMsgProtoBufHeader& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgProtoBufHeader* internal_default_instance() {
    return reinterpret_cast<const CMsgProtoBufHeader*>(
        &_CMsgProtoBufHeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(CMsgProtoBufHeader& a, CMsgProtoBufHeader& b) { a.Swap(&b); }
  inline void Swap(CMsgProtoBufHeader* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgProtoBufHeader* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CMsgProtoBufHeader* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CMsgProtoBufHeader>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CMsgProtoBufHeader& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CMsgProtoBufHeader& from) { CMsgProtoBufHeader::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CMsgProtoBufHeader* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CMsgProtoBufHeader"; }

 protected:
  explicit CMsgProtoBufHeader(::google::protobuf::Arena* arena);
  CMsgProtoBufHeader(::google::protobuf::Arena* arena, const CMsgProtoBufHeader& from);
  CMsgProtoBufHeader(::google::protobuf::Arena* arena, CMsgProtoBufHeader&& from) noexcept
      : CMsgProtoBufHeader(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetJobNameFieldNumber = 12,
    kErrorMessageFieldNumber = 14,
    kClientSteamIdFieldNumber = 1,
    kClientSessionIdFieldNumber = 2,
    kSourceAppIdFieldNumber = 3,
    kGcMsgSrcFieldNumber = 200,
    kJobIdSourceFieldNumber = 10,
    kJobIdTargetFieldNumber = 11,
    kEresultFieldNumber = 13,
    kGcDirIndexSourceFieldNumber = 201,
  };
  // optional string target_job_name = 12;
  bool has_target_job_name() const;
  void clear_target_job_name() ;
  const std::string& target_job_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_target_job_name(Arg_&& arg, Args_... args);
  std::string* mutable_target_job_name();
  PROTOBUF_NODISCARD std::string* release_target_job_name();
  void set_allocated_target_job_name(std::string* value);

  private:
  const std::string& _internal_target_job_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_target_job_name(
      const std::string& value);
  std::string* _internal_mutable_target_job_name();

  public:
  // optional string error_message = 14;
  bool has_error_message() const;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // optional fixed64 client_steam_id = 1;
  bool has_client_steam_id() const;
  void clear_client_steam_id() ;
  ::uint64_t client_steam_id() const;
  void set_client_steam_id(::uint64_t value);

  private:
  ::uint64_t _internal_client_steam_id() const;
  void _internal_set_client_steam_id(::uint64_t value);

  public:
  // optional int32 client_session_id = 2;
  bool has_client_session_id() const;
  void clear_client_session_id() ;
  ::int32_t client_session_id() const;
  void set_client_session_id(::int32_t value);

  private:
  ::int32_t _internal_client_session_id() const;
  void _internal_set_client_session_id(::int32_t value);

  public:
  // optional uint32 source_app_id = 3;
  bool has_source_app_id() const;
  void clear_source_app_id() ;
  ::uint32_t source_app_id() const;
  void set_source_app_id(::uint32_t value);

  private:
  ::uint32_t _internal_source_app_id() const;
  void _internal_set_source_app_id(::uint32_t value);

  public:
  // optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
  bool has_gc_msg_src() const;
  void clear_gc_msg_src() ;
  ::GCProtoBufMsgSrc gc_msg_src() const;
  void set_gc_msg_src(::GCProtoBufMsgSrc value);

  private:
  ::GCProtoBufMsgSrc _internal_gc_msg_src() const;
  void _internal_set_gc_msg_src(::GCProtoBufMsgSrc value);

  public:
  // optional fixed64 job_id_source = 10 [default = 18446744073709551615];
  bool has_job_id_source() const;
  void clear_job_id_source() ;
  ::uint64_t job_id_source() const;
  void set_job_id_source(::uint64_t value);

  private:
  ::uint64_t _internal_job_id_source() const;
  void _internal_set_job_id_source(::uint64_t value);

  public:
  // optional fixed64 job_id_target = 11 [default = 18446744073709551615];
  bool has_job_id_target() const;
  void clear_job_id_target() ;
  ::uint64_t job_id_target() const;
  void set_job_id_target(::uint64_t value);

  private:
  ::uint64_t _internal_job_id_target() const;
  void _internal_set_job_id_target(::uint64_t value);

  public:
  // optional int32 eresult = 13 [default = 2];
  bool has_eresult() const;
  void clear_eresult() ;
  ::int32_t eresult() const;
  void set_eresult(::int32_t value);

  private:
  ::int32_t _internal_eresult() const;
  void _internal_set_eresult(::int32_t value);

  public:
  // optional int32 gc_dir_index_source = 201 [default = -1];
  bool has_gc_dir_index_source() const;
  void clear_gc_dir_index_source() ;
  ::int32_t gc_dir_index_source() const;
  void set_gc_dir_index_source(::int32_t value);

  private:
  ::int32_t _internal_gc_dir_index_source() const;
  void _internal_set_gc_dir_index_source(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CMsgProtoBufHeader)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      63, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CMsgProtoBufHeader_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CMsgProtoBufHeader& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr target_job_name_;
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::uint64_t client_steam_id_;
    ::int32_t client_session_id_;
    ::uint32_t source_app_id_;
    int gc_msg_src_;
    ::uint64_t job_id_source_;
    ::uint64_t job_id_target_;
    ::int32_t eresult_;
    ::int32_t gc_dir_index_source_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CIPLocationInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CIPLocationInfo) */ {
 public:
  inline CIPLocationInfo() : CIPLocationInfo(nullptr) {}
  ~CIPLocationInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CIPLocationInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline CIPLocationInfo(const CIPLocationInfo& from) : CIPLocationInfo(nullptr, from) {}
  inline CIPLocationInfo(CIPLocationInfo&& from) noexcept
      : CIPLocationInfo(nullptr, std::move(from)) {}
  inline CIPLocationInfo& operator=(const CIPLocationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CIPLocationInfo& operator=(CIPLocationInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CIPLocationInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CIPLocationInfo* internal_default_instance() {
    return reinterpret_cast<const CIPLocationInfo*>(
        &_CIPLocationInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CIPLocationInfo& a, CIPLocationInfo& b) { a.Swap(&b); }
  inline void Swap(CIPLocationInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CIPLocationInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CIPLocationInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CIPLocationInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CIPLocationInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CIPLocationInfo& from) { CIPLocationInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CIPLocationInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CIPLocationInfo"; }

 protected:
  explicit CIPLocationInfo(::google::protobuf::Arena* arena);
  CIPLocationInfo(::google::protobuf::Arena* arena, const CIPLocationInfo& from);
  CIPLocationInfo(::google::protobuf::Arena* arena, CIPLocationInfo&& from) noexcept
      : CIPLocationInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCountryFieldNumber = 4,
    kStateFieldNumber = 5,
    kCityFieldNumber = 6,
    kIpFieldNumber = 1,
    kLatitudeFieldNumber = 2,
    kLongitudeFieldNumber = 3,
  };
  // optional string country = 4;
  bool has_country() const;
  void clear_country() ;
  const std::string& country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* value);

  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(
      const std::string& value);
  std::string* _internal_mutable_country();

  public:
  // optional string state = 5;
  bool has_state() const;
  void clear_state() ;
  const std::string& state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  std::string* mutable_state();
  PROTOBUF_NODISCARD std::string* release_state();
  void set_allocated_state(std::string* value);

  private:
  const std::string& _internal_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state(
      const std::string& value);
  std::string* _internal_mutable_state();

  public:
  // optional string city = 6;
  bool has_city() const;
  void clear_city() ;
  const std::string& city() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  std::string* mutable_city();
  PROTOBUF_NODISCARD std::string* release_city();
  void set_allocated_city(std::string* value);

  private:
  const std::string& _internal_city() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_city(
      const std::string& value);
  std::string* _internal_mutable_city();

  public:
  // optional uint32 ip = 1;
  bool has_ip() const;
  void clear_ip() ;
  ::uint32_t ip() const;
  void set_ip(::uint32_t value);

  private:
  ::uint32_t _internal_ip() const;
  void _internal_set_ip(::uint32_t value);

  public:
  // optional float latitude = 2;
  bool has_latitude() const;
  void clear_latitude() ;
  float latitude() const;
  void set_latitude(float value);

  private:
  float _internal_latitude() const;
  void _internal_set_latitude(float value);

  public:
  // optional float longitude = 3;
  bool has_longitude() const;
  void clear_longitude() ;
  float longitude() const;
  void set_longitude(float value);

  private:
  float _internal_longitude() const;
  void _internal_set_longitude(float value);

  public:
  // @@protoc_insertion_point(class_scope:CIPLocationInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CIPLocationInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CIPLocationInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    ::uint32_t ip_;
    float latitude_;
    float longitude_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetAccountDetails_Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CGCSystemMsg_GetAccountDetails_Response) */ {
 public:
  inline CGCSystemMsg_GetAccountDetails_Response() : CGCSystemMsg_GetAccountDetails_Response(nullptr) {}
  ~CGCSystemMsg_GetAccountDetails_Response() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CGCSystemMsg_GetAccountDetails_Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline CGCSystemMsg_GetAccountDetails_Response(const CGCSystemMsg_GetAccountDetails_Response& from) : CGCSystemMsg_GetAccountDetails_Response(nullptr, from) {}
  inline CGCSystemMsg_GetAccountDetails_Response(CGCSystemMsg_GetAccountDetails_Response&& from) noexcept
      : CGCSystemMsg_GetAccountDetails_Response(nullptr, std::move(from)) {}
  inline CGCSystemMsg_GetAccountDetails_Response& operator=(const CGCSystemMsg_GetAccountDetails_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCSystemMsg_GetAccountDetails_Response& operator=(CGCSystemMsg_GetAccountDetails_Response&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGCSystemMsg_GetAccountDetails_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCSystemMsg_GetAccountDetails_Response* internal_default_instance() {
    return reinterpret_cast<const CGCSystemMsg_GetAccountDetails_Response*>(
        &_CGCSystemMsg_GetAccountDetails_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CGCSystemMsg_GetAccountDetails_Response& a, CGCSystemMsg_GetAccountDetails_Response& b) { a.Swap(&b); }
  inline void Swap(CGCSystemMsg_GetAccountDetails_Response* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCSystemMsg_GetAccountDetails_Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGCSystemMsg_GetAccountDetails_Response* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CGCSystemMsg_GetAccountDetails_Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CGCSystemMsg_GetAccountDetails_Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CGCSystemMsg_GetAccountDetails_Response& from) { CGCSystemMsg_GetAccountDetails_Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CGCSystemMsg_GetAccountDetails_Response* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CGCSystemMsg_GetAccountDetails_Response"; }

 protected:
  explicit CGCSystemMsg_GetAccountDetails_Response(::google::protobuf::Arena* arena);
  CGCSystemMsg_GetAccountDetails_Response(::google::protobuf::Arena* arena, const CGCSystemMsg_GetAccountDetails_Response& from);
  CGCSystemMsg_GetAccountDetails_Response(::google::protobuf::Arena* arena, CGCSystemMsg_GetAccountDetails_Response&& from) noexcept
      : CGCSystemMsg_GetAccountDetails_Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNameFieldNumber = 2,
    kPersonaNameFieldNumber = 3,
    kCurrencyFieldNumber = 22,
    kTxnCountryCodeFieldNumber = 37,
    kIsCyberCafeFieldNumber = 8,
    kIsSchoolAccountFieldNumber = 9,
    kIsLimitedFieldNumber = 10,
    kIsSubscribedFieldNumber = 11,
    kIsProfileCreatedFieldNumber = 26,
    kIsProfilePublicFieldNumber = 4,
    kIsInventoryPublicFieldNumber = 5,
    kIsVacBannedFieldNumber = 7,
    kPackageFieldNumber = 12,
    kFreeTrialExpirationFieldNumber = 14,
    kIsFreeTrialAccountFieldNumber = 13,
    kIsLowViolenceFieldNumber = 15,
    kIsAccountLockedDownFieldNumber = 16,
    kIsCommunityBannedFieldNumber = 17,
    kTradeBanExpirationFieldNumber = 19,
    kAccountidFieldNumber = 20,
    kSuspensionEndTimeFieldNumber = 21,
    kSteamLevelFieldNumber = 23,
    kFriendCountFieldNumber = 24,
    kAccountCreationTimeFieldNumber = 25,
    kIsTradeBannedFieldNumber = 18,
    kIsSteamguardEnabledFieldNumber = 27,
    kIsPhoneVerifiedFieldNumber = 28,
    kIsTwoFactorAuthEnabledFieldNumber = 29,
    kTwoFactorEnabledTimeFieldNumber = 30,
    kPhoneVerificationTimeFieldNumber = 31,
    kPhoneIdFieldNumber = 33,
    kRtIdentityLinkedFieldNumber = 35,
    kRtBirthDateFieldNumber = 36,
    kIsPhoneIdentifyingFieldNumber = 34,
    kHasAcceptedChinaSsaFieldNumber = 38,
    kIsBannedSteamChinaFieldNumber = 39,
    kEresultDeprecatedFieldNumber = 1,
  };
  // optional string account_name = 2;
  bool has_account_name() const;
  void clear_account_name() ;
  const std::string& account_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_name(Arg_&& arg, Args_... args);
  std::string* mutable_account_name();
  PROTOBUF_NODISCARD std::string* release_account_name();
  void set_allocated_account_name(std::string* value);

  private:
  const std::string& _internal_account_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_name(
      const std::string& value);
  std::string* _internal_mutable_account_name();

  public:
  // optional string persona_name = 3;
  bool has_persona_name() const;
  void clear_persona_name() ;
  const std::string& persona_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_persona_name(Arg_&& arg, Args_... args);
  std::string* mutable_persona_name();
  PROTOBUF_NODISCARD std::string* release_persona_name();
  void set_allocated_persona_name(std::string* value);

  private:
  const std::string& _internal_persona_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_persona_name(
      const std::string& value);
  std::string* _internal_mutable_persona_name();

  public:
  // optional string currency = 22;
  bool has_currency() const;
  void clear_currency() ;
  const std::string& currency() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currency(Arg_&& arg, Args_... args);
  std::string* mutable_currency();
  PROTOBUF_NODISCARD std::string* release_currency();
  void set_allocated_currency(std::string* value);

  private:
  const std::string& _internal_currency() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currency(
      const std::string& value);
  std::string* _internal_mutable_currency();

  public:
  // optional string txn_country_code = 37;
  bool has_txn_country_code() const;
  void clear_txn_country_code() ;
  const std::string& txn_country_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txn_country_code(Arg_&& arg, Args_... args);
  std::string* mutable_txn_country_code();
  PROTOBUF_NODISCARD std::string* release_txn_country_code();
  void set_allocated_txn_country_code(std::string* value);

  private:
  const std::string& _internal_txn_country_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txn_country_code(
      const std::string& value);
  std::string* _internal_mutable_txn_country_code();

  public:
  // optional bool is_cyber_cafe = 8;
  bool has_is_cyber_cafe() const;
  void clear_is_cyber_cafe() ;
  bool is_cyber_cafe() const;
  void set_is_cyber_cafe(bool value);

  private:
  bool _internal_is_cyber_cafe() const;
  void _internal_set_is_cyber_cafe(bool value);

  public:
  // optional bool is_school_account = 9;
  bool has_is_school_account() const;
  void clear_is_school_account() ;
  bool is_school_account() const;
  void set_is_school_account(bool value);

  private:
  bool _internal_is_school_account() const;
  void _internal_set_is_school_account(bool value);

  public:
  // optional bool is_limited = 10;
  bool has_is_limited() const;
  void clear_is_limited() ;
  bool is_limited() const;
  void set_is_limited(bool value);

  private:
  bool _internal_is_limited() const;
  void _internal_set_is_limited(bool value);

  public:
  // optional bool is_subscribed = 11;
  bool has_is_subscribed() const;
  void clear_is_subscribed() ;
  bool is_subscribed() const;
  void set_is_subscribed(bool value);

  private:
  bool _internal_is_subscribed() const;
  void _internal_set_is_subscribed(bool value);

  public:
  // optional bool is_profile_created = 26;
  bool has_is_profile_created() const;
  void clear_is_profile_created() ;
  bool is_profile_created() const;
  void set_is_profile_created(bool value);

  private:
  bool _internal_is_profile_created() const;
  void _internal_set_is_profile_created(bool value);

  public:
  // optional bool is_profile_public = 4;
  bool has_is_profile_public() const;
  void clear_is_profile_public() ;
  bool is_profile_public() const;
  void set_is_profile_public(bool value);

  private:
  bool _internal_is_profile_public() const;
  void _internal_set_is_profile_public(bool value);

  public:
  // optional bool is_inventory_public = 5;
  bool has_is_inventory_public() const;
  void clear_is_inventory_public() ;
  bool is_inventory_public() const;
  void set_is_inventory_public(bool value);

  private:
  bool _internal_is_inventory_public() const;
  void _internal_set_is_inventory_public(bool value);

  public:
  // optional bool is_vac_banned = 7;
  bool has_is_vac_banned() const;
  void clear_is_vac_banned() ;
  bool is_vac_banned() const;
  void set_is_vac_banned(bool value);

  private:
  bool _internal_is_vac_banned() const;
  void _internal_set_is_vac_banned(bool value);

  public:
  // optional uint32 package = 12;
  bool has_package() const;
  void clear_package() ;
  ::uint32_t package() const;
  void set_package(::uint32_t value);

  private:
  ::uint32_t _internal_package() const;
  void _internal_set_package(::uint32_t value);

  public:
  // optional uint32 free_trial_expiration = 14;
  bool has_free_trial_expiration() const;
  void clear_free_trial_expiration() ;
  ::uint32_t free_trial_expiration() const;
  void set_free_trial_expiration(::uint32_t value);

  private:
  ::uint32_t _internal_free_trial_expiration() const;
  void _internal_set_free_trial_expiration(::uint32_t value);

  public:
  // optional bool is_free_trial_account = 13;
  bool has_is_free_trial_account() const;
  void clear_is_free_trial_account() ;
  bool is_free_trial_account() const;
  void set_is_free_trial_account(bool value);

  private:
  bool _internal_is_free_trial_account() const;
  void _internal_set_is_free_trial_account(bool value);

  public:
  // optional bool is_low_violence = 15;
  bool has_is_low_violence() const;
  void clear_is_low_violence() ;
  bool is_low_violence() const;
  void set_is_low_violence(bool value);

  private:
  bool _internal_is_low_violence() const;
  void _internal_set_is_low_violence(bool value);

  public:
  // optional bool is_account_locked_down = 16;
  bool has_is_account_locked_down() const;
  void clear_is_account_locked_down() ;
  bool is_account_locked_down() const;
  void set_is_account_locked_down(bool value);

  private:
  bool _internal_is_account_locked_down() const;
  void _internal_set_is_account_locked_down(bool value);

  public:
  // optional bool is_community_banned = 17;
  bool has_is_community_banned() const;
  void clear_is_community_banned() ;
  bool is_community_banned() const;
  void set_is_community_banned(bool value);

  private:
  bool _internal_is_community_banned() const;
  void _internal_set_is_community_banned(bool value);

  public:
  // optional uint32 trade_ban_expiration = 19;
  bool has_trade_ban_expiration() const;
  void clear_trade_ban_expiration() ;
  ::uint32_t trade_ban_expiration() const;
  void set_trade_ban_expiration(::uint32_t value);

  private:
  ::uint32_t _internal_trade_ban_expiration() const;
  void _internal_set_trade_ban_expiration(::uint32_t value);

  public:
  // optional uint32 accountid = 20;
  bool has_accountid() const;
  void clear_accountid() ;
  ::uint32_t accountid() const;
  void set_accountid(::uint32_t value);

  private:
  ::uint32_t _internal_accountid() const;
  void _internal_set_accountid(::uint32_t value);

  public:
  // optional uint32 suspension_end_time = 21;
  bool has_suspension_end_time() const;
  void clear_suspension_end_time() ;
  ::uint32_t suspension_end_time() const;
  void set_suspension_end_time(::uint32_t value);

  private:
  ::uint32_t _internal_suspension_end_time() const;
  void _internal_set_suspension_end_time(::uint32_t value);

  public:
  // optional uint32 steam_level = 23;
  bool has_steam_level() const;
  void clear_steam_level() ;
  ::uint32_t steam_level() const;
  void set_steam_level(::uint32_t value);

  private:
  ::uint32_t _internal_steam_level() const;
  void _internal_set_steam_level(::uint32_t value);

  public:
  // optional uint32 friend_count = 24;
  bool has_friend_count() const;
  void clear_friend_count() ;
  ::uint32_t friend_count() const;
  void set_friend_count(::uint32_t value);

  private:
  ::uint32_t _internal_friend_count() const;
  void _internal_set_friend_count(::uint32_t value);

  public:
  // optional uint32 account_creation_time = 25;
  bool has_account_creation_time() const;
  void clear_account_creation_time() ;
  ::uint32_t account_creation_time() const;
  void set_account_creation_time(::uint32_t value);

  private:
  ::uint32_t _internal_account_creation_time() const;
  void _internal_set_account_creation_time(::uint32_t value);

  public:
  // optional bool is_trade_banned = 18;
  bool has_is_trade_banned() const;
  void clear_is_trade_banned() ;
  bool is_trade_banned() const;
  void set_is_trade_banned(bool value);

  private:
  bool _internal_is_trade_banned() const;
  void _internal_set_is_trade_banned(bool value);

  public:
  // optional bool is_steamguard_enabled = 27;
  bool has_is_steamguard_enabled() const;
  void clear_is_steamguard_enabled() ;
  bool is_steamguard_enabled() const;
  void set_is_steamguard_enabled(bool value);

  private:
  bool _internal_is_steamguard_enabled() const;
  void _internal_set_is_steamguard_enabled(bool value);

  public:
  // optional bool is_phone_verified = 28;
  bool has_is_phone_verified() const;
  void clear_is_phone_verified() ;
  bool is_phone_verified() const;
  void set_is_phone_verified(bool value);

  private:
  bool _internal_is_phone_verified() const;
  void _internal_set_is_phone_verified(bool value);

  public:
  // optional bool is_two_factor_auth_enabled = 29;
  bool has_is_two_factor_auth_enabled() const;
  void clear_is_two_factor_auth_enabled() ;
  bool is_two_factor_auth_enabled() const;
  void set_is_two_factor_auth_enabled(bool value);

  private:
  bool _internal_is_two_factor_auth_enabled() const;
  void _internal_set_is_two_factor_auth_enabled(bool value);

  public:
  // optional uint32 two_factor_enabled_time = 30;
  bool has_two_factor_enabled_time() const;
  void clear_two_factor_enabled_time() ;
  ::uint32_t two_factor_enabled_time() const;
  void set_two_factor_enabled_time(::uint32_t value);

  private:
  ::uint32_t _internal_two_factor_enabled_time() const;
  void _internal_set_two_factor_enabled_time(::uint32_t value);

  public:
  // optional uint32 phone_verification_time = 31;
  bool has_phone_verification_time() const;
  void clear_phone_verification_time() ;
  ::uint32_t phone_verification_time() const;
  void set_phone_verification_time(::uint32_t value);

  private:
  ::uint32_t _internal_phone_verification_time() const;
  void _internal_set_phone_verification_time(::uint32_t value);

  public:
  // optional uint64 phone_id = 33;
  bool has_phone_id() const;
  void clear_phone_id() ;
  ::uint64_t phone_id() const;
  void set_phone_id(::uint64_t value);

  private:
  ::uint64_t _internal_phone_id() const;
  void _internal_set_phone_id(::uint64_t value);

  public:
  // optional uint32 rt_identity_linked = 35;
  bool has_rt_identity_linked() const;
  void clear_rt_identity_linked() ;
  ::uint32_t rt_identity_linked() const;
  void set_rt_identity_linked(::uint32_t value);

  private:
  ::uint32_t _internal_rt_identity_linked() const;
  void _internal_set_rt_identity_linked(::uint32_t value);

  public:
  // optional uint32 rt_birth_date = 36;
  bool has_rt_birth_date() const;
  void clear_rt_birth_date() ;
  ::uint32_t rt_birth_date() const;
  void set_rt_birth_date(::uint32_t value);

  private:
  ::uint32_t _internal_rt_birth_date() const;
  void _internal_set_rt_birth_date(::uint32_t value);

  public:
  // optional bool is_phone_identifying = 34;
  bool has_is_phone_identifying() const;
  void clear_is_phone_identifying() ;
  bool is_phone_identifying() const;
  void set_is_phone_identifying(bool value);

  private:
  bool _internal_is_phone_identifying() const;
  void _internal_set_is_phone_identifying(bool value);

  public:
  // optional bool has_accepted_china_ssa = 38;
  bool has_has_accepted_china_ssa() const;
  void clear_has_accepted_china_ssa() ;
  bool has_accepted_china_ssa() const;
  void set_has_accepted_china_ssa(bool value);

  private:
  bool _internal_has_accepted_china_ssa() const;
  void _internal_set_has_accepted_china_ssa(bool value);

  public:
  // optional bool is_banned_steam_china = 39;
  bool has_is_banned_steam_china() const;
  void clear_is_banned_steam_china() ;
  bool is_banned_steam_china() const;
  void set_is_banned_steam_china(bool value);

  private:
  bool _internal_is_banned_steam_china() const;
  void _internal_set_is_banned_steam_china(bool value);

  public:
  // optional uint32 eresult_deprecated = 1 [default = 2];
  bool has_eresult_deprecated() const;
  void clear_eresult_deprecated() ;
  ::uint32_t eresult_deprecated() const;
  void set_eresult_deprecated(::uint32_t value);

  private:
  ::uint32_t _internal_eresult_deprecated() const;
  void _internal_set_eresult_deprecated(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CGCSystemMsg_GetAccountDetails_Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 37, 0,
      128, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CGCSystemMsg_GetAccountDetails_Response_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CGCSystemMsg_GetAccountDetails_Response& from_msg);
    ::google::protobuf::internal::HasBits<2> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr account_name_;
    ::google::protobuf::internal::ArenaStringPtr persona_name_;
    ::google::protobuf::internal::ArenaStringPtr currency_;
    ::google::protobuf::internal::ArenaStringPtr txn_country_code_;
    bool is_cyber_cafe_;
    bool is_school_account_;
    bool is_limited_;
    bool is_subscribed_;
    bool is_profile_created_;
    bool is_profile_public_;
    bool is_inventory_public_;
    bool is_vac_banned_;
    ::uint32_t package_;
    ::uint32_t free_trial_expiration_;
    bool is_free_trial_account_;
    bool is_low_violence_;
    bool is_account_locked_down_;
    bool is_community_banned_;
    ::uint32_t trade_ban_expiration_;
    ::uint32_t accountid_;
    ::uint32_t suspension_end_time_;
    ::uint32_t steam_level_;
    ::uint32_t friend_count_;
    ::uint32_t account_creation_time_;
    bool is_trade_banned_;
    bool is_steamguard_enabled_;
    bool is_phone_verified_;
    bool is_two_factor_auth_enabled_;
    ::uint32_t two_factor_enabled_time_;
    ::uint32_t phone_verification_time_;
    ::uint64_t phone_id_;
    ::uint32_t rt_identity_linked_;
    ::uint32_t rt_birth_date_;
    bool is_phone_identifying_;
    bool has_accepted_china_ssa_;
    bool is_banned_steam_china_;
    ::uint32_t eresult_deprecated_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCSystemMsg_GetAccountDetails final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CGCSystemMsg_GetAccountDetails) */ {
 public:
  inline CGCSystemMsg_GetAccountDetails() : CGCSystemMsg_GetAccountDetails(nullptr) {}
  ~CGCSystemMsg_GetAccountDetails() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CGCSystemMsg_GetAccountDetails(
      ::google::protobuf::internal::ConstantInitialized);

  inline CGCSystemMsg_GetAccountDetails(const CGCSystemMsg_GetAccountDetails& from) : CGCSystemMsg_GetAccountDetails(nullptr, from) {}
  inline CGCSystemMsg_GetAccountDetails(CGCSystemMsg_GetAccountDetails&& from) noexcept
      : CGCSystemMsg_GetAccountDetails(nullptr, std::move(from)) {}
  inline CGCSystemMsg_GetAccountDetails& operator=(const CGCSystemMsg_GetAccountDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCSystemMsg_GetAccountDetails& operator=(CGCSystemMsg_GetAccountDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGCSystemMsg_GetAccountDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCSystemMsg_GetAccountDetails* internal_default_instance() {
    return reinterpret_cast<const CGCSystemMsg_GetAccountDetails*>(
        &_CGCSystemMsg_GetAccountDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CGCSystemMsg_GetAccountDetails& a, CGCSystemMsg_GetAccountDetails& b) { a.Swap(&b); }
  inline void Swap(CGCSystemMsg_GetAccountDetails* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCSystemMsg_GetAccountDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGCSystemMsg_GetAccountDetails* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CGCSystemMsg_GetAccountDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CGCSystemMsg_GetAccountDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CGCSystemMsg_GetAccountDetails& from) { CGCSystemMsg_GetAccountDetails::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CGCSystemMsg_GetAccountDetails* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CGCSystemMsg_GetAccountDetails"; }

 protected:
  explicit CGCSystemMsg_GetAccountDetails(::google::protobuf::Arena* arena);
  CGCSystemMsg_GetAccountDetails(::google::protobuf::Arena* arena, const CGCSystemMsg_GetAccountDetails& from);
  CGCSystemMsg_GetAccountDetails(::google::protobuf::Arena* arena, CGCSystemMsg_GetAccountDetails&& from) noexcept
      : CGCSystemMsg_GetAccountDetails(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSteamidFieldNumber = 1,
    kAppidFieldNumber = 2,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid() ;
  ::uint64_t steamid() const;
  void set_steamid(::uint64_t value);

  private:
  ::uint64_t _internal_steamid() const;
  void _internal_set_steamid(::uint64_t value);

  public:
  // optional uint32 appid = 2;
  bool has_appid() const;
  void clear_appid() ;
  ::uint32_t appid() const;
  void set_appid(::uint32_t value);

  private:
  ::uint32_t _internal_appid() const;
  void _internal_set_appid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:CGCSystemMsg_GetAccountDetails)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CGCSystemMsg_GetAccountDetails_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CGCSystemMsg_GetAccountDetails& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t steamid_;
    ::uint32_t appid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgGetIPLocationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CGCMsgGetIPLocationResponse) */ {
 public:
  inline CGCMsgGetIPLocationResponse() : CGCMsgGetIPLocationResponse(nullptr) {}
  ~CGCMsgGetIPLocationResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CGCMsgGetIPLocationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CGCMsgGetIPLocationResponse(const CGCMsgGetIPLocationResponse& from) : CGCMsgGetIPLocationResponse(nullptr, from) {}
  inline CGCMsgGetIPLocationResponse(CGCMsgGetIPLocationResponse&& from) noexcept
      : CGCMsgGetIPLocationResponse(nullptr, std::move(from)) {}
  inline CGCMsgGetIPLocationResponse& operator=(const CGCMsgGetIPLocationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCMsgGetIPLocationResponse& operator=(CGCMsgGetIPLocationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CGCMsgGetIPLocationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCMsgGetIPLocationResponse* internal_default_instance() {
    return reinterpret_cast<const CGCMsgGetIPLocationResponse*>(
        &_CGCMsgGetIPLocationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CGCMsgGetIPLocationResponse& a, CGCMsgGetIPLocationResponse& b) { a.Swap(&b); }
  inline void Swap(CGCMsgGetIPLocationResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCMsgGetIPLocationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CGCMsgGetIPLocationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CGCMsgGetIPLocationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CGCMsgGetIPLocationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CGCMsgGetIPLocationResponse& from) { CGCMsgGetIPLocationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CGCMsgGetIPLocationResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CGCMsgGetIPLocationResponse"; }

 protected:
  explicit CGCMsgGetIPLocationResponse(::google::protobuf::Arena* arena);
  CGCMsgGetIPLocationResponse(::google::protobuf::Arena* arena, const CGCMsgGetIPLocationResponse& from);
  CGCMsgGetIPLocationResponse(::google::protobuf::Arena* arena, CGCMsgGetIPLocationResponse&& from) noexcept
      : CGCMsgGetIPLocationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfosFieldNumber = 1,
  };
  // repeated .CIPLocationInfo infos = 1;
  int infos_size() const;
  private:
  int _internal_infos_size() const;

  public:
  void clear_infos() ;
  ::CIPLocationInfo* mutable_infos(int index);
  ::google::protobuf::RepeatedPtrField<::CIPLocationInfo>* mutable_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::CIPLocationInfo>& _internal_infos() const;
  ::google::protobuf::RepeatedPtrField<::CIPLocationInfo>* _internal_mutable_infos();
  public:
  const ::CIPLocationInfo& infos(int index) const;
  ::CIPLocationInfo* add_infos();
  const ::google::protobuf::RepeatedPtrField<::CIPLocationInfo>& infos() const;
  // @@protoc_insertion_point(class_scope:CGCMsgGetIPLocationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CGCMsgGetIPLocationResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CGCMsgGetIPLocationResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::CIPLocationInfo > infos_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steammessages_2eproto;
};

// ===================================================================



static const int kKeyFieldFieldNumber = 60000;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8,
    false>
    key_field;
static const int kMsgpoolSoftLimitFieldNumber = 60000;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
    false>
    msgpool_soft_limit;
static const int kMsgpoolHardLimitFieldNumber = 60001;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::PrimitiveTypeTraits< ::int32_t >, 5,
    false>
    msgpool_hard_limit;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CMsgProtoBufHeader

// optional fixed64 client_steam_id = 1;
inline bool CMsgProtoBufHeader::has_client_steam_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_client_steam_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_steam_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t CMsgProtoBufHeader::client_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.client_steam_id)
  return _internal_client_steam_id();
}
inline void CMsgProtoBufHeader::set_client_steam_id(::uint64_t value) {
  _internal_set_client_steam_id(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.client_steam_id)
}
inline ::uint64_t CMsgProtoBufHeader::_internal_client_steam_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_steam_id_;
}
inline void CMsgProtoBufHeader::_internal_set_client_steam_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_steam_id_ = value;
}

// optional int32 client_session_id = 2;
inline bool CMsgProtoBufHeader::has_client_session_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_client_session_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_session_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t CMsgProtoBufHeader::client_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.client_session_id)
  return _internal_client_session_id();
}
inline void CMsgProtoBufHeader::set_client_session_id(::int32_t value) {
  _internal_set_client_session_id(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.client_session_id)
}
inline ::int32_t CMsgProtoBufHeader::_internal_client_session_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_session_id_;
}
inline void CMsgProtoBufHeader::_internal_set_client_session_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_session_id_ = value;
}

// optional uint32 source_app_id = 3;
inline bool CMsgProtoBufHeader::has_source_app_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_source_app_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_app_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t CMsgProtoBufHeader::source_app_id() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.source_app_id)
  return _internal_source_app_id();
}
inline void CMsgProtoBufHeader::set_source_app_id(::uint32_t value) {
  _internal_set_source_app_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.source_app_id)
}
inline ::uint32_t CMsgProtoBufHeader::_internal_source_app_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_app_id_;
}
inline void CMsgProtoBufHeader::_internal_set_source_app_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_app_id_ = value;
}

// optional fixed64 job_id_source = 10 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_job_id_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_job_id_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_source_ = ::uint64_t{18446744073709551615u};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint64_t CMsgProtoBufHeader::job_id_source() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.job_id_source)
  return _internal_job_id_source();
}
inline void CMsgProtoBufHeader::set_job_id_source(::uint64_t value) {
  _internal_set_job_id_source(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.job_id_source)
}
inline ::uint64_t CMsgProtoBufHeader::_internal_job_id_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.job_id_source_;
}
inline void CMsgProtoBufHeader::_internal_set_job_id_source(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_source_ = value;
}

// optional fixed64 job_id_target = 11 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_job_id_target() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_job_id_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_target_ = ::uint64_t{18446744073709551615u};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint64_t CMsgProtoBufHeader::job_id_target() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.job_id_target)
  return _internal_job_id_target();
}
inline void CMsgProtoBufHeader::set_job_id_target(::uint64_t value) {
  _internal_set_job_id_target(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.job_id_target)
}
inline ::uint64_t CMsgProtoBufHeader::_internal_job_id_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.job_id_target_;
}
inline void CMsgProtoBufHeader::_internal_set_job_id_target(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_target_ = value;
}

// optional string target_job_name = 12;
inline bool CMsgProtoBufHeader::has_target_job_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_target_job_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_job_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgProtoBufHeader::target_job_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.target_job_name)
  return _internal_target_job_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgProtoBufHeader::set_target_job_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_job_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.target_job_name)
}
inline std::string* CMsgProtoBufHeader::mutable_target_job_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_target_job_name();
  // @@protoc_insertion_point(field_mutable:CMsgProtoBufHeader.target_job_name)
  return _s;
}
inline const std::string& CMsgProtoBufHeader::_internal_target_job_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_job_name_.Get();
}
inline void CMsgProtoBufHeader::_internal_set_target_job_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_job_name_.Set(value, GetArena());
}
inline std::string* CMsgProtoBufHeader::_internal_mutable_target_job_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.target_job_name_.Mutable( GetArena());
}
inline std::string* CMsgProtoBufHeader::release_target_job_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgProtoBufHeader.target_job_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.target_job_name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.target_job_name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgProtoBufHeader::set_allocated_target_job_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.target_job_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.target_job_name_.IsDefault()) {
          _impl_.target_job_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgProtoBufHeader.target_job_name)
}

// optional int32 eresult = 13 [default = 2];
inline bool CMsgProtoBufHeader::has_eresult() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_eresult() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eresult_ = 2;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t CMsgProtoBufHeader::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.eresult)
  return _internal_eresult();
}
inline void CMsgProtoBufHeader::set_eresult(::int32_t value) {
  _internal_set_eresult(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.eresult)
}
inline ::int32_t CMsgProtoBufHeader::_internal_eresult() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eresult_;
}
inline void CMsgProtoBufHeader::_internal_set_eresult(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eresult_ = value;
}

// optional string error_message = 14;
inline bool CMsgProtoBufHeader::has_error_message() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgProtoBufHeader::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CMsgProtoBufHeader::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.error_message)
}
inline std::string* CMsgProtoBufHeader::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:CMsgProtoBufHeader.error_message)
  return _s;
}
inline const std::string& CMsgProtoBufHeader::_internal_error_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_message_.Get();
}
inline void CMsgProtoBufHeader::_internal_set_error_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* CMsgProtoBufHeader::_internal_mutable_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* CMsgProtoBufHeader::release_error_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CMsgProtoBufHeader.error_message)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.error_message_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CMsgProtoBufHeader::set_allocated_error_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.error_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_message_.IsDefault()) {
          _impl_.error_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CMsgProtoBufHeader.error_message)
}

// optional .GCProtoBufMsgSrc gc_msg_src = 200 [default = GCProtoBufMsgSrc_Unspecified];
inline bool CMsgProtoBufHeader::has_gc_msg_src() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_gc_msg_src() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gc_msg_src_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::GCProtoBufMsgSrc CMsgProtoBufHeader::gc_msg_src() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.gc_msg_src)
  return _internal_gc_msg_src();
}
inline void CMsgProtoBufHeader::set_gc_msg_src(::GCProtoBufMsgSrc value) {
  _internal_set_gc_msg_src(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.gc_msg_src)
}
inline ::GCProtoBufMsgSrc CMsgProtoBufHeader::_internal_gc_msg_src() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::GCProtoBufMsgSrc>(_impl_.gc_msg_src_);
}
inline void CMsgProtoBufHeader::_internal_set_gc_msg_src(::GCProtoBufMsgSrc value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::GCProtoBufMsgSrc_IsValid(value));
  _impl_.gc_msg_src_ = value;
}

// optional int32 gc_dir_index_source = 201 [default = -1];
inline bool CMsgProtoBufHeader::has_gc_dir_index_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CMsgProtoBufHeader::clear_gc_dir_index_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gc_dir_index_source_ = -1;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t CMsgProtoBufHeader::gc_dir_index_source() const {
  // @@protoc_insertion_point(field_get:CMsgProtoBufHeader.gc_dir_index_source)
  return _internal_gc_dir_index_source();
}
inline void CMsgProtoBufHeader::set_gc_dir_index_source(::int32_t value) {
  _internal_set_gc_dir_index_source(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CMsgProtoBufHeader.gc_dir_index_source)
}
inline ::int32_t CMsgProtoBufHeader::_internal_gc_dir_index_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gc_dir_index_source_;
}
inline void CMsgProtoBufHeader::_internal_set_gc_dir_index_source(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gc_dir_index_source_ = value;
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetAccountDetails

// optional fixed64 steamid = 1;
inline bool CGCSystemMsg_GetAccountDetails::has_steamid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails::clear_steamid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CGCSystemMsg_GetAccountDetails::steamid() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails.steamid)
  return _internal_steamid();
}
inline void CGCSystemMsg_GetAccountDetails::set_steamid(::uint64_t value) {
  _internal_set_steamid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails.steamid)
}
inline ::uint64_t CGCSystemMsg_GetAccountDetails::_internal_steamid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steamid_;
}
inline void CGCSystemMsg_GetAccountDetails::_internal_set_steamid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steamid_ = value;
}

// optional uint32 appid = 2;
inline bool CGCSystemMsg_GetAccountDetails::has_appid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails::clear_appid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails::appid() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails.appid)
  return _internal_appid();
}
inline void CGCSystemMsg_GetAccountDetails::set_appid(::uint32_t value) {
  _internal_set_appid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails.appid)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails::_internal_appid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.appid_;
}
inline void CGCSystemMsg_GetAccountDetails::_internal_set_appid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.appid_ = value;
}

// -------------------------------------------------------------------

// CGCSystemMsg_GetAccountDetails_Response

// optional uint32 eresult_deprecated = 1 [default = 2];
inline bool CGCSystemMsg_GetAccountDetails_Response::has_eresult_deprecated() const {
  bool value = (_impl_._has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_eresult_deprecated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eresult_deprecated_ = 2u;
  _impl_._has_bits_[1] &= ~0x00000010u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::eresult_deprecated() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.eresult_deprecated)
  return _internal_eresult_deprecated();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_eresult_deprecated(::uint32_t value) {
  _internal_set_eresult_deprecated(value);
  _impl_._has_bits_[1] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.eresult_deprecated)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_eresult_deprecated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.eresult_deprecated_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_eresult_deprecated(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.eresult_deprecated_ = value;
}

// optional string account_name = 2;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_account_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_account_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CGCSystemMsg_GetAccountDetails_Response::account_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.account_name)
  return _internal_account_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CGCSystemMsg_GetAccountDetails_Response::set_account_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.account_name)
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_account_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_name();
  // @@protoc_insertion_point(field_mutable:CGCSystemMsg_GetAccountDetails_Response.account_name)
  return _s;
}
inline const std::string& CGCSystemMsg_GetAccountDetails_Response::_internal_account_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_name_.Get();
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_account_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.account_name_.Set(value, GetArena());
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::_internal_mutable_account_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.account_name_.Mutable( GetArena());
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::release_account_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGCSystemMsg_GetAccountDetails_Response.account_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.account_name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.account_name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_account_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.account_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_name_.IsDefault()) {
          _impl_.account_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CGCSystemMsg_GetAccountDetails_Response.account_name)
}

// optional string persona_name = 3;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_persona_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_persona_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.persona_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CGCSystemMsg_GetAccountDetails_Response::persona_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.persona_name)
  return _internal_persona_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CGCSystemMsg_GetAccountDetails_Response::set_persona_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.persona_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.persona_name)
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_persona_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_persona_name();
  // @@protoc_insertion_point(field_mutable:CGCSystemMsg_GetAccountDetails_Response.persona_name)
  return _s;
}
inline const std::string& CGCSystemMsg_GetAccountDetails_Response::_internal_persona_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.persona_name_.Get();
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_persona_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.persona_name_.Set(value, GetArena());
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::_internal_mutable_persona_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.persona_name_.Mutable( GetArena());
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::release_persona_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGCSystemMsg_GetAccountDetails_Response.persona_name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.persona_name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.persona_name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_persona_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.persona_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.persona_name_.IsDefault()) {
          _impl_.persona_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CGCSystemMsg_GetAccountDetails_Response.persona_name)
}

// optional bool is_profile_created = 26;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_profile_created() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_profile_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_profile_created_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_profile_created() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_profile_created)
  return _internal_is_profile_created();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_profile_created(bool value) {
  _internal_set_is_profile_created(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_profile_created)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_profile_created() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_profile_created_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_profile_created(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_profile_created_ = value;
}

// optional bool is_profile_public = 4;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_profile_public() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_profile_public() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_profile_public_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_profile_public() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_profile_public)
  return _internal_is_profile_public();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_profile_public(bool value) {
  _internal_set_is_profile_public(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_profile_public)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_profile_public() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_profile_public_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_profile_public(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_profile_public_ = value;
}

// optional bool is_inventory_public = 5;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_inventory_public() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_inventory_public() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_inventory_public_ = false;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_inventory_public() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_inventory_public)
  return _internal_is_inventory_public();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_inventory_public(bool value) {
  _internal_set_is_inventory_public(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_inventory_public)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_inventory_public() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_inventory_public_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_inventory_public(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_inventory_public_ = value;
}

// optional bool is_vac_banned = 7;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_vac_banned() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_vac_banned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_vac_banned_ = false;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_vac_banned() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_vac_banned)
  return _internal_is_vac_banned();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_vac_banned(bool value) {
  _internal_set_is_vac_banned(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_vac_banned)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_vac_banned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_vac_banned_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_vac_banned(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_vac_banned_ = value;
}

// optional bool is_cyber_cafe = 8;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_cyber_cafe() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_cyber_cafe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_cyber_cafe_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_cyber_cafe() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_cyber_cafe)
  return _internal_is_cyber_cafe();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_cyber_cafe(bool value) {
  _internal_set_is_cyber_cafe(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_cyber_cafe)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_cyber_cafe() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_cyber_cafe_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_cyber_cafe(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_cyber_cafe_ = value;
}

// optional bool is_school_account = 9;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_school_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_school_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_school_account_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_school_account() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_school_account)
  return _internal_is_school_account();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_school_account(bool value) {
  _internal_set_is_school_account(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_school_account)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_school_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_school_account_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_school_account(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_school_account_ = value;
}

// optional bool is_limited = 10;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_limited() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_limited() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_limited_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_limited() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_limited)
  return _internal_is_limited();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_limited(bool value) {
  _internal_set_is_limited(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_limited)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_limited() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_limited_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_limited(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_limited_ = value;
}

// optional bool is_subscribed = 11;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_subscribed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_subscribed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_subscribed_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_subscribed() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_subscribed)
  return _internal_is_subscribed();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_subscribed(bool value) {
  _internal_set_is_subscribed(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_subscribed)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_subscribed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_subscribed_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_subscribed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_subscribed_ = value;
}

// optional uint32 package = 12;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_package() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_package() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_ = 0u;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::package() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.package)
  return _internal_package();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_package(::uint32_t value) {
  _internal_set_package(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.package)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_package() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.package_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_package(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_ = value;
}

// optional bool is_free_trial_account = 13;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_free_trial_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_free_trial_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_free_trial_account_ = false;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_free_trial_account() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_free_trial_account)
  return _internal_is_free_trial_account();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_free_trial_account(bool value) {
  _internal_set_is_free_trial_account(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_free_trial_account)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_free_trial_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_free_trial_account_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_free_trial_account(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_free_trial_account_ = value;
}

// optional uint32 free_trial_expiration = 14;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_free_trial_expiration() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_free_trial_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.free_trial_expiration_ = 0u;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::free_trial_expiration() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.free_trial_expiration)
  return _internal_free_trial_expiration();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_free_trial_expiration(::uint32_t value) {
  _internal_set_free_trial_expiration(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.free_trial_expiration)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_free_trial_expiration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.free_trial_expiration_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_free_trial_expiration(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.free_trial_expiration_ = value;
}

// optional bool is_low_violence = 15;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_low_violence() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_low_violence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_low_violence_ = false;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_low_violence() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_low_violence)
  return _internal_is_low_violence();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_low_violence(bool value) {
  _internal_set_is_low_violence(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_low_violence)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_low_violence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_low_violence_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_low_violence(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_low_violence_ = value;
}

// optional bool is_account_locked_down = 16;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_account_locked_down() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_account_locked_down() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_account_locked_down_ = false;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_account_locked_down() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_account_locked_down)
  return _internal_is_account_locked_down();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_account_locked_down(bool value) {
  _internal_set_is_account_locked_down(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_account_locked_down)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_account_locked_down() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_account_locked_down_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_account_locked_down(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_account_locked_down_ = value;
}

// optional bool is_community_banned = 17;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_community_banned() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_community_banned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_community_banned_ = false;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_community_banned() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_community_banned)
  return _internal_is_community_banned();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_community_banned(bool value) {
  _internal_set_is_community_banned(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_community_banned)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_community_banned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_community_banned_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_community_banned(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_community_banned_ = value;
}

// optional bool is_trade_banned = 18;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_trade_banned() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_trade_banned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_trade_banned_ = false;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_trade_banned() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_trade_banned)
  return _internal_is_trade_banned();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_trade_banned(bool value) {
  _internal_set_is_trade_banned(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_trade_banned)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_trade_banned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_trade_banned_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_trade_banned(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_trade_banned_ = value;
}

// optional uint32 trade_ban_expiration = 19;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_trade_ban_expiration() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_trade_ban_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_ban_expiration_ = 0u;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::trade_ban_expiration() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.trade_ban_expiration)
  return _internal_trade_ban_expiration();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_trade_ban_expiration(::uint32_t value) {
  _internal_set_trade_ban_expiration(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.trade_ban_expiration)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_trade_ban_expiration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trade_ban_expiration_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_trade_ban_expiration(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_ban_expiration_ = value;
}

// optional uint32 accountid = 20;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_accountid() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::accountid() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.accountid)
  return _internal_accountid();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_accountid(::uint32_t value) {
  _internal_set_accountid(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.accountid)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_accountid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// optional uint32 suspension_end_time = 21;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_suspension_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_suspension_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suspension_end_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::suspension_end_time() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.suspension_end_time)
  return _internal_suspension_end_time();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_suspension_end_time(::uint32_t value) {
  _internal_set_suspension_end_time(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.suspension_end_time)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_suspension_end_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suspension_end_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_suspension_end_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suspension_end_time_ = value;
}

// optional string currency = 22;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_currency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CGCSystemMsg_GetAccountDetails_Response::currency() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.currency)
  return _internal_currency();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CGCSystemMsg_GetAccountDetails_Response::set_currency(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.currency_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.currency)
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_currency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currency();
  // @@protoc_insertion_point(field_mutable:CGCSystemMsg_GetAccountDetails_Response.currency)
  return _s;
}
inline const std::string& CGCSystemMsg_GetAccountDetails_Response::_internal_currency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_.Get();
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_currency(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.currency_.Set(value, GetArena());
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::_internal_mutable_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.currency_.Mutable( GetArena());
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::release_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGCSystemMsg_GetAccountDetails_Response.currency)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.currency_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.currency_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_currency(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.currency_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currency_.IsDefault()) {
          _impl_.currency_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CGCSystemMsg_GetAccountDetails_Response.currency)
}

// optional uint32 steam_level = 23;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_steam_level() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_steam_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steam_level_ = 0u;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::steam_level() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.steam_level)
  return _internal_steam_level();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_steam_level(::uint32_t value) {
  _internal_set_steam_level(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.steam_level)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_steam_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steam_level_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_steam_level(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steam_level_ = value;
}

// optional uint32 friend_count = 24;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_friend_count() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_friend_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_count_ = 0u;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::friend_count() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.friend_count)
  return _internal_friend_count();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_friend_count(::uint32_t value) {
  _internal_set_friend_count(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.friend_count)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_friend_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.friend_count_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_friend_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.friend_count_ = value;
}

// optional uint32 account_creation_time = 25;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_account_creation_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_account_creation_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_creation_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::account_creation_time() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.account_creation_time)
  return _internal_account_creation_time();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_account_creation_time(::uint32_t value) {
  _internal_set_account_creation_time(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.account_creation_time)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_account_creation_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_creation_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_account_creation_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_creation_time_ = value;
}

// optional bool is_steamguard_enabled = 27;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_steamguard_enabled() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_steamguard_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_steamguard_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_steamguard_enabled() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_steamguard_enabled)
  return _internal_is_steamguard_enabled();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_steamguard_enabled(bool value) {
  _internal_set_is_steamguard_enabled(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_steamguard_enabled)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_steamguard_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_steamguard_enabled_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_steamguard_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_steamguard_enabled_ = value;
}

// optional bool is_phone_verified = 28;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_phone_verified() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_phone_verified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_phone_verified_ = false;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_phone_verified() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_phone_verified)
  return _internal_is_phone_verified();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_phone_verified(bool value) {
  _internal_set_is_phone_verified(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_phone_verified)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_phone_verified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_phone_verified_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_phone_verified(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_phone_verified_ = value;
}

// optional bool is_two_factor_auth_enabled = 29;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_two_factor_auth_enabled() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_two_factor_auth_enabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_two_factor_auth_enabled_ = false;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_two_factor_auth_enabled() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_two_factor_auth_enabled)
  return _internal_is_two_factor_auth_enabled();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_two_factor_auth_enabled(bool value) {
  _internal_set_is_two_factor_auth_enabled(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_two_factor_auth_enabled)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_two_factor_auth_enabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_two_factor_auth_enabled_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_two_factor_auth_enabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_two_factor_auth_enabled_ = value;
}

// optional uint32 two_factor_enabled_time = 30;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_two_factor_enabled_time() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_two_factor_enabled_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.two_factor_enabled_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::two_factor_enabled_time() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.two_factor_enabled_time)
  return _internal_two_factor_enabled_time();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_two_factor_enabled_time(::uint32_t value) {
  _internal_set_two_factor_enabled_time(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.two_factor_enabled_time)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_two_factor_enabled_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.two_factor_enabled_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_two_factor_enabled_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.two_factor_enabled_time_ = value;
}

// optional uint32 phone_verification_time = 31;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_phone_verification_time() const {
  bool value = (_impl_._has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_phone_verification_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_verification_time_ = 0u;
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::phone_verification_time() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.phone_verification_time)
  return _internal_phone_verification_time();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_phone_verification_time(::uint32_t value) {
  _internal_set_phone_verification_time(value);
  _impl_._has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.phone_verification_time)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_phone_verification_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_verification_time_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_phone_verification_time(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_verification_time_ = value;
}

// optional uint64 phone_id = 33;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_phone_id() const {
  bool value = (_impl_._has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_phone_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline ::uint64_t CGCSystemMsg_GetAccountDetails_Response::phone_id() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.phone_id)
  return _internal_phone_id();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_phone_id(::uint64_t value) {
  _internal_set_phone_id(value);
  _impl_._has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.phone_id)
}
inline ::uint64_t CGCSystemMsg_GetAccountDetails_Response::_internal_phone_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_id_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_phone_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_id_ = value;
}

// optional bool is_phone_identifying = 34;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_phone_identifying() const {
  bool value = (_impl_._has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_phone_identifying() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_phone_identifying_ = false;
  _impl_._has_bits_[1] &= ~0x00000002u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_phone_identifying() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_phone_identifying)
  return _internal_is_phone_identifying();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_phone_identifying(bool value) {
  _internal_set_is_phone_identifying(value);
  _impl_._has_bits_[1] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_phone_identifying)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_phone_identifying() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_phone_identifying_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_phone_identifying(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_phone_identifying_ = value;
}

// optional uint32 rt_identity_linked = 35;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_rt_identity_linked() const {
  bool value = (_impl_._has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_rt_identity_linked() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rt_identity_linked_ = 0u;
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::rt_identity_linked() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.rt_identity_linked)
  return _internal_rt_identity_linked();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_rt_identity_linked(::uint32_t value) {
  _internal_set_rt_identity_linked(value);
  _impl_._has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.rt_identity_linked)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_rt_identity_linked() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rt_identity_linked_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_rt_identity_linked(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rt_identity_linked_ = value;
}

// optional uint32 rt_birth_date = 36;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_rt_birth_date() const {
  bool value = (_impl_._has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_rt_birth_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rt_birth_date_ = 0u;
  _impl_._has_bits_[1] &= ~0x00000001u;
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::rt_birth_date() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.rt_birth_date)
  return _internal_rt_birth_date();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_rt_birth_date(::uint32_t value) {
  _internal_set_rt_birth_date(value);
  _impl_._has_bits_[1] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.rt_birth_date)
}
inline ::uint32_t CGCSystemMsg_GetAccountDetails_Response::_internal_rt_birth_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rt_birth_date_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_rt_birth_date(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rt_birth_date_ = value;
}

// optional string txn_country_code = 37;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_txn_country_code() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_txn_country_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txn_country_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CGCSystemMsg_GetAccountDetails_Response::txn_country_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
  return _internal_txn_country_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CGCSystemMsg_GetAccountDetails_Response::set_txn_country_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.txn_country_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::mutable_txn_country_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txn_country_code();
  // @@protoc_insertion_point(field_mutable:CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
  return _s;
}
inline const std::string& CGCSystemMsg_GetAccountDetails_Response::_internal_txn_country_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txn_country_code_.Get();
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_txn_country_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.txn_country_code_.Set(value, GetArena());
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::_internal_mutable_txn_country_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.txn_country_code_.Mutable( GetArena());
}
inline std::string* CGCSystemMsg_GetAccountDetails_Response::release_txn_country_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.txn_country_code_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.txn_country_code_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_allocated_txn_country_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.txn_country_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.txn_country_code_.IsDefault()) {
          _impl_.txn_country_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CGCSystemMsg_GetAccountDetails_Response.txn_country_code)
}

// optional bool has_accepted_china_ssa = 38;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_has_accepted_china_ssa() const {
  bool value = (_impl_._has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_has_accepted_china_ssa() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_accepted_china_ssa_ = false;
  _impl_._has_bits_[1] &= ~0x00000004u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::has_accepted_china_ssa() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.has_accepted_china_ssa)
  return _internal_has_accepted_china_ssa();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_has_accepted_china_ssa(bool value) {
  _internal_set_has_accepted_china_ssa(value);
  _impl_._has_bits_[1] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.has_accepted_china_ssa)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_has_accepted_china_ssa() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.has_accepted_china_ssa_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_has_accepted_china_ssa(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_accepted_china_ssa_ = value;
}

// optional bool is_banned_steam_china = 39;
inline bool CGCSystemMsg_GetAccountDetails_Response::has_is_banned_steam_china() const {
  bool value = (_impl_._has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline void CGCSystemMsg_GetAccountDetails_Response::clear_is_banned_steam_china() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_banned_steam_china_ = false;
  _impl_._has_bits_[1] &= ~0x00000008u;
}
inline bool CGCSystemMsg_GetAccountDetails_Response::is_banned_steam_china() const {
  // @@protoc_insertion_point(field_get:CGCSystemMsg_GetAccountDetails_Response.is_banned_steam_china)
  return _internal_is_banned_steam_china();
}
inline void CGCSystemMsg_GetAccountDetails_Response::set_is_banned_steam_china(bool value) {
  _internal_set_is_banned_steam_china(value);
  _impl_._has_bits_[1] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CGCSystemMsg_GetAccountDetails_Response.is_banned_steam_china)
}
inline bool CGCSystemMsg_GetAccountDetails_Response::_internal_is_banned_steam_china() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_banned_steam_china_;
}
inline void CGCSystemMsg_GetAccountDetails_Response::_internal_set_is_banned_steam_china(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_banned_steam_china_ = value;
}

// -------------------------------------------------------------------

// CIPLocationInfo

// optional uint32 ip = 1;
inline bool CIPLocationInfo::has_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void CIPLocationInfo::clear_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t CIPLocationInfo::ip() const {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.ip)
  return _internal_ip();
}
inline void CIPLocationInfo::set_ip(::uint32_t value) {
  _internal_set_ip(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:CIPLocationInfo.ip)
}
inline ::uint32_t CIPLocationInfo::_internal_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ip_;
}
inline void CIPLocationInfo::_internal_set_ip(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ip_ = value;
}

// optional float latitude = 2;
inline bool CIPLocationInfo::has_latitude() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void CIPLocationInfo::clear_latitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float CIPLocationInfo::latitude() const {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.latitude)
  return _internal_latitude();
}
inline void CIPLocationInfo::set_latitude(float value) {
  _internal_set_latitude(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:CIPLocationInfo.latitude)
}
inline float CIPLocationInfo::_internal_latitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_;
}
inline void CIPLocationInfo::_internal_set_latitude(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_ = value;
}

// optional float longitude = 3;
inline bool CIPLocationInfo::has_longitude() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void CIPLocationInfo::clear_longitude() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float CIPLocationInfo::longitude() const {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.longitude)
  return _internal_longitude();
}
inline void CIPLocationInfo::set_longitude(float value) {
  _internal_set_longitude(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:CIPLocationInfo.longitude)
}
inline float CIPLocationInfo::_internal_longitude() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_;
}
inline void CIPLocationInfo::_internal_set_longitude(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_ = value;
}

// optional string country = 4;
inline bool CIPLocationInfo::has_country() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void CIPLocationInfo::clear_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.country_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CIPLocationInfo::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CIPLocationInfo::set_country(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CIPLocationInfo.country)
}
inline std::string* CIPLocationInfo::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:CIPLocationInfo.country)
  return _s;
}
inline const std::string& CIPLocationInfo::_internal_country() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.country_.Get();
}
inline void CIPLocationInfo::_internal_set_country(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.country_.Set(value, GetArena());
}
inline std::string* CIPLocationInfo::_internal_mutable_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.country_.Mutable( GetArena());
}
inline std::string* CIPLocationInfo::release_country() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CIPLocationInfo.country)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.country_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.country_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CIPLocationInfo::set_allocated_country(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.country_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.country_.IsDefault()) {
          _impl_.country_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CIPLocationInfo.country)
}

// optional string state = 5;
inline bool CIPLocationInfo::has_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void CIPLocationInfo::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CIPLocationInfo::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CIPLocationInfo::set_state(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CIPLocationInfo.state)
}
inline std::string* CIPLocationInfo::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:CIPLocationInfo.state)
  return _s;
}
inline const std::string& CIPLocationInfo::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_.Get();
}
inline void CIPLocationInfo::_internal_set_state(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.state_.Set(value, GetArena());
}
inline std::string* CIPLocationInfo::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.state_.Mutable( GetArena());
}
inline std::string* CIPLocationInfo::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CIPLocationInfo.state)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.state_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CIPLocationInfo::set_allocated_state(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.state_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_.IsDefault()) {
          _impl_.state_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CIPLocationInfo.state)
}

// optional string city = 6;
inline bool CIPLocationInfo::has_city() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void CIPLocationInfo::clear_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.city_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CIPLocationInfo::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CIPLocationInfo.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CIPLocationInfo::set_city(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CIPLocationInfo.city)
}
inline std::string* CIPLocationInfo::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:CIPLocationInfo.city)
  return _s;
}
inline const std::string& CIPLocationInfo::_internal_city() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.city_.Get();
}
inline void CIPLocationInfo::_internal_set_city(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.city_.Set(value, GetArena());
}
inline std::string* CIPLocationInfo::_internal_mutable_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.city_.Mutable( GetArena());
}
inline std::string* CIPLocationInfo::release_city() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CIPLocationInfo.city)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.city_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.city_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void CIPLocationInfo::set_allocated_city(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.city_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.city_.IsDefault()) {
          _impl_.city_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CIPLocationInfo.city)
}

// -------------------------------------------------------------------

// CGCMsgGetIPLocationResponse

// repeated .CIPLocationInfo infos = 1;
inline int CGCMsgGetIPLocationResponse::_internal_infos_size() const {
  return _internal_infos().size();
}
inline int CGCMsgGetIPLocationResponse::infos_size() const {
  return _internal_infos_size();
}
inline void CGCMsgGetIPLocationResponse::clear_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.infos_.Clear();
}
inline ::CIPLocationInfo* CGCMsgGetIPLocationResponse::mutable_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:CGCMsgGetIPLocationResponse.infos)
  return _internal_mutable_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::CIPLocationInfo>* CGCMsgGetIPLocationResponse::mutable_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CGCMsgGetIPLocationResponse.infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_infos();
}
inline const ::CIPLocationInfo& CGCMsgGetIPLocationResponse::infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CGCMsgGetIPLocationResponse.infos)
  return _internal_infos().Get(index);
}
inline ::CIPLocationInfo* CGCMsgGetIPLocationResponse::add_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::CIPLocationInfo* _add = _internal_mutable_infos()->Add();
  // @@protoc_insertion_point(field_add:CGCMsgGetIPLocationResponse.infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::CIPLocationInfo>& CGCMsgGetIPLocationResponse::infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CGCMsgGetIPLocationResponse.infos)
  return _internal_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::CIPLocationInfo>&
CGCMsgGetIPLocationResponse::_internal_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.infos_;
}
inline ::google::protobuf::RepeatedPtrField<::CIPLocationInfo>*
CGCMsgGetIPLocationResponse::_internal_mutable_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.infos_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::EGCPlatform> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::EGCPlatform>() {
  return ::EGCPlatform_descriptor();
}
template <>
struct is_proto_enum<::GCProtoBufMsgSrc> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::GCProtoBufMsgSrc>() {
  return ::GCProtoBufMsgSrc_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_steammessages_2eproto_2epb_2eh
